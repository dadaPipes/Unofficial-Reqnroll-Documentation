{
  "api/Reqnroll.AfterAttribute.html": {
    "href": "api/Reqnroll.AfterAttribute.html",
    "title": "Class AfterAttribute | Unofficial Reqnroll Documentation",
    "summary": "Class AfterAttribute Namespace Reqnroll Assembly Reqnroll.dll Specifies a hook to be executed after each scenario. This attribute is a synonym to AfterScenarioAttribute. public class AfterAttribute : AfterScenarioAttribute Inheritance object Attribute HookAttribute AfterScenarioAttribute AfterAttribute Inherited Members HookAttribute.Tags HookAttribute.Order HookAttribute.DefaultOrder Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AfterAttribute(params string[]) public AfterAttribute(params string[] tags) Parameters tags string[]"
  },
  "api/Reqnroll.AfterFeatureAttribute.html": {
    "href": "api/Reqnroll.AfterFeatureAttribute.html",
    "title": "Class AfterFeatureAttribute | Unofficial Reqnroll Documentation",
    "summary": "Class AfterFeatureAttribute Namespace Reqnroll Assembly Reqnroll.dll public class AfterFeatureAttribute : HookAttribute Inheritance object Attribute HookAttribute AfterFeatureAttribute Inherited Members HookAttribute.Tags HookAttribute.Order HookAttribute.DefaultOrder Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AfterFeatureAttribute(params string[]) public AfterFeatureAttribute(params string[] tags) Parameters tags string[]"
  },
  "api/Reqnroll.AfterScenarioAttribute.html": {
    "href": "api/Reqnroll.AfterScenarioAttribute.html",
    "title": "Class AfterScenarioAttribute | Unofficial Reqnroll Documentation",
    "summary": "Class AfterScenarioAttribute Namespace Reqnroll Assembly Reqnroll.dll Specifies a hook to be executed after each scenario. public class AfterScenarioAttribute : HookAttribute Inheritance object Attribute HookAttribute AfterScenarioAttribute Derived AfterAttribute Inherited Members HookAttribute.Tags HookAttribute.Order HookAttribute.DefaultOrder Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AfterScenarioAttribute(params string[]) public AfterScenarioAttribute(params string[] tags) Parameters tags string[]"
  },
  "api/Reqnroll.AfterScenarioBlockAttribute.html": {
    "href": "api/Reqnroll.AfterScenarioBlockAttribute.html",
    "title": "Class AfterScenarioBlockAttribute | Unofficial Reqnroll Documentation",
    "summary": "Class AfterScenarioBlockAttribute Namespace Reqnroll Assembly Reqnroll.dll public class AfterScenarioBlockAttribute : HookAttribute Inheritance object Attribute HookAttribute AfterScenarioBlockAttribute Inherited Members HookAttribute.Tags HookAttribute.Order HookAttribute.DefaultOrder Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AfterScenarioBlockAttribute(params string[]) public AfterScenarioBlockAttribute(params string[] tags) Parameters tags string[]"
  },
  "api/Reqnroll.AfterStepAttribute.html": {
    "href": "api/Reqnroll.AfterStepAttribute.html",
    "title": "Class AfterStepAttribute | Unofficial Reqnroll Documentation",
    "summary": "Class AfterStepAttribute Namespace Reqnroll Assembly Reqnroll.dll public class AfterStepAttribute : HookAttribute Inheritance object Attribute HookAttribute AfterStepAttribute Inherited Members HookAttribute.Tags HookAttribute.Order HookAttribute.DefaultOrder Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AfterStepAttribute(params string[]) public AfterStepAttribute(params string[] tags) Parameters tags string[]"
  },
  "api/Reqnroll.AfterTestRunAttribute.html": {
    "href": "api/Reqnroll.AfterTestRunAttribute.html",
    "title": "Class AfterTestRunAttribute | Unofficial Reqnroll Documentation",
    "summary": "Class AfterTestRunAttribute Namespace Reqnroll Assembly Reqnroll.dll public class AfterTestRunAttribute : HookAttribute Inheritance object Attribute HookAttribute AfterTestRunAttribute Inherited Members HookAttribute.Tags HookAttribute.Order HookAttribute.DefaultOrder Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AfterTestRunAttribute() public AfterTestRunAttribute()"
  },
  "api/Reqnroll.Analytics.AnalyticsEventProvider.html": {
    "href": "api/Reqnroll.Analytics.AnalyticsEventProvider.html",
    "title": "Class AnalyticsEventProvider | Unofficial Reqnroll Documentation",
    "summary": "Class AnalyticsEventProvider Namespace Reqnroll.Analytics Assembly Reqnroll.dll public class AnalyticsEventProvider : IAnalyticsEventProvider Inheritance object AnalyticsEventProvider Implements IAnalyticsEventProvider Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AnalyticsEventProvider(IUserUniqueIdStore, UnitTestProviderConfiguration, IEnvironmentWrapper) public AnalyticsEventProvider(IUserUniqueIdStore userUniqueIdStore, UnitTestProviderConfiguration unitTestProviderConfiguration, IEnvironmentWrapper environmentWrapper) Parameters userUniqueIdStore IUserUniqueIdStore unitTestProviderConfiguration UnitTestProviderConfiguration environmentWrapper IEnvironmentWrapper Methods CreateProjectCompilingEvent(string, string, string, string, string) public ReqnrollProjectCompilingEvent CreateProjectCompilingEvent(string msbuildVersion, string assemblyName, string targetFrameworks, string targetFramework, string projectGuid) Parameters msbuildVersion string assemblyName string targetFrameworks string targetFramework string projectGuid string Returns ReqnrollProjectCompilingEvent CreateProjectRunningEvent(string) public ReqnrollProjectRunningEvent CreateProjectRunningEvent(string testAssemblyName) Parameters testAssemblyName string Returns ReqnrollProjectRunningEvent"
  },
  "api/Reqnroll.Analytics.AnalyticsTransmitter.html": {
    "href": "api/Reqnroll.Analytics.AnalyticsTransmitter.html",
    "title": "Class AnalyticsTransmitter | Unofficial Reqnroll Documentation",
    "summary": "Class AnalyticsTransmitter Namespace Reqnroll.Analytics Assembly Reqnroll.dll public class AnalyticsTransmitter : IAnalyticsTransmitter Inheritance object AnalyticsTransmitter Implements IAnalyticsTransmitter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AnalyticsTransmitter(IAnalyticsTransmitterSink, IEnvironmentReqnrollTelemetryChecker) public AnalyticsTransmitter(IAnalyticsTransmitterSink analyticsTransmitterSink, IEnvironmentReqnrollTelemetryChecker environmentReqnrollTelemetryChecker) Parameters analyticsTransmitterSink IAnalyticsTransmitterSink environmentReqnrollTelemetryChecker IEnvironmentReqnrollTelemetryChecker Properties IsEnabled public bool IsEnabled { get; } Property Value bool Methods TransmitEventAsync(IAnalyticsEvent) public Task<IResult> TransmitEventAsync(IAnalyticsEvent analyticsEvent) Parameters analyticsEvent IAnalyticsEvent Returns Task<IResult> TransmitReqnrollProjectCompilingEventAsync(ReqnrollProjectCompilingEvent) public Task<IResult> TransmitReqnrollProjectCompilingEventAsync(ReqnrollProjectCompilingEvent projectCompilingEvent) Parameters projectCompilingEvent ReqnrollProjectCompilingEvent Returns Task<IResult> TransmitReqnrollProjectRunningEventAsync(ReqnrollProjectRunningEvent) public Task<IResult> TransmitReqnrollProjectRunningEventAsync(ReqnrollProjectRunningEvent projectRunningEvent) Parameters projectRunningEvent ReqnrollProjectRunningEvent Returns Task<IResult>"
  },
  "api/Reqnroll.Analytics.AppInsights.AppInsightsEventSerializer.html": {
    "href": "api/Reqnroll.Analytics.AppInsights.AppInsightsEventSerializer.html",
    "title": "Class AppInsightsEventSerializer | Unofficial Reqnroll Documentation",
    "summary": "Class AppInsightsEventSerializer Namespace Reqnroll.Analytics.AppInsights Assembly Reqnroll.dll public class AppInsightsEventSerializer : IAppInsightsEventSerializer Inheritance object AppInsightsEventSerializer Implements IAppInsightsEventSerializer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods SerializeAnalyticsEvent(IAnalyticsEvent, string) public byte[] SerializeAnalyticsEvent(IAnalyticsEvent analyticsEvent, string instrumentationKey) Parameters analyticsEvent IAnalyticsEvent instrumentationKey string Returns byte[]"
  },
  "api/Reqnroll.Analytics.AppInsights.AppInsightsEventTelemetry.html": {
    "href": "api/Reqnroll.Analytics.AppInsights.AppInsightsEventTelemetry.html",
    "title": "Class AppInsightsEventTelemetry | Unofficial Reqnroll Documentation",
    "summary": "Class AppInsightsEventTelemetry Namespace Reqnroll.Analytics.AppInsights Assembly Reqnroll.dll For property names, check: https://github.com/microsoft/ApplicationInsights-Home/tree/master/EndpointSpecs/Schemas/Bond For tags, check: https://github.com/microsoft/ApplicationInsights-Home/blob/master/EndpointSpecs/Schemas/Bond/ContextTagKeys.bond public class AppInsightsEventTelemetry Inheritance object AppInsightsEventTelemetry Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AppInsightsEventTelemetry(IAnalyticsEvent, string) public AppInsightsEventTelemetry(IAnalyticsEvent analyticsEvent, string instrumentationKey) Parameters analyticsEvent IAnalyticsEvent instrumentationKey string Properties DataTypeName [JsonPropertyName(\"name\")] public string DataTypeName { get; set; } Property Value string EventDateTime [JsonPropertyName(\"time\")] public string EventDateTime { get; set; } Property Value string InstrumentationKey [JsonPropertyName(\"iKey\")] public string InstrumentationKey { get; set; } Property Value string TelemetryData [JsonPropertyName(\"data\")] public TelemetryData TelemetryData { get; set; } Property Value TelemetryData TelemetryTags [JsonPropertyName(\"tags\")] public Dictionary<string, string> TelemetryTags { get; set; } Property Value Dictionary<string, string>"
  },
  "api/Reqnroll.Analytics.AppInsights.AppInsightsInstrumentationKey.html": {
    "href": "api/Reqnroll.Analytics.AppInsights.AppInsightsInstrumentationKey.html",
    "title": "Class AppInsightsInstrumentationKey | Unofficial Reqnroll Documentation",
    "summary": "Class AppInsightsInstrumentationKey Namespace Reqnroll.Analytics.AppInsights Assembly Reqnroll.dll public static class AppInsightsInstrumentationKey Inheritance object AppInsightsInstrumentationKey Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Key public const string Key = \"00000000-0000-0000-0000-000000000000\" Field Value string"
  },
  "api/Reqnroll.Analytics.AppInsights.IAppInsightsEventSerializer.html": {
    "href": "api/Reqnroll.Analytics.AppInsights.IAppInsightsEventSerializer.html",
    "title": "Interface IAppInsightsEventSerializer | Unofficial Reqnroll Documentation",
    "summary": "Interface IAppInsightsEventSerializer Namespace Reqnroll.Analytics.AppInsights Assembly Reqnroll.dll public interface IAppInsightsEventSerializer Methods SerializeAnalyticsEvent(IAnalyticsEvent, string) byte[] SerializeAnalyticsEvent(IAnalyticsEvent analyticsEvent, string instrumentationKey) Parameters analyticsEvent IAnalyticsEvent instrumentationKey string Returns byte[]"
  },
  "api/Reqnroll.Analytics.AppInsights.TelemetryData.html": {
    "href": "api/Reqnroll.Analytics.AppInsights.TelemetryData.html",
    "title": "Class TelemetryData | Unofficial Reqnroll Documentation",
    "summary": "Class TelemetryData Namespace Reqnroll.Analytics.AppInsights Assembly Reqnroll.dll public class TelemetryData Inheritance object TelemetryData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ItemTypeName [JsonPropertyName(\"baseType\")] public string ItemTypeName { get; set; } Property Value string TelemetryDataItem [JsonPropertyName(\"baseData\")] public TelemetryDataItem TelemetryDataItem { get; set; } Property Value TelemetryDataItem"
  },
  "api/Reqnroll.Analytics.AppInsights.TelemetryDataItem.html": {
    "href": "api/Reqnroll.Analytics.AppInsights.TelemetryDataItem.html",
    "title": "Class TelemetryDataItem | Unofficial Reqnroll Documentation",
    "summary": "Class TelemetryDataItem Namespace Reqnroll.Analytics.AppInsights Assembly Reqnroll.dll public class TelemetryDataItem Inheritance object TelemetryDataItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties EndPointSchemaVersion [JsonPropertyName(\"ver\")] public string EndPointSchemaVersion { get; } Property Value string EventName [JsonPropertyName(\"name\")] public string EventName { get; set; } Property Value string Properties [JsonPropertyName(\"properties\")] public Dictionary<string, string> Properties { get; set; } Property Value Dictionary<string, string>"
  },
  "api/Reqnroll.Analytics.AppInsights.html": {
    "href": "api/Reqnroll.Analytics.AppInsights.html",
    "title": "Namespace Reqnroll.Analytics.AppInsights | Unofficial Reqnroll Documentation",
    "summary": "Namespace Reqnroll.Analytics.AppInsights Classes AppInsightsEventSerializer AppInsightsEventTelemetry For property names, check: https://github.com/microsoft/ApplicationInsights-Home/tree/master/EndpointSpecs/Schemas/Bond For tags, check: https://github.com/microsoft/ApplicationInsights-Home/blob/master/EndpointSpecs/Schemas/Bond/ContextTagKeys.bond AppInsightsInstrumentationKey TelemetryData TelemetryDataItem Interfaces IAppInsightsEventSerializer"
  },
  "api/Reqnroll.Analytics.EnvironmentReqnrollTelemetryChecker.html": {
    "href": "api/Reqnroll.Analytics.EnvironmentReqnrollTelemetryChecker.html",
    "title": "Class EnvironmentReqnrollTelemetryChecker | Unofficial Reqnroll Documentation",
    "summary": "Class EnvironmentReqnrollTelemetryChecker Namespace Reqnroll.Analytics Assembly Reqnroll.dll public class EnvironmentReqnrollTelemetryChecker : IEnvironmentReqnrollTelemetryChecker Inheritance object EnvironmentReqnrollTelemetryChecker Implements IEnvironmentReqnrollTelemetryChecker Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ReqnrollTelemetryEnvironmentVariable public const string ReqnrollTelemetryEnvironmentVariable = \"REQNROLL_TELEMETRY_ENABLED\" Field Value string Methods IsReqnrollTelemetryEnabled() public bool IsReqnrollTelemetryEnabled() Returns bool"
  },
  "api/Reqnroll.Analytics.HttpClientAnalyticsTransmitterSink.html": {
    "href": "api/Reqnroll.Analytics.HttpClientAnalyticsTransmitterSink.html",
    "title": "Class HttpClientAnalyticsTransmitterSink | Unofficial Reqnroll Documentation",
    "summary": "Class HttpClientAnalyticsTransmitterSink Namespace Reqnroll.Analytics Assembly Reqnroll.dll public class HttpClientAnalyticsTransmitterSink : IAnalyticsTransmitterSink Inheritance object HttpClientAnalyticsTransmitterSink Implements IAnalyticsTransmitterSink Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors HttpClientAnalyticsTransmitterSink(IAppInsightsEventSerializer, HttpClientWrapper) public HttpClientAnalyticsTransmitterSink(IAppInsightsEventSerializer appInsightsEventSerializer, HttpClientWrapper httpClientWrapper) Parameters appInsightsEventSerializer IAppInsightsEventSerializer httpClientWrapper HttpClientWrapper Methods TransmitEventAsync(IAnalyticsEvent, string) public Task<IResult> TransmitEventAsync(IAnalyticsEvent analyticsEvent, string instrumentationKey) Parameters analyticsEvent IAnalyticsEvent instrumentationKey string Returns Task<IResult>"
  },
  "api/Reqnroll.Analytics.HttpClientWrapper.html": {
    "href": "api/Reqnroll.Analytics.HttpClientWrapper.html",
    "title": "Class HttpClientWrapper | Unofficial Reqnroll Documentation",
    "summary": "Class HttpClientWrapper Namespace Reqnroll.Analytics Assembly Reqnroll.dll public class HttpClientWrapper Inheritance object HttpClientWrapper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties HttpClient public HttpClient HttpClient { get; } Property Value HttpClient"
  },
  "api/Reqnroll.Analytics.IAnalyticsEvent.html": {
    "href": "api/Reqnroll.Analytics.IAnalyticsEvent.html",
    "title": "Interface IAnalyticsEvent | Unofficial Reqnroll Documentation",
    "summary": "Interface IAnalyticsEvent Namespace Reqnroll.Analytics Assembly Reqnroll.dll public interface IAnalyticsEvent Properties BuildServerName string BuildServerName { get; } Property Value string EventName string EventName { get; } Property Value string HashedAssemblyName string HashedAssemblyName { get; } Property Value string IsBuildServer bool IsBuildServer { get; } Property Value bool IsDockerContainer bool IsDockerContainer { get; } Property Value bool Platform string Platform { get; } Property Value string PlatformDescription string PlatformDescription { get; } Property Value string ReqnrollVersion string ReqnrollVersion { get; } Property Value string TargetFramework string TargetFramework { get; } Property Value string TargetFrameworks string TargetFrameworks { get; } Property Value string UnitTestProvider string UnitTestProvider { get; } Property Value string UserId string UserId { get; } Property Value string UtcDate DateTime UtcDate { get; } Property Value DateTime"
  },
  "api/Reqnroll.Analytics.IAnalyticsEventProvider.html": {
    "href": "api/Reqnroll.Analytics.IAnalyticsEventProvider.html",
    "title": "Interface IAnalyticsEventProvider | Unofficial Reqnroll Documentation",
    "summary": "Interface IAnalyticsEventProvider Namespace Reqnroll.Analytics Assembly Reqnroll.dll public interface IAnalyticsEventProvider Methods CreateProjectCompilingEvent(string, string, string, string, string) ReqnrollProjectCompilingEvent CreateProjectCompilingEvent(string msbuildVersion, string assemblyName, string targetFrameworks, string targetFramework, string projectGuid) Parameters msbuildVersion string assemblyName string targetFrameworks string targetFramework string projectGuid string Returns ReqnrollProjectCompilingEvent CreateProjectRunningEvent(string) ReqnrollProjectRunningEvent CreateProjectRunningEvent(string testAssemblyName) Parameters testAssemblyName string Returns ReqnrollProjectRunningEvent"
  },
  "api/Reqnroll.Analytics.IAnalyticsTransmitter.html": {
    "href": "api/Reqnroll.Analytics.IAnalyticsTransmitter.html",
    "title": "Interface IAnalyticsTransmitter | Unofficial Reqnroll Documentation",
    "summary": "Interface IAnalyticsTransmitter Namespace Reqnroll.Analytics Assembly Reqnroll.dll public interface IAnalyticsTransmitter Properties IsEnabled bool IsEnabled { get; } Property Value bool Methods TransmitReqnrollProjectCompilingEventAsync(ReqnrollProjectCompilingEvent) Task<IResult> TransmitReqnrollProjectCompilingEventAsync(ReqnrollProjectCompilingEvent projectCompilingEvent) Parameters projectCompilingEvent ReqnrollProjectCompilingEvent Returns Task<IResult> TransmitReqnrollProjectRunningEventAsync(ReqnrollProjectRunningEvent) Task<IResult> TransmitReqnrollProjectRunningEventAsync(ReqnrollProjectRunningEvent projectRunningEvent) Parameters projectRunningEvent ReqnrollProjectRunningEvent Returns Task<IResult>"
  },
  "api/Reqnroll.Analytics.IAnalyticsTransmitterSink.html": {
    "href": "api/Reqnroll.Analytics.IAnalyticsTransmitterSink.html",
    "title": "Interface IAnalyticsTransmitterSink | Unofficial Reqnroll Documentation",
    "summary": "Interface IAnalyticsTransmitterSink Namespace Reqnroll.Analytics Assembly Reqnroll.dll public interface IAnalyticsTransmitterSink Methods TransmitEventAsync(IAnalyticsEvent, string) Task<IResult> TransmitEventAsync(IAnalyticsEvent analyticsEvent, string instrumentationKey = \"00000000-0000-0000-0000-000000000000\") Parameters analyticsEvent IAnalyticsEvent instrumentationKey string Returns Task<IResult>"
  },
  "api/Reqnroll.Analytics.IEnvironmentReqnrollTelemetryChecker.html": {
    "href": "api/Reqnroll.Analytics.IEnvironmentReqnrollTelemetryChecker.html",
    "title": "Interface IEnvironmentReqnrollTelemetryChecker | Unofficial Reqnroll Documentation",
    "summary": "Interface IEnvironmentReqnrollTelemetryChecker Namespace Reqnroll.Analytics Assembly Reqnroll.dll public interface IEnvironmentReqnrollTelemetryChecker Methods IsReqnrollTelemetryEnabled() bool IsReqnrollTelemetryEnabled() Returns bool"
  },
  "api/Reqnroll.Analytics.ReqnrollAnalyticsEventBase.html": {
    "href": "api/Reqnroll.Analytics.ReqnrollAnalyticsEventBase.html",
    "title": "Class ReqnrollAnalyticsEventBase | Unofficial Reqnroll Documentation",
    "summary": "Class ReqnrollAnalyticsEventBase Namespace Reqnroll.Analytics Assembly Reqnroll.dll public abstract class ReqnrollAnalyticsEventBase : IAnalyticsEvent Inheritance object ReqnrollAnalyticsEventBase Implements IAnalyticsEvent Derived ReqnrollProjectCompilingEvent ReqnrollProjectRunningEvent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ReqnrollAnalyticsEventBase(DateTime, string, string, string, string, string, string, string, string, string, bool) protected ReqnrollAnalyticsEventBase(DateTime utcDate, string userId, string platform, string platformDescription, string reqnrollVersion, string unitTestProvider, string buildServerName, string hashedAssemblyName, string targetFrameworks, string targetFramework, bool isDockerContainer) Parameters utcDate DateTime userId string platform string platformDescription string reqnrollVersion string unitTestProvider string buildServerName string hashedAssemblyName string targetFrameworks string targetFramework string isDockerContainer bool Properties BuildServerName public string BuildServerName { get; } Property Value string EventName public abstract string EventName { get; } Property Value string HashedAssemblyName public string HashedAssemblyName { get; } Property Value string IsBuildServer public bool IsBuildServer { get; } Property Value bool IsDockerContainer public bool IsDockerContainer { get; } Property Value bool Platform public string Platform { get; } Property Value string PlatformDescription public string PlatformDescription { get; } Property Value string ReqnrollVersion public string ReqnrollVersion { get; } Property Value string TargetFramework public string TargetFramework { get; } Property Value string TargetFrameworks public string TargetFrameworks { get; } Property Value string UnitTestProvider public string UnitTestProvider { get; } Property Value string UserId public string UserId { get; } Property Value string UtcDate public DateTime UtcDate { get; } Property Value DateTime"
  },
  "api/Reqnroll.Analytics.ReqnrollProjectCompilingEvent.html": {
    "href": "api/Reqnroll.Analytics.ReqnrollProjectCompilingEvent.html",
    "title": "Class ReqnrollProjectCompilingEvent | Unofficial Reqnroll Documentation",
    "summary": "Class ReqnrollProjectCompilingEvent Namespace Reqnroll.Analytics Assembly Reqnroll.dll public class ReqnrollProjectCompilingEvent : ReqnrollAnalyticsEventBase, IAnalyticsEvent Inheritance object ReqnrollAnalyticsEventBase ReqnrollProjectCompilingEvent Implements IAnalyticsEvent Inherited Members ReqnrollAnalyticsEventBase.UtcDate ReqnrollAnalyticsEventBase.UserId ReqnrollAnalyticsEventBase.Platform ReqnrollAnalyticsEventBase.PlatformDescription ReqnrollAnalyticsEventBase.ReqnrollVersion ReqnrollAnalyticsEventBase.UnitTestProvider ReqnrollAnalyticsEventBase.IsBuildServer ReqnrollAnalyticsEventBase.BuildServerName ReqnrollAnalyticsEventBase.HashedAssemblyName ReqnrollAnalyticsEventBase.TargetFrameworks ReqnrollAnalyticsEventBase.TargetFramework ReqnrollAnalyticsEventBase.IsDockerContainer object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ReqnrollProjectCompilingEvent(DateTime, string, string, string, string, string, string, string, string, string, string, string, bool) public ReqnrollProjectCompilingEvent(DateTime utcDate, string userId, string platform, string platformDescription, string reqnrollVersion, string unitTestProvider, string buildServerName, string hashedAssemblyName, string targetFrameworks, string targetFramework, string msBuildVersion, string projectGuid, bool isDockerContainer) Parameters utcDate DateTime userId string platform string platformDescription string reqnrollVersion string unitTestProvider string buildServerName string hashedAssemblyName string targetFrameworks string targetFramework string msBuildVersion string projectGuid string isDockerContainer bool Properties EventName public override string EventName { get; } Property Value string MSBuildVersion public string MSBuildVersion { get; } Property Value string ProjectGuid public string ProjectGuid { get; set; } Property Value string"
  },
  "api/Reqnroll.Analytics.ReqnrollProjectRunningEvent.html": {
    "href": "api/Reqnroll.Analytics.ReqnrollProjectRunningEvent.html",
    "title": "Class ReqnrollProjectRunningEvent | Unofficial Reqnroll Documentation",
    "summary": "Class ReqnrollProjectRunningEvent Namespace Reqnroll.Analytics Assembly Reqnroll.dll public class ReqnrollProjectRunningEvent : ReqnrollAnalyticsEventBase, IAnalyticsEvent Inheritance object ReqnrollAnalyticsEventBase ReqnrollProjectRunningEvent Implements IAnalyticsEvent Inherited Members ReqnrollAnalyticsEventBase.UtcDate ReqnrollAnalyticsEventBase.UserId ReqnrollAnalyticsEventBase.Platform ReqnrollAnalyticsEventBase.PlatformDescription ReqnrollAnalyticsEventBase.ReqnrollVersion ReqnrollAnalyticsEventBase.UnitTestProvider ReqnrollAnalyticsEventBase.IsBuildServer ReqnrollAnalyticsEventBase.BuildServerName ReqnrollAnalyticsEventBase.HashedAssemblyName ReqnrollAnalyticsEventBase.TargetFrameworks ReqnrollAnalyticsEventBase.TargetFramework ReqnrollAnalyticsEventBase.IsDockerContainer object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ReqnrollProjectRunningEvent(DateTime, string, string, string, string, string, string, string, string, string, bool) public ReqnrollProjectRunningEvent(DateTime utcDate, string userId, string platform, string platformDescription, string reqnrollVersion, string unitTestProvider, string buildServerName, string hashedAssemblyName, string targetFrameworks, string targetFramework, bool isDockerContainer) Parameters utcDate DateTime userId string platform string platformDescription string reqnrollVersion string unitTestProvider string buildServerName string hashedAssemblyName string targetFrameworks string targetFramework string isDockerContainer bool Properties EventName public override string EventName { get; } Property Value string"
  },
  "api/Reqnroll.Analytics.UserId.DirectoryService.html": {
    "href": "api/Reqnroll.Analytics.UserId.DirectoryService.html",
    "title": "Class DirectoryService | Unofficial Reqnroll Documentation",
    "summary": "Class DirectoryService Namespace Reqnroll.Analytics.UserId Assembly Reqnroll.dll public class DirectoryService : IDirectoryService Inheritance object DirectoryService Implements IDirectoryService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CreateDirectory(string) public void CreateDirectory(string path) Parameters path string Exists(string) public bool Exists(string path) Parameters path string Returns bool"
  },
  "api/Reqnroll.Analytics.UserId.FileService.html": {
    "href": "api/Reqnroll.Analytics.UserId.FileService.html",
    "title": "Class FileService | Unofficial Reqnroll Documentation",
    "summary": "Class FileService Namespace Reqnroll.Analytics.UserId Assembly Reqnroll.dll public class FileService : IFileService Inheritance object FileService Implements IFileService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Exists(string) public bool Exists(string path) Parameters path string Returns bool ReadAllText(string) public string ReadAllText(string path) Parameters path string Returns string WriteAllText(string, string) public void WriteAllText(string path, string contents) Parameters path string contents string"
  },
  "api/Reqnroll.Analytics.UserId.FileUserIdStore.html": {
    "href": "api/Reqnroll.Analytics.UserId.FileUserIdStore.html",
    "title": "Class FileUserIdStore | Unofficial Reqnroll Documentation",
    "summary": "Class FileUserIdStore Namespace Reqnroll.Analytics.UserId Assembly Reqnroll.dll public class FileUserIdStore : IUserUniqueIdStore Inheritance object FileUserIdStore Implements IUserUniqueIdStore Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors FileUserIdStore(IFileService, IDirectoryService) public FileUserIdStore(IFileService fileService, IDirectoryService directoryService) Parameters fileService IFileService directoryService IDirectoryService Fields UserIdFilePath public static readonly string UserIdFilePath Field Value string Methods GetUserId() public string GetUserId() Returns string"
  },
  "api/Reqnroll.Analytics.UserId.IDirectoryService.html": {
    "href": "api/Reqnroll.Analytics.UserId.IDirectoryService.html",
    "title": "Interface IDirectoryService | Unofficial Reqnroll Documentation",
    "summary": "Interface IDirectoryService Namespace Reqnroll.Analytics.UserId Assembly Reqnroll.dll public interface IDirectoryService Methods CreateDirectory(string) void CreateDirectory(string path) Parameters path string Exists(string) bool Exists(string path) Parameters path string Returns bool"
  },
  "api/Reqnroll.Analytics.UserId.IFileService.html": {
    "href": "api/Reqnroll.Analytics.UserId.IFileService.html",
    "title": "Interface IFileService | Unofficial Reqnroll Documentation",
    "summary": "Interface IFileService Namespace Reqnroll.Analytics.UserId Assembly Reqnroll.dll public interface IFileService Methods Exists(string) bool Exists(string path) Parameters path string Returns bool ReadAllText(string) string ReadAllText(string path) Parameters path string Returns string WriteAllText(string, string) void WriteAllText(string path, string contents) Parameters path string contents string"
  },
  "api/Reqnroll.Analytics.UserId.IUserUniqueIdStore.html": {
    "href": "api/Reqnroll.Analytics.UserId.IUserUniqueIdStore.html",
    "title": "Interface IUserUniqueIdStore | Unofficial Reqnroll Documentation",
    "summary": "Interface IUserUniqueIdStore Namespace Reqnroll.Analytics.UserId Assembly Reqnroll.dll public interface IUserUniqueIdStore Methods GetUserId() string GetUserId() Returns string"
  },
  "api/Reqnroll.Analytics.UserId.html": {
    "href": "api/Reqnroll.Analytics.UserId.html",
    "title": "Namespace Reqnroll.Analytics.UserId | Unofficial Reqnroll Documentation",
    "summary": "Namespace Reqnroll.Analytics.UserId Classes DirectoryService FileService FileUserIdStore Interfaces IDirectoryService IFileService IUserUniqueIdStore"
  },
  "api/Reqnroll.Analytics.html": {
    "href": "api/Reqnroll.Analytics.html",
    "title": "Namespace Reqnroll.Analytics | Unofficial Reqnroll Documentation",
    "summary": "Namespace Reqnroll.Analytics Classes AnalyticsEventProvider AnalyticsTransmitter EnvironmentReqnrollTelemetryChecker HttpClientAnalyticsTransmitterSink HttpClientWrapper ReqnrollAnalyticsEventBase ReqnrollProjectCompilingEvent ReqnrollProjectRunningEvent Interfaces IAnalyticsEvent IAnalyticsEventProvider IAnalyticsTransmitter IAnalyticsTransmitterSink IEnvironmentReqnrollTelemetryChecker"
  },
  "api/Reqnroll.Assist.Attributes.TableAliasesAttribute.html": {
    "href": "api/Reqnroll.Assist.Attributes.TableAliasesAttribute.html",
    "title": "Class TableAliasesAttribute | Unofficial Reqnroll Documentation",
    "summary": "Class TableAliasesAttribute Namespace Reqnroll.Assist.Attributes Assembly Reqnroll.dll [AttributeUsage(AttributeTargets.Property|AttributeTargets.Field, AllowMultiple = true)] public class TableAliasesAttribute : Attribute Inheritance object Attribute TableAliasesAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TableAliasesAttribute(params string[]) public TableAliasesAttribute(params string[] aliases) Parameters aliases string[] Properties Aliases public string[] Aliases { get; } Property Value string[]"
  },
  "api/Reqnroll.Assist.Attributes.html": {
    "href": "api/Reqnroll.Assist.Attributes.html",
    "title": "Namespace Reqnroll.Assist.Attributes | Unofficial Reqnroll Documentation",
    "summary": "Namespace Reqnroll.Assist.Attributes Classes TableAliasesAttribute"
  },
  "api/Reqnroll.Assist.EnumerableProjection-1.html": {
    "href": "api/Reqnroll.Assist.EnumerableProjection-1.html",
    "title": "Class EnumerableProjection<T> | Unofficial Reqnroll Documentation",
    "summary": "Class EnumerableProjection<T> Namespace Reqnroll.Assist Assembly Reqnroll.dll public class EnumerableProjection<T> : IEnumerable<Projection<T>>, IEnumerable Type Parameters T Inheritance object EnumerableProjection<T> Implements IEnumerable<Projection<T>> IEnumerable Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ProjectionExtensionMethods.ToProjection<T>(IEnumerable<T>, Table) Constructors EnumerableProjection(Table, IEnumerable<T>) public EnumerableProjection(Table table, IEnumerable<T> collection = null) Parameters table Table collection IEnumerable<T> Methods Equals(object) public override bool Equals(object obj) Parameters obj object Returns bool GetEnumerator() public IEnumerator<Projection<T>> GetEnumerator() Returns IEnumerator<Projection<T>> GetHashCode() public override int GetHashCode() Returns int"
  },
  "api/Reqnroll.Assist.FindInSetExtensionMethods.html": {
    "href": "api/Reqnroll.Assist.FindInSetExtensionMethods.html",
    "title": "Class FindInSetExtensionMethods | Unofficial Reqnroll Documentation",
    "summary": "Class FindInSetExtensionMethods Namespace Reqnroll.Assist Assembly Reqnroll.dll public static class FindInSetExtensionMethods Inheritance object FindInSetExtensionMethods Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods FindAllInSet<T>(Table, IEnumerable<T>) public static IEnumerable<T> FindAllInSet<T>(this Table table, IEnumerable<T> set) Parameters table Table set IEnumerable<T> Returns IEnumerable<T> Type Parameters T FindInSet<T>(Table, IEnumerable<T>) public static T FindInSet<T>(this Table table, IEnumerable<T> set) Parameters table Table set IEnumerable<T> Returns T Type Parameters T"
  },
  "api/Reqnroll.Assist.ITableDiffExceptionBuilder-1.html": {
    "href": "api/Reqnroll.Assist.ITableDiffExceptionBuilder-1.html",
    "title": "Interface ITableDiffExceptionBuilder<T> | Unofficial Reqnroll Documentation",
    "summary": "Interface ITableDiffExceptionBuilder<T> Namespace Reqnroll.Assist Assembly Reqnroll.dll public interface ITableDiffExceptionBuilder<T> Type Parameters T Methods GetTheTableDiffExceptionMessage(TableDifferenceResults<T>) string GetTheTableDiffExceptionMessage(TableDifferenceResults<T> tableDifferenceResults) Parameters tableDifferenceResults TableDifferenceResults<T> Returns string"
  },
  "api/Reqnroll.Assist.IValueComparer.html": {
    "href": "api/Reqnroll.Assist.IValueComparer.html",
    "title": "Interface IValueComparer | Unofficial Reqnroll Documentation",
    "summary": "Interface IValueComparer Namespace Reqnroll.Assist Assembly Reqnroll.dll A class that will compare a key->value from a table to an actual value. public interface IValueComparer Methods CanCompare(object) Determines if this comparer can compare the actual value to a key->value set defined in a table. bool CanCompare(object actualValue) Parameters actualValue object Actual value. Returns bool true if this instance can compare the value to a key->value set in a table; otherwise, false. Compare(string, object) Compare the expected value to the actual value. bool Compare(string expectedValue, object actualValue) Parameters expectedValue string Expected value. actualValue object Actual value. Returns bool"
  },
  "api/Reqnroll.Assist.IValueRetriever.html": {
    "href": "api/Reqnroll.Assist.IValueRetriever.html",
    "title": "Interface IValueRetriever | Unofficial Reqnroll Documentation",
    "summary": "Interface IValueRetriever Namespace Reqnroll.Assist Assembly Reqnroll.dll A class that will retrieve an object's actual value from a key->value in a table. public interface IValueRetriever Methods CanRetrieve(KeyValuePair<string, string>, Type, Type) Determines if this retriever can retrieve the actual value from a key->value set in a table. bool CanRetrieve(KeyValuePair<string, string> keyValuePair, Type targetType, Type propertyType) Parameters keyValuePair KeyValuePair<string, string> Key value pair. targetType Type The type of the object that is being built from the table. propertyType Type The type of the property or member that is being set. Returns bool true if this instance can retrieve the specified key->value; otherwise, false. Retrieve(KeyValuePair<string, string>, Type, Type) Retrieve the value from a key-> value set, as the expected type on targetType. object Retrieve(KeyValuePair<string, string> keyValuePair, Type targetType, Type propertyType) Parameters keyValuePair KeyValuePair<string, string> Key value pair. targetType Type The type of the object that is being built from the table. propertyType Type The type of the property or member that is being set. Returns object"
  },
  "api/Reqnroll.Assist.InstanceCreationOptions.html": {
    "href": "api/Reqnroll.Assist.InstanceCreationOptions.html",
    "title": "Class InstanceCreationOptions | Unofficial Reqnroll Documentation",
    "summary": "Class InstanceCreationOptions Namespace Reqnroll.Assist Assembly Reqnroll.dll public class InstanceCreationOptions Inheritance object InstanceCreationOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties RequireTableToProvideAllConstructorParameters public bool RequireTableToProvideAllConstructorParameters { get; set; } Property Value bool VerifyAllColumnsBound public bool VerifyAllColumnsBound { get; set; } Property Value bool"
  },
  "api/Reqnroll.Assist.Projection-1.html": {
    "href": "api/Reqnroll.Assist.Projection-1.html",
    "title": "Class Projection<T> | Unofficial Reqnroll Documentation",
    "summary": "Class Projection<T> Namespace Reqnroll.Assist Assembly Reqnroll.dll public class Projection<T> Type Parameters T Inheritance object Projection<T> Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Projection(T, IEnumerable<string>) public Projection(T item, IEnumerable<string> properties) Parameters item T properties IEnumerable<string> Methods Equals(object) public override bool Equals(object obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int"
  },
  "api/Reqnroll.Assist.ProjectionEnumerator-1.html": {
    "href": "api/Reqnroll.Assist.ProjectionEnumerator-1.html",
    "title": "Class ProjectionEnumerator<T> | Unofficial Reqnroll Documentation",
    "summary": "Class ProjectionEnumerator<T> Namespace Reqnroll.Assist Assembly Reqnroll.dll public class ProjectionEnumerator<T> : IEnumerator<Projection<T>>, IEnumerator, IDisposable Type Parameters T Inheritance object ProjectionEnumerator<T> Implements IEnumerator<Projection<T>> IEnumerator IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ProjectionEnumerator(IEnumerable<T>, IEnumerable<string>) public ProjectionEnumerator(IEnumerable<T> collection, IEnumerable<string> properties) Parameters collection IEnumerable<T> properties IEnumerable<string> Properties Current public Projection<T> Current { get; } Property Value Projection<T> Methods Dispose() public void Dispose() MoveNext() public bool MoveNext() Returns bool Reset() public void Reset()"
  },
  "api/Reqnroll.Assist.ProjectionExtensionMethods.html": {
    "href": "api/Reqnroll.Assist.ProjectionExtensionMethods.html",
    "title": "Class ProjectionExtensionMethods | Unofficial Reqnroll Documentation",
    "summary": "Class ProjectionExtensionMethods Namespace Reqnroll.Assist Assembly Reqnroll.dll public static class ProjectionExtensionMethods Inheritance object ProjectionExtensionMethods Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ToProjectionOfInstance<T>(Table, T) public static IEnumerable<Projection<T>> ToProjectionOfInstance<T>(this Table table, T instance) Parameters table Table instance T Returns IEnumerable<Projection<T>> Type Parameters T ToProjectionOfSet<T>(Table, IEnumerable<T>) public static IEnumerable<Projection<T>> ToProjectionOfSet<T>(this Table table, IEnumerable<T> collection) Parameters table Table collection IEnumerable<T> Returns IEnumerable<Projection<T>> Type Parameters T ToProjection<T>(Table) public static IEnumerable<Projection<T>> ToProjection<T>(this Table table) Parameters table Table Returns IEnumerable<Projection<T>> Type Parameters T ToProjection<T>(IEnumerable<T>, Table) public static IEnumerable<Projection<T>> ToProjection<T>(this IEnumerable<T> collection, Table table = null) Parameters collection IEnumerable<T> table Table Returns IEnumerable<Projection<T>> Type Parameters T"
  },
  "api/Reqnroll.Assist.RowExtensionMethods.html": {
    "href": "api/Reqnroll.Assist.RowExtensionMethods.html",
    "title": "Class RowExtensionMethods | Unofficial Reqnroll Documentation",
    "summary": "Class RowExtensionMethods Namespace Reqnroll.Assist Assembly Reqnroll.dll public static class RowExtensionMethods Inheritance object RowExtensionMethods Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CreateInstance<T>(DataTableRow) Creates a new instance of T from the DataTableRow. public static T CreateInstance<T>(this DataTableRow row) Parameters row DataTableRow The table row. Returns T A new instance of T filled with the data from the DataTableRow. Type Parameters T The type of the instance to be created. CreateInstance<T>(DataTableRow, Func<T>) Creates a new instance of T from the DataTableRow. public static T CreateInstance<T>(this DataTableRow row, Func<T> methodToCreateTheInstance) Parameters row DataTableRow The table row. methodToCreateTheInstance Func<T> The method to create a new instance. Returns T A new instance of T filled with the data from the DataTableRow. Type Parameters T The type of the instance to be created. GetBoolean(DataTableRow, string) public static bool GetBoolean(this DataTableRow row, string id) Parameters row DataTableRow id string Returns bool GetChar(DataTableRow, string) public static char GetChar(this DataTableRow row, string id) Parameters row DataTableRow id string Returns char GetDateTime(DataTableRow, string) public static DateTime GetDateTime(this DataTableRow row, string id) Parameters row DataTableRow id string Returns DateTime GetDecimal(DataTableRow, string) public static decimal GetDecimal(this DataTableRow row, string id) Parameters row DataTableRow id string Returns decimal GetDiscreteEnum<T>(DataTableRow, string) public static T GetDiscreteEnum<T>(this DataTableRow row, string id) where T : struct, IConvertible Parameters row DataTableRow id string Returns T Type Parameters T GetDiscreteEnum<T>(DataTableRow, string, T) public static T GetDiscreteEnum<T>(this DataTableRow row, string id, T defaultValue) where T : struct, IConvertible Parameters row DataTableRow id string defaultValue T Returns T Type Parameters T GetDouble(DataTableRow, string) public static double GetDouble(this DataTableRow row, string id) Parameters row DataTableRow id string Returns double GetEnumValue<TEnum>(DataTableRow, string) public static TEnum GetEnumValue<TEnum>(this DataTableRow row, string id) Parameters row DataTableRow id string Returns TEnum Type Parameters TEnum GetEnum<T>(DataTableRow, string) public static Enum GetEnum<T>(this DataTableRow row, string id) where T : class Parameters row DataTableRow id string Returns Enum Type Parameters T GetGuid(DataTableRow, string) public static Guid GetGuid(this DataTableRow row, string id) Parameters row DataTableRow id string Returns Guid GetInt32(DataTableRow, string) public static int GetInt32(this DataTableRow row, string id) Parameters row DataTableRow id string Returns int GetInt64(DataTableRow, string) public static long GetInt64(this DataTableRow row, string id) Parameters row DataTableRow id string Returns long GetSingle(DataTableRow, string) public static float GetSingle(this DataTableRow row, string id) Parameters row DataTableRow id string Returns float GetString(DataTableRow, string) public static string GetString(this DataTableRow row, string id) Parameters row DataTableRow id string Returns string"
  },
  "api/Reqnroll.Assist.Service.html": {
    "href": "api/Reqnroll.Assist.Service.html",
    "title": "Class Service | Unofficial Reqnroll Documentation",
    "summary": "Class Service Namespace Reqnroll.Assist Assembly Reqnroll.dll public class Service Inheritance object Service Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Service() public Service() Properties Instance public static Service Instance { get; } Property Value Service ValueComparers public ServiceComponentList<IValueComparer> ValueComparers { get; } Property Value ServiceComponentList<IValueComparer> ValueRetrievers public ServiceComponentList<IValueRetriever> ValueRetrievers { get; } Property Value ServiceComponentList<IValueRetriever> Methods GetValueRetrieverFor(DataTableRow, Type, Type) public IValueRetriever? GetValueRetrieverFor(DataTableRow row, Type targetType, Type propertyType) Parameters row DataTableRow targetType Type propertyType Type Returns IValueRetriever RegisterValueComparer(IValueComparer) [Obsolete(\"Use ValueComparers.Register\")] public void RegisterValueComparer(IValueComparer valueComparer) Parameters valueComparer IValueComparer RegisterValueRetriever(IValueRetriever) [Obsolete(\"Use ValueRetrievers.Register\")] public void RegisterValueRetriever(IValueRetriever valueRetriever) Parameters valueRetriever IValueRetriever RestoreDefaults() public void RestoreDefaults() UnregisterValueComparer(IValueComparer) [Obsolete(\"Use ValueComparers.Unregister\")] public void UnregisterValueComparer(IValueComparer valueComparer) Parameters valueComparer IValueComparer UnregisterValueRetriever(IValueRetriever) [Obsolete(\"Use ValueRetrievers.Unregister\")] public void UnregisterValueRetriever(IValueRetriever valueRetriever) Parameters valueRetriever IValueRetriever"
  },
  "api/Reqnroll.Assist.ServiceComponentList-1.html": {
    "href": "api/Reqnroll.Assist.ServiceComponentList-1.html",
    "title": "Class ServiceComponentList<T> | Unofficial Reqnroll Documentation",
    "summary": "Class ServiceComponentList<T> Namespace Reqnroll.Assist Assembly Reqnroll.dll public class ServiceComponentList<T> : IEnumerable<T>, IEnumerable Type Parameters T Inheritance object ServiceComponentList<T> Implements IEnumerable<T> IEnumerable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ProjectionExtensionMethods.ToProjection<T>(IEnumerable<T>, Table) Constructors ServiceComponentList() public ServiceComponentList() Methods Clear() public void Clear() ClearDefault() public void ClearDefault() GetEnumerator() public List<T>.Enumerator GetEnumerator() Returns List<T>.Enumerator Register(T) public void Register(T component) Parameters component T Register<TImpl>() public void Register<TImpl>() where TImpl : T, new() Type Parameters TImpl Replace(T, T) public void Replace(T oldComponent, T newComponent) Parameters oldComponent T newComponent T Replace<TOld, TNew>() public void Replace<TOld, TNew>() where TOld : T where TNew : T, new() Type Parameters TOld TNew SetDefault(T) public void SetDefault(T newComponent) Parameters newComponent T SetDefault<TImpl>() public void SetDefault<TImpl>() where TImpl : T, new() Type Parameters TImpl Unregister(T) public void Unregister(T component) Parameters component T Unregister<TImpl>() public void Unregister<TImpl>() where TImpl : T Type Parameters TImpl"
  },
  "api/Reqnroll.Assist.SetComparer-1.html": {
    "href": "api/Reqnroll.Assist.SetComparer-1.html",
    "title": "Class SetComparer<T> | Unofficial Reqnroll Documentation",
    "summary": "Class SetComparer<T> Namespace Reqnroll.Assist Assembly Reqnroll.dll public class SetComparer<T> Type Parameters T Inheritance object SetComparer<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SetComparer(Table) public SetComparer(Table table) Parameters table Table Methods CompareToSet(IEnumerable<T>, bool) public void CompareToSet(IEnumerable<T> set, bool sequentialEquality) Parameters set IEnumerable<T> sequentialEquality bool"
  },
  "api/Reqnroll.Assist.TableDifferenceItem-1.html": {
    "href": "api/Reqnroll.Assist.TableDifferenceItem-1.html",
    "title": "Class TableDifferenceItem<TT> | Unofficial Reqnroll Documentation",
    "summary": "Class TableDifferenceItem<TT> Namespace Reqnroll.Assist Assembly Reqnroll.dll public class TableDifferenceItem<TT> Type Parameters TT Inheritance object TableDifferenceItem<TT> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TableDifferenceItem(TT, int?) public TableDifferenceItem(TT item, int? index = null) Parameters item TT index int? Properties Index public int? Index { get; } Property Value int? IsIndexSpecific public bool IsIndexSpecific { get; } Property Value bool Item public TT Item { get; } Property Value TT"
  },
  "api/Reqnroll.Assist.TableDifferenceResults-1.html": {
    "href": "api/Reqnroll.Assist.TableDifferenceResults-1.html",
    "title": "Class TableDifferenceResults<TT> | Unofficial Reqnroll Documentation",
    "summary": "Class TableDifferenceResults<TT> Namespace Reqnroll.Assist Assembly Reqnroll.dll public class TableDifferenceResults<TT> Type Parameters TT Inheritance object TableDifferenceResults<TT> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TableDifferenceResults(Table, IEnumerable<int>, IEnumerable<TableDifferenceItem<TT>>) public TableDifferenceResults(Table table, IEnumerable<int> indexesOfTableRowsThatWereNotMatched, IEnumerable<TableDifferenceItem<TT>> itemsInTheDataThatWereNotFoundInTheTable) Parameters table Table indexesOfTableRowsThatWereNotMatched IEnumerable<int> itemsInTheDataThatWereNotFoundInTheTable IEnumerable<TableDifferenceItem<TT>> Properties IndexesOfTableRowsThatWereNotMatched public IEnumerable<int> IndexesOfTableRowsThatWereNotMatched { get; } Property Value IEnumerable<int> ItemsInTheDataThatWereNotFoundInTheTable public IEnumerable<TableDifferenceItem<TT>> ItemsInTheDataThatWereNotFoundInTheTable { get; } Property Value IEnumerable<TableDifferenceItem<TT>> Table public Table Table { get; } Property Value Table"
  },
  "api/Reqnroll.Assist.ValueComparers.BoolValueComparer.html": {
    "href": "api/Reqnroll.Assist.ValueComparers.BoolValueComparer.html",
    "title": "Class BoolValueComparer | Unofficial Reqnroll Documentation",
    "summary": "Class BoolValueComparer Namespace Reqnroll.Assist.ValueComparers Assembly Reqnroll.dll public class BoolValueComparer : IValueComparer Inheritance object BoolValueComparer Implements IValueComparer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CanCompare(object) Determines if this comparer can compare the actual value to a key->value set defined in a table. public bool CanCompare(object actualValue) Parameters actualValue object Actual value. Returns bool true if this instance can compare the value to a key->value set in a table; otherwise, false. Compare(string, object) Compare the expected value to the actual value. public bool Compare(string expectedValue, object actualValue) Parameters expectedValue string Expected value. actualValue object Actual value. Returns bool"
  },
  "api/Reqnroll.Assist.ValueComparers.DateTimeOffsetValueComparer.html": {
    "href": "api/Reqnroll.Assist.ValueComparers.DateTimeOffsetValueComparer.html",
    "title": "Class DateTimeOffsetValueComparer | Unofficial Reqnroll Documentation",
    "summary": "Class DateTimeOffsetValueComparer Namespace Reqnroll.Assist.ValueComparers Assembly Reqnroll.dll public class DateTimeOffsetValueComparer : IValueComparer Inheritance object DateTimeOffsetValueComparer Implements IValueComparer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CanCompare(object) Determines if this comparer can compare the actual value to a key->value set defined in a table. public bool CanCompare(object actualValue) Parameters actualValue object Actual value. Returns bool true if this instance can compare the value to a key->value set in a table; otherwise, false. Compare(string, object) Compare the expected value to the actual value. public bool Compare(string expectedValue, object actualValue) Parameters expectedValue string Expected value. actualValue object Actual value. Returns bool"
  },
  "api/Reqnroll.Assist.ValueComparers.DateTimeValueComparer.html": {
    "href": "api/Reqnroll.Assist.ValueComparers.DateTimeValueComparer.html",
    "title": "Class DateTimeValueComparer | Unofficial Reqnroll Documentation",
    "summary": "Class DateTimeValueComparer Namespace Reqnroll.Assist.ValueComparers Assembly Reqnroll.dll public class DateTimeValueComparer : IValueComparer Inheritance object DateTimeValueComparer Implements IValueComparer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CanCompare(object) Determines if this comparer can compare the actual value to a key->value set defined in a table. public bool CanCompare(object actualValue) Parameters actualValue object Actual value. Returns bool true if this instance can compare the value to a key->value set in a table; otherwise, false. Compare(string, object) Compare the expected value to the actual value. public bool Compare(string expectedValue, object actualValue) Parameters expectedValue string Expected value. actualValue object Actual value. Returns bool"
  },
  "api/Reqnroll.Assist.ValueComparers.DecimalValueComparer.html": {
    "href": "api/Reqnroll.Assist.ValueComparers.DecimalValueComparer.html",
    "title": "Class DecimalValueComparer | Unofficial Reqnroll Documentation",
    "summary": "Class DecimalValueComparer Namespace Reqnroll.Assist.ValueComparers Assembly Reqnroll.dll public class DecimalValueComparer : IValueComparer Inheritance object DecimalValueComparer Implements IValueComparer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CanCompare(object) Determines if this comparer can compare the actual value to a key->value set defined in a table. public bool CanCompare(object actualValue) Parameters actualValue object Actual value. Returns bool true if this instance can compare the value to a key->value set in a table; otherwise, false. Compare(string, object) Compare the expected value to the actual value. public bool Compare(string expectedValue, object actualValue) Parameters expectedValue string Expected value. actualValue object Actual value. Returns bool"
  },
  "api/Reqnroll.Assist.ValueComparers.DefaultValueComparer.html": {
    "href": "api/Reqnroll.Assist.ValueComparers.DefaultValueComparer.html",
    "title": "Class DefaultValueComparer | Unofficial Reqnroll Documentation",
    "summary": "Class DefaultValueComparer Namespace Reqnroll.Assist.ValueComparers Assembly Reqnroll.dll public class DefaultValueComparer : IValueComparer Inheritance object DefaultValueComparer Implements IValueComparer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CanCompare(object) Determines if this comparer can compare the actual value to a key->value set defined in a table. public bool CanCompare(object actualValue) Parameters actualValue object Actual value. Returns bool true if this instance can compare the value to a key->value set in a table; otherwise, false. Compare(string, object) Compare the expected value to the actual value. public bool Compare(string expectedValue, object actualValue) Parameters expectedValue string Expected value. actualValue object Actual value. Returns bool"
  },
  "api/Reqnroll.Assist.ValueComparers.DoubleValueComparer.html": {
    "href": "api/Reqnroll.Assist.ValueComparers.DoubleValueComparer.html",
    "title": "Class DoubleValueComparer | Unofficial Reqnroll Documentation",
    "summary": "Class DoubleValueComparer Namespace Reqnroll.Assist.ValueComparers Assembly Reqnroll.dll public class DoubleValueComparer : IValueComparer Inheritance object DoubleValueComparer Implements IValueComparer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CanCompare(object) Determines if this comparer can compare the actual value to a key->value set defined in a table. public bool CanCompare(object actualValue) Parameters actualValue object Actual value. Returns bool true if this instance can compare the value to a key->value set in a table; otherwise, false. Compare(string, object) Compare the expected value to the actual value. public bool Compare(string expectedValue, object actualValue) Parameters expectedValue string Expected value. actualValue object Actual value. Returns bool"
  },
  "api/Reqnroll.Assist.ValueComparers.FloatValueComparer.html": {
    "href": "api/Reqnroll.Assist.ValueComparers.FloatValueComparer.html",
    "title": "Class FloatValueComparer | Unofficial Reqnroll Documentation",
    "summary": "Class FloatValueComparer Namespace Reqnroll.Assist.ValueComparers Assembly Reqnroll.dll public class FloatValueComparer : IValueComparer Inheritance object FloatValueComparer Implements IValueComparer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CanCompare(object) Determines if this comparer can compare the actual value to a key->value set defined in a table. public bool CanCompare(object actualValue) Parameters actualValue object Actual value. Returns bool true if this instance can compare the value to a key->value set in a table; otherwise, false. Compare(string, object) Compare the expected value to the actual value. public bool Compare(string expectedValue, object actualValue) Parameters expectedValue string Expected value. actualValue object Actual value. Returns bool"
  },
  "api/Reqnroll.Assist.ValueComparers.GuidValueComparer.html": {
    "href": "api/Reqnroll.Assist.ValueComparers.GuidValueComparer.html",
    "title": "Class GuidValueComparer | Unofficial Reqnroll Documentation",
    "summary": "Class GuidValueComparer Namespace Reqnroll.Assist.ValueComparers Assembly Reqnroll.dll public class GuidValueComparer : IValueComparer Inheritance object GuidValueComparer Implements IValueComparer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GuidValueComparer() public GuidValueComparer() GuidValueComparer(GuidValueRetriever) public GuidValueComparer(GuidValueRetriever guidValueRetriever) Parameters guidValueRetriever GuidValueRetriever Methods CanCompare(object) Determines if this comparer can compare the actual value to a key->value set defined in a table. public bool CanCompare(object actualValue) Parameters actualValue object Actual value. Returns bool true if this instance can compare the value to a key->value set in a table; otherwise, false. Compare(string, object) Compare the expected value to the actual value. public bool Compare(string expectedValue, object actualValue) Parameters expectedValue string Expected value. actualValue object Actual value. Returns bool"
  },
  "api/Reqnroll.Assist.ValueComparers.html": {
    "href": "api/Reqnroll.Assist.ValueComparers.html",
    "title": "Namespace Reqnroll.Assist.ValueComparers | Unofficial Reqnroll Documentation",
    "summary": "Namespace Reqnroll.Assist.ValueComparers Classes BoolValueComparer DateTimeOffsetValueComparer DateTimeValueComparer DecimalValueComparer DefaultValueComparer DoubleValueComparer FloatValueComparer GuidValueComparer"
  },
  "api/Reqnroll.Assist.ValueRetrievers.ArrayValueRetriever.html": {
    "href": "api/Reqnroll.Assist.ValueRetrievers.ArrayValueRetriever.html",
    "title": "Class ArrayValueRetriever | Unofficial Reqnroll Documentation",
    "summary": "Class ArrayValueRetriever Namespace Reqnroll.Assist.ValueRetrievers Assembly Reqnroll.dll public class ArrayValueRetriever : EnumerableValueRetriever, IValueRetriever Inheritance object EnumerableValueRetriever ArrayValueRetriever Implements IValueRetriever Inherited Members EnumerableValueRetriever.Retrieve(KeyValuePair<string, string>, Type, Type) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BuildInstance(int, IEnumerable, Type) protected override object BuildInstance(int count, IEnumerable values, Type valueType) Parameters count int values IEnumerable valueType Type Returns object CanRetrieve(KeyValuePair<string, string>, Type, Type) Determines if this retriever can retrieve the actual value from a key->value set in a table. public override bool CanRetrieve(KeyValuePair<string, string> keyValuePair, Type targetType, Type propertyType) Parameters keyValuePair KeyValuePair<string, string> Key value pair. targetType Type The type of the object that is being built from the table. propertyType Type The type of the property or member that is being set. Returns bool true if this instance can retrieve the specified key->value; otherwise, false. GetActualValueType(Type) protected override Type GetActualValueType(Type propertyType) Parameters propertyType Type Returns Type"
  },
  "api/Reqnroll.Assist.ValueRetrievers.BoolValueRetriever.html": {
    "href": "api/Reqnroll.Assist.ValueRetrievers.BoolValueRetriever.html",
    "title": "Class BoolValueRetriever | Unofficial Reqnroll Documentation",
    "summary": "Class BoolValueRetriever Namespace Reqnroll.Assist.ValueRetrievers Assembly Reqnroll.dll public class BoolValueRetriever : StructRetriever<bool>, IValueRetriever Inheritance object StructRetriever<bool> BoolValueRetriever Implements IValueRetriever Inherited Members StructRetriever<bool>.CanRetrieve(KeyValuePair<string, string>, Type, Type) StructRetriever<bool>.Retrieve(KeyValuePair<string, string>, Type, Type) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetNonEmptyValue(string) protected override bool GetNonEmptyValue(string value) Parameters value string Returns bool"
  },
  "api/Reqnroll.Assist.ValueRetrievers.ByteValueRetriever.html": {
    "href": "api/Reqnroll.Assist.ValueRetrievers.ByteValueRetriever.html",
    "title": "Class ByteValueRetriever | Unofficial Reqnroll Documentation",
    "summary": "Class ByteValueRetriever Namespace Reqnroll.Assist.ValueRetrievers Assembly Reqnroll.dll public class ByteValueRetriever : StructRetriever<byte>, IValueRetriever Inheritance object StructRetriever<byte> ByteValueRetriever Implements IValueRetriever Inherited Members StructRetriever<byte>.CanRetrieve(KeyValuePair<string, string>, Type, Type) StructRetriever<byte>.Retrieve(KeyValuePair<string, string>, Type, Type) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetNonEmptyValue(string) protected override byte GetNonEmptyValue(string value) Parameters value string Returns byte"
  },
  "api/Reqnroll.Assist.ValueRetrievers.CharValueRetriever.html": {
    "href": "api/Reqnroll.Assist.ValueRetrievers.CharValueRetriever.html",
    "title": "Class CharValueRetriever | Unofficial Reqnroll Documentation",
    "summary": "Class CharValueRetriever Namespace Reqnroll.Assist.ValueRetrievers Assembly Reqnroll.dll public class CharValueRetriever : StructRetriever<char>, IValueRetriever Inheritance object StructRetriever<char> CharValueRetriever Implements IValueRetriever Inherited Members StructRetriever<char>.CanRetrieve(KeyValuePair<string, string>, Type, Type) StructRetriever<char>.Retrieve(KeyValuePair<string, string>, Type, Type) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetNonEmptyValue(string) protected override char GetNonEmptyValue(string value) Parameters value string Returns char"
  },
  "api/Reqnroll.Assist.ValueRetrievers.ClassRetriever-1.html": {
    "href": "api/Reqnroll.Assist.ValueRetrievers.ClassRetriever-1.html",
    "title": "Class ClassRetriever<T> | Unofficial Reqnroll Documentation",
    "summary": "Class ClassRetriever<T> Namespace Reqnroll.Assist.ValueRetrievers Assembly Reqnroll.dll public abstract class ClassRetriever<T> : IValueRetriever where T : class Type Parameters T Inheritance object ClassRetriever<T> Implements IValueRetriever Derived StringValueRetriever UriValueRetriever Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CanRetrieve(KeyValuePair<string, string>, Type, Type) Determines if this retriever can retrieve the actual value from a key->value set in a table. public bool CanRetrieve(KeyValuePair<string, string> keyValuePair, Type targetType, Type propertyType) Parameters keyValuePair KeyValuePair<string, string> Key value pair. targetType Type The type of the object that is being built from the table. propertyType Type The type of the property or member that is being set. Returns bool true if this instance can retrieve the specified key->value; otherwise, false. GetNonEmptyValue(string) protected abstract T GetNonEmptyValue(string value) Parameters value string Returns T Retrieve(KeyValuePair<string, string>, Type, Type) Retrieve the value from a key-> value set, as the expected type on targetType. public object Retrieve(KeyValuePair<string, string> keyValuePair, Type targetType, Type propertyType) Parameters keyValuePair KeyValuePair<string, string> Key value pair. targetType Type The type of the object that is being built from the table. propertyType Type The type of the property or member that is being set. Returns object"
  },
  "api/Reqnroll.Assist.ValueRetrievers.DateTimeOffsetValueRetriever.html": {
    "href": "api/Reqnroll.Assist.ValueRetrievers.DateTimeOffsetValueRetriever.html",
    "title": "Class DateTimeOffsetValueRetriever | Unofficial Reqnroll Documentation",
    "summary": "Class DateTimeOffsetValueRetriever Namespace Reqnroll.Assist.ValueRetrievers Assembly Reqnroll.dll public class DateTimeOffsetValueRetriever : StructRetriever<DateTimeOffset>, IValueRetriever Inheritance object StructRetriever<DateTimeOffset> DateTimeOffsetValueRetriever Implements IValueRetriever Inherited Members StructRetriever<DateTimeOffset>.CanRetrieve(KeyValuePair<string, string>, Type, Type) StructRetriever<DateTimeOffset>.Retrieve(KeyValuePair<string, string>, Type, Type) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties DateTimeStyles Gets or sets the DateTimeStyles to use when parsing the string value. public static DateTimeStyles DateTimeStyles { get; set; } Property Value DateTimeStyles Remarks Defaults to DateTimeStyles.None. Methods GetNonEmptyValue(string) protected override DateTimeOffset GetNonEmptyValue(string value) Parameters value string Returns DateTimeOffset"
  },
  "api/Reqnroll.Assist.ValueRetrievers.DateTimeValueRetriever.html": {
    "href": "api/Reqnroll.Assist.ValueRetrievers.DateTimeValueRetriever.html",
    "title": "Class DateTimeValueRetriever | Unofficial Reqnroll Documentation",
    "summary": "Class DateTimeValueRetriever Namespace Reqnroll.Assist.ValueRetrievers Assembly Reqnroll.dll public class DateTimeValueRetriever : StructRetriever<DateTime>, IValueRetriever Inheritance object StructRetriever<DateTime> DateTimeValueRetriever Implements IValueRetriever Inherited Members StructRetriever<DateTime>.CanRetrieve(KeyValuePair<string, string>, Type, Type) StructRetriever<DateTime>.Retrieve(KeyValuePair<string, string>, Type, Type) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties DateTimeStyles Gets or sets the DateTimeStyles to use when parsing the string value. public static DateTimeStyles DateTimeStyles { get; set; } Property Value DateTimeStyles Remarks Defaults to DateTimeStyles.None. Methods GetNonEmptyValue(string) protected override DateTime GetNonEmptyValue(string value) Parameters value string Returns DateTime"
  },
  "api/Reqnroll.Assist.ValueRetrievers.DecimalValueRetriever.html": {
    "href": "api/Reqnroll.Assist.ValueRetrievers.DecimalValueRetriever.html",
    "title": "Class DecimalValueRetriever | Unofficial Reqnroll Documentation",
    "summary": "Class DecimalValueRetriever Namespace Reqnroll.Assist.ValueRetrievers Assembly Reqnroll.dll public class DecimalValueRetriever : StructRetriever<decimal>, IValueRetriever Inheritance object StructRetriever<decimal> DecimalValueRetriever Implements IValueRetriever Inherited Members StructRetriever<decimal>.CanRetrieve(KeyValuePair<string, string>, Type, Type) StructRetriever<decimal>.Retrieve(KeyValuePair<string, string>, Type, Type) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetNonEmptyValue(string) protected override decimal GetNonEmptyValue(string value) Parameters value string Returns decimal"
  },
  "api/Reqnroll.Assist.ValueRetrievers.DoubleValueRetriever.html": {
    "href": "api/Reqnroll.Assist.ValueRetrievers.DoubleValueRetriever.html",
    "title": "Class DoubleValueRetriever | Unofficial Reqnroll Documentation",
    "summary": "Class DoubleValueRetriever Namespace Reqnroll.Assist.ValueRetrievers Assembly Reqnroll.dll public class DoubleValueRetriever : StructRetriever<double>, IValueRetriever Inheritance object StructRetriever<double> DoubleValueRetriever Implements IValueRetriever Inherited Members StructRetriever<double>.CanRetrieve(KeyValuePair<string, string>, Type, Type) StructRetriever<double>.Retrieve(KeyValuePair<string, string>, Type, Type) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetNonEmptyValue(string) protected override double GetNonEmptyValue(string value) Parameters value string Returns double"
  },
  "api/Reqnroll.Assist.ValueRetrievers.EnumValueRetriever.html": {
    "href": "api/Reqnroll.Assist.ValueRetrievers.EnumValueRetriever.html",
    "title": "Class EnumValueRetriever | Unofficial Reqnroll Documentation",
    "summary": "Class EnumValueRetriever Namespace Reqnroll.Assist.ValueRetrievers Assembly Reqnroll.dll public class EnumValueRetriever : IValueRetriever Inheritance object EnumValueRetriever Implements IValueRetriever Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CanRetrieve(KeyValuePair<string, string>, Type, Type) Determines if this retriever can retrieve the actual value from a key->value set in a table. public bool CanRetrieve(KeyValuePair<string, string> keyValuePair, Type targetType, Type propertyType) Parameters keyValuePair KeyValuePair<string, string> Key value pair. targetType Type The type of the object that is being built from the table. propertyType Type The type of the property or member that is being set. Returns bool true if this instance can retrieve the specified key->value; otherwise, false. Retrieve(KeyValuePair<string, string>, Type, Type) Retrieve the value from a key-> value set, as the expected type on targetType. public object Retrieve(KeyValuePair<string, string> keyValuePair, Type targetType, Type propertyType) Parameters keyValuePair KeyValuePair<string, string> Key value pair. targetType Type The type of the object that is being built from the table. propertyType Type The type of the property or member that is being set. Returns object"
  },
  "api/Reqnroll.Assist.ValueRetrievers.EnumerableValueRetriever.html": {
    "href": "api/Reqnroll.Assist.ValueRetrievers.EnumerableValueRetriever.html",
    "title": "Class EnumerableValueRetriever | Unofficial Reqnroll Documentation",
    "summary": "Class EnumerableValueRetriever Namespace Reqnroll.Assist.ValueRetrievers Assembly Reqnroll.dll public abstract class EnumerableValueRetriever : IValueRetriever Inheritance object EnumerableValueRetriever Implements IValueRetriever Derived ArrayValueRetriever ListValueRetriever Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BuildInstance(int, IEnumerable, Type) protected abstract object BuildInstance(int count, IEnumerable values, Type valueType) Parameters count int values IEnumerable valueType Type Returns object CanRetrieve(KeyValuePair<string, string>, Type, Type) Determines if this retriever can retrieve the actual value from a key->value set in a table. public abstract bool CanRetrieve(KeyValuePair<string, string> keyValuePair, Type targetType, Type propertyType) Parameters keyValuePair KeyValuePair<string, string> Key value pair. targetType Type The type of the object that is being built from the table. propertyType Type The type of the property or member that is being set. Returns bool true if this instance can retrieve the specified key->value; otherwise, false. GetActualValueType(Type) protected abstract Type GetActualValueType(Type propertyType) Parameters propertyType Type Returns Type Retrieve(KeyValuePair<string, string>, Type, Type) Retrieve the value from a key-> value set, as the expected type on targetType. public object Retrieve(KeyValuePair<string, string> keyValuePair, Type targetType, Type propertyType) Parameters keyValuePair KeyValuePair<string, string> Key value pair. targetType Type The type of the object that is being built from the table. propertyType Type The type of the property or member that is being set. Returns object"
  },
  "api/Reqnroll.Assist.ValueRetrievers.FloatValueRetriever.html": {
    "href": "api/Reqnroll.Assist.ValueRetrievers.FloatValueRetriever.html",
    "title": "Class FloatValueRetriever | Unofficial Reqnroll Documentation",
    "summary": "Class FloatValueRetriever Namespace Reqnroll.Assist.ValueRetrievers Assembly Reqnroll.dll public class FloatValueRetriever : StructRetriever<float>, IValueRetriever Inheritance object StructRetriever<float> FloatValueRetriever Implements IValueRetriever Inherited Members StructRetriever<float>.CanRetrieve(KeyValuePair<string, string>, Type, Type) StructRetriever<float>.Retrieve(KeyValuePair<string, string>, Type, Type) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetNonEmptyValue(string) protected override float GetNonEmptyValue(string value) Parameters value string Returns float"
  },
  "api/Reqnroll.Assist.ValueRetrievers.GuidValueRetriever.html": {
    "href": "api/Reqnroll.Assist.ValueRetrievers.GuidValueRetriever.html",
    "title": "Class GuidValueRetriever | Unofficial Reqnroll Documentation",
    "summary": "Class GuidValueRetriever Namespace Reqnroll.Assist.ValueRetrievers Assembly Reqnroll.dll public class GuidValueRetriever : StructRetriever<Guid>, IValueRetriever Inheritance object StructRetriever<Guid> GuidValueRetriever Implements IValueRetriever Inherited Members StructRetriever<Guid>.CanRetrieve(KeyValuePair<string, string>, Type, Type) StructRetriever<Guid>.Retrieve(KeyValuePair<string, string>, Type, Type) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetNonEmptyValue(string) protected override Guid GetNonEmptyValue(string value) Parameters value string Returns Guid GetValue(string) public Guid GetValue(string value) Parameters value string Returns Guid IsAValidGuid(string) public bool IsAValidGuid(string value) Parameters value string Returns bool"
  },
  "api/Reqnroll.Assist.ValueRetrievers.IntValueRetriever.html": {
    "href": "api/Reqnroll.Assist.ValueRetrievers.IntValueRetriever.html",
    "title": "Class IntValueRetriever | Unofficial Reqnroll Documentation",
    "summary": "Class IntValueRetriever Namespace Reqnroll.Assist.ValueRetrievers Assembly Reqnroll.dll public class IntValueRetriever : StructRetriever<int>, IValueRetriever Inheritance object StructRetriever<int> IntValueRetriever Implements IValueRetriever Inherited Members StructRetriever<int>.CanRetrieve(KeyValuePair<string, string>, Type, Type) StructRetriever<int>.Retrieve(KeyValuePair<string, string>, Type, Type) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetNonEmptyValue(string) protected override int GetNonEmptyValue(string value) Parameters value string Returns int"
  },
  "api/Reqnroll.Assist.ValueRetrievers.ListValueRetriever.html": {
    "href": "api/Reqnroll.Assist.ValueRetrievers.ListValueRetriever.html",
    "title": "Class ListValueRetriever | Unofficial Reqnroll Documentation",
    "summary": "Class ListValueRetriever Namespace Reqnroll.Assist.ValueRetrievers Assembly Reqnroll.dll public class ListValueRetriever : EnumerableValueRetriever, IValueRetriever Inheritance object EnumerableValueRetriever ListValueRetriever Implements IValueRetriever Inherited Members EnumerableValueRetriever.Retrieve(KeyValuePair<string, string>, Type, Type) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BuildInstance(int, IEnumerable, Type) protected override object BuildInstance(int count, IEnumerable values, Type valueType) Parameters count int values IEnumerable valueType Type Returns object CanRetrieve(KeyValuePair<string, string>, Type, Type) Determines if this retriever can retrieve the actual value from a key->value set in a table. public override bool CanRetrieve(KeyValuePair<string, string> keyValuePair, Type targetType, Type propertyType) Parameters keyValuePair KeyValuePair<string, string> Key value pair. targetType Type The type of the object that is being built from the table. propertyType Type The type of the property or member that is being set. Returns bool true if this instance can retrieve the specified key->value; otherwise, false. GetActualValueType(Type) protected override Type GetActualValueType(Type propertyType) Parameters propertyType Type Returns Type"
  },
  "api/Reqnroll.Assist.ValueRetrievers.LongValueRetriever.html": {
    "href": "api/Reqnroll.Assist.ValueRetrievers.LongValueRetriever.html",
    "title": "Class LongValueRetriever | Unofficial Reqnroll Documentation",
    "summary": "Class LongValueRetriever Namespace Reqnroll.Assist.ValueRetrievers Assembly Reqnroll.dll public class LongValueRetriever : StructRetriever<long>, IValueRetriever Inheritance object StructRetriever<long> LongValueRetriever Implements IValueRetriever Inherited Members StructRetriever<long>.CanRetrieve(KeyValuePair<string, string>, Type, Type) StructRetriever<long>.Retrieve(KeyValuePair<string, string>, Type, Type) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetNonEmptyValue(string) protected override long GetNonEmptyValue(string value) Parameters value string Returns long"
  },
  "api/Reqnroll.Assist.ValueRetrievers.NullValueRetriever.html": {
    "href": "api/Reqnroll.Assist.ValueRetrievers.NullValueRetriever.html",
    "title": "Class NullValueRetriever | Unofficial Reqnroll Documentation",
    "summary": "Class NullValueRetriever Namespace Reqnroll.Assist.ValueRetrievers Assembly Reqnroll.dll public class NullValueRetriever : IValueRetriever Inheritance object NullValueRetriever Implements IValueRetriever Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors NullValueRetriever(string) public NullValueRetriever(string nullText) Parameters nullText string Methods CanRetrieve(KeyValuePair<string, string>, Type, Type) Determines if this retriever can retrieve the actual value from a key->value set in a table. public bool CanRetrieve(KeyValuePair<string, string> keyValuePair, Type targetType, Type propertyType) Parameters keyValuePair KeyValuePair<string, string> Key value pair. targetType Type The type of the object that is being built from the table. propertyType Type The type of the property or member that is being set. Returns bool true if this instance can retrieve the specified key->value; otherwise, false. Retrieve(KeyValuePair<string, string>, Type, Type) Retrieve the value from a key-> value set, as the expected type on targetType. public object Retrieve(KeyValuePair<string, string> keyValuePair, Type targetType, Type propertyType) Parameters keyValuePair KeyValuePair<string, string> Key value pair. targetType Type The type of the object that is being built from the table. propertyType Type The type of the property or member that is being set. Returns object"
  },
  "api/Reqnroll.Assist.ValueRetrievers.SByteValueRetriever.html": {
    "href": "api/Reqnroll.Assist.ValueRetrievers.SByteValueRetriever.html",
    "title": "Class SByteValueRetriever | Unofficial Reqnroll Documentation",
    "summary": "Class SByteValueRetriever Namespace Reqnroll.Assist.ValueRetrievers Assembly Reqnroll.dll public class SByteValueRetriever : StructRetriever<sbyte>, IValueRetriever Inheritance object StructRetriever<sbyte> SByteValueRetriever Implements IValueRetriever Inherited Members StructRetriever<sbyte>.CanRetrieve(KeyValuePair<string, string>, Type, Type) StructRetriever<sbyte>.Retrieve(KeyValuePair<string, string>, Type, Type) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetNonEmptyValue(string) protected override sbyte GetNonEmptyValue(string value) Parameters value string Returns sbyte"
  },
  "api/Reqnroll.Assist.ValueRetrievers.ShortValueRetriever.html": {
    "href": "api/Reqnroll.Assist.ValueRetrievers.ShortValueRetriever.html",
    "title": "Class ShortValueRetriever | Unofficial Reqnroll Documentation",
    "summary": "Class ShortValueRetriever Namespace Reqnroll.Assist.ValueRetrievers Assembly Reqnroll.dll public class ShortValueRetriever : StructRetriever<short>, IValueRetriever Inheritance object StructRetriever<short> ShortValueRetriever Implements IValueRetriever Inherited Members StructRetriever<short>.CanRetrieve(KeyValuePair<string, string>, Type, Type) StructRetriever<short>.Retrieve(KeyValuePair<string, string>, Type, Type) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetNonEmptyValue(string) protected override short GetNonEmptyValue(string value) Parameters value string Returns short"
  },
  "api/Reqnroll.Assist.ValueRetrievers.StringValueRetriever.html": {
    "href": "api/Reqnroll.Assist.ValueRetrievers.StringValueRetriever.html",
    "title": "Class StringValueRetriever | Unofficial Reqnroll Documentation",
    "summary": "Class StringValueRetriever Namespace Reqnroll.Assist.ValueRetrievers Assembly Reqnroll.dll public class StringValueRetriever : ClassRetriever<string>, IValueRetriever Inheritance object ClassRetriever<string> StringValueRetriever Implements IValueRetriever Inherited Members ClassRetriever<string>.CanRetrieve(KeyValuePair<string, string>, Type, Type) ClassRetriever<string>.Retrieve(KeyValuePair<string, string>, Type, Type) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetNonEmptyValue(string) protected override string GetNonEmptyValue(string value) Parameters value string Returns string"
  },
  "api/Reqnroll.Assist.ValueRetrievers.StructRetriever-1.html": {
    "href": "api/Reqnroll.Assist.ValueRetrievers.StructRetriever-1.html",
    "title": "Class StructRetriever<T> | Unofficial Reqnroll Documentation",
    "summary": "Class StructRetriever<T> Namespace Reqnroll.Assist.ValueRetrievers Assembly Reqnroll.dll public abstract class StructRetriever<T> : IValueRetriever where T : struct Type Parameters T Inheritance object StructRetriever<T> Implements IValueRetriever Derived BoolValueRetriever ByteValueRetriever CharValueRetriever DateTimeOffsetValueRetriever DateTimeValueRetriever DecimalValueRetriever DoubleValueRetriever FloatValueRetriever GuidValueRetriever IntValueRetriever LongValueRetriever SByteValueRetriever ShortValueRetriever TimeSpanValueRetriever UIntValueRetriever ULongValueRetriever UShortValueRetriever Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CanRetrieve(KeyValuePair<string, string>, Type, Type) Determines if this retriever can retrieve the actual value from a key->value set in a table. public bool CanRetrieve(KeyValuePair<string, string> keyValuePair, Type targetType, Type propertyType) Parameters keyValuePair KeyValuePair<string, string> Key value pair. targetType Type The type of the object that is being built from the table. propertyType Type The type of the property or member that is being set. Returns bool true if this instance can retrieve the specified key->value; otherwise, false. GetNonEmptyValue(string) protected abstract T GetNonEmptyValue(string value) Parameters value string Returns T Retrieve(KeyValuePair<string, string>, Type, Type) Retrieve the value from a key-> value set, as the expected type on targetType. public object Retrieve(KeyValuePair<string, string> keyValuePair, Type targetType, Type propertyType) Parameters keyValuePair KeyValuePair<string, string> Key value pair. targetType Type The type of the object that is being built from the table. propertyType Type The type of the property or member that is being set. Returns object"
  },
  "api/Reqnroll.Assist.ValueRetrievers.TimeSpanValueRetriever.html": {
    "href": "api/Reqnroll.Assist.ValueRetrievers.TimeSpanValueRetriever.html",
    "title": "Class TimeSpanValueRetriever | Unofficial Reqnroll Documentation",
    "summary": "Class TimeSpanValueRetriever Namespace Reqnroll.Assist.ValueRetrievers Assembly Reqnroll.dll public class TimeSpanValueRetriever : StructRetriever<TimeSpan>, IValueRetriever Inheritance object StructRetriever<TimeSpan> TimeSpanValueRetriever Implements IValueRetriever Inherited Members StructRetriever<TimeSpan>.CanRetrieve(KeyValuePair<string, string>, Type, Type) StructRetriever<TimeSpan>.Retrieve(KeyValuePair<string, string>, Type, Type) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetNonEmptyValue(string) protected override TimeSpan GetNonEmptyValue(string value) Parameters value string Returns TimeSpan"
  },
  "api/Reqnroll.Assist.ValueRetrievers.UIntValueRetriever.html": {
    "href": "api/Reqnroll.Assist.ValueRetrievers.UIntValueRetriever.html",
    "title": "Class UIntValueRetriever | Unofficial Reqnroll Documentation",
    "summary": "Class UIntValueRetriever Namespace Reqnroll.Assist.ValueRetrievers Assembly Reqnroll.dll public class UIntValueRetriever : StructRetriever<uint>, IValueRetriever Inheritance object StructRetriever<uint> UIntValueRetriever Implements IValueRetriever Inherited Members StructRetriever<uint>.CanRetrieve(KeyValuePair<string, string>, Type, Type) StructRetriever<uint>.Retrieve(KeyValuePair<string, string>, Type, Type) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetNonEmptyValue(string) protected override uint GetNonEmptyValue(string value) Parameters value string Returns uint"
  },
  "api/Reqnroll.Assist.ValueRetrievers.ULongValueRetriever.html": {
    "href": "api/Reqnroll.Assist.ValueRetrievers.ULongValueRetriever.html",
    "title": "Class ULongValueRetriever | Unofficial Reqnroll Documentation",
    "summary": "Class ULongValueRetriever Namespace Reqnroll.Assist.ValueRetrievers Assembly Reqnroll.dll public class ULongValueRetriever : StructRetriever<ulong>, IValueRetriever Inheritance object StructRetriever<ulong> ULongValueRetriever Implements IValueRetriever Inherited Members StructRetriever<ulong>.CanRetrieve(KeyValuePair<string, string>, Type, Type) StructRetriever<ulong>.Retrieve(KeyValuePair<string, string>, Type, Type) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetNonEmptyValue(string) protected override ulong GetNonEmptyValue(string value) Parameters value string Returns ulong"
  },
  "api/Reqnroll.Assist.ValueRetrievers.UShortValueRetriever.html": {
    "href": "api/Reqnroll.Assist.ValueRetrievers.UShortValueRetriever.html",
    "title": "Class UShortValueRetriever | Unofficial Reqnroll Documentation",
    "summary": "Class UShortValueRetriever Namespace Reqnroll.Assist.ValueRetrievers Assembly Reqnroll.dll public class UShortValueRetriever : StructRetriever<ushort>, IValueRetriever Inheritance object StructRetriever<ushort> UShortValueRetriever Implements IValueRetriever Inherited Members StructRetriever<ushort>.CanRetrieve(KeyValuePair<string, string>, Type, Type) StructRetriever<ushort>.Retrieve(KeyValuePair<string, string>, Type, Type) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetNonEmptyValue(string) protected override ushort GetNonEmptyValue(string value) Parameters value string Returns ushort"
  },
  "api/Reqnroll.Assist.ValueRetrievers.UriValueRetriever.html": {
    "href": "api/Reqnroll.Assist.ValueRetrievers.UriValueRetriever.html",
    "title": "Class UriValueRetriever | Unofficial Reqnroll Documentation",
    "summary": "Class UriValueRetriever Namespace Reqnroll.Assist.ValueRetrievers Assembly Reqnroll.dll public class UriValueRetriever : ClassRetriever<Uri>, IValueRetriever Inheritance object ClassRetriever<Uri> UriValueRetriever Implements IValueRetriever Inherited Members ClassRetriever<Uri>.CanRetrieve(KeyValuePair<string, string>, Type, Type) ClassRetriever<Uri>.Retrieve(KeyValuePair<string, string>, Type, Type) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetNonEmptyValue(string) protected override Uri GetNonEmptyValue(string value) Parameters value string Returns Uri"
  },
  "api/Reqnroll.Assist.ValueRetrievers.html": {
    "href": "api/Reqnroll.Assist.ValueRetrievers.html",
    "title": "Namespace Reqnroll.Assist.ValueRetrievers | Unofficial Reqnroll Documentation",
    "summary": "Namespace Reqnroll.Assist.ValueRetrievers Classes ArrayValueRetriever BoolValueRetriever ByteValueRetriever CharValueRetriever ClassRetriever<T> DateTimeOffsetValueRetriever DateTimeValueRetriever DecimalValueRetriever DoubleValueRetriever EnumValueRetriever EnumerableValueRetriever FloatValueRetriever GuidValueRetriever IntValueRetriever ListValueRetriever LongValueRetriever NullValueRetriever SByteValueRetriever ShortValueRetriever StringValueRetriever StructRetriever<T> TimeSpanValueRetriever UIntValueRetriever ULongValueRetriever UShortValueRetriever UriValueRetriever"
  },
  "api/Reqnroll.Assist.html": {
    "href": "api/Reqnroll.Assist.html",
    "title": "Namespace Reqnroll.Assist | Unofficial Reqnroll Documentation",
    "summary": "Namespace Reqnroll.Assist Classes EnumerableProjection<T> FindInSetExtensionMethods InstanceCreationOptions ProjectionEnumerator<T> ProjectionExtensionMethods Projection<T> RowExtensionMethods Service ServiceComponentList<T> SetComparer<T> TableDifferenceItem<TT> TableDifferenceResults<TT> Interfaces ITableDiffExceptionBuilder<T> IValueComparer A class that will compare a key->value from a table to an actual value. IValueRetriever A class that will retrieve an object's actual value from a key->value in a table."
  },
  "api/Reqnroll.BeforeAttribute.html": {
    "href": "api/Reqnroll.BeforeAttribute.html",
    "title": "Class BeforeAttribute | Unofficial Reqnroll Documentation",
    "summary": "Class BeforeAttribute Namespace Reqnroll Assembly Reqnroll.dll Specifies a hook to be executed before each scenario. This attribute is a synonym to BeforeScenarioAttribute. public class BeforeAttribute : BeforeScenarioAttribute Inheritance object Attribute HookAttribute BeforeScenarioAttribute BeforeAttribute Inherited Members HookAttribute.Tags HookAttribute.Order HookAttribute.DefaultOrder Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors BeforeAttribute(params string[]) public BeforeAttribute(params string[] tags) Parameters tags string[]"
  },
  "api/Reqnroll.BeforeFeatureAttribute.html": {
    "href": "api/Reqnroll.BeforeFeatureAttribute.html",
    "title": "Class BeforeFeatureAttribute | Unofficial Reqnroll Documentation",
    "summary": "Class BeforeFeatureAttribute Namespace Reqnroll Assembly Reqnroll.dll public class BeforeFeatureAttribute : HookAttribute Inheritance object Attribute HookAttribute BeforeFeatureAttribute Inherited Members HookAttribute.Tags HookAttribute.Order HookAttribute.DefaultOrder Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors BeforeFeatureAttribute(params string[]) public BeforeFeatureAttribute(params string[] tags) Parameters tags string[]"
  },
  "api/Reqnroll.BeforeScenarioAttribute.html": {
    "href": "api/Reqnroll.BeforeScenarioAttribute.html",
    "title": "Class BeforeScenarioAttribute | Unofficial Reqnroll Documentation",
    "summary": "Class BeforeScenarioAttribute Namespace Reqnroll Assembly Reqnroll.dll Specifies a hook to be executed before each scenario. public class BeforeScenarioAttribute : HookAttribute Inheritance object Attribute HookAttribute BeforeScenarioAttribute Derived BeforeAttribute Inherited Members HookAttribute.Tags HookAttribute.Order HookAttribute.DefaultOrder Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors BeforeScenarioAttribute(params string[]) public BeforeScenarioAttribute(params string[] tags) Parameters tags string[]"
  },
  "api/Reqnroll.BeforeScenarioBlockAttribute.html": {
    "href": "api/Reqnroll.BeforeScenarioBlockAttribute.html",
    "title": "Class BeforeScenarioBlockAttribute | Unofficial Reqnroll Documentation",
    "summary": "Class BeforeScenarioBlockAttribute Namespace Reqnroll Assembly Reqnroll.dll public class BeforeScenarioBlockAttribute : HookAttribute Inheritance object Attribute HookAttribute BeforeScenarioBlockAttribute Inherited Members HookAttribute.Tags HookAttribute.Order HookAttribute.DefaultOrder Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors BeforeScenarioBlockAttribute(params string[]) public BeforeScenarioBlockAttribute(params string[] tags) Parameters tags string[]"
  },
  "api/Reqnroll.BeforeStepAttribute.html": {
    "href": "api/Reqnroll.BeforeStepAttribute.html",
    "title": "Class BeforeStepAttribute | Unofficial Reqnroll Documentation",
    "summary": "Class BeforeStepAttribute Namespace Reqnroll Assembly Reqnroll.dll public class BeforeStepAttribute : HookAttribute Inheritance object Attribute HookAttribute BeforeStepAttribute Inherited Members HookAttribute.Tags HookAttribute.Order HookAttribute.DefaultOrder Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors BeforeStepAttribute(params string[]) public BeforeStepAttribute(params string[] tags) Parameters tags string[]"
  },
  "api/Reqnroll.BeforeTestRunAttribute.html": {
    "href": "api/Reqnroll.BeforeTestRunAttribute.html",
    "title": "Class BeforeTestRunAttribute | Unofficial Reqnroll Documentation",
    "summary": "Class BeforeTestRunAttribute Namespace Reqnroll Assembly Reqnroll.dll public class BeforeTestRunAttribute : HookAttribute Inheritance object Attribute HookAttribute BeforeTestRunAttribute Inherited Members HookAttribute.Tags HookAttribute.Order HookAttribute.DefaultOrder Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors BeforeTestRunAttribute() Constructs a new BeforeTestRunAttribute with a default Order of 10000 public BeforeTestRunAttribute()"
  },
  "api/Reqnroll.BindingAttribute.html": {
    "href": "api/Reqnroll.BindingAttribute.html",
    "title": "Class BindingAttribute | Unofficial Reqnroll Documentation",
    "summary": "Class BindingAttribute Namespace Reqnroll Assembly Reqnroll.dll Marker attribute that specifies that this class may contain bindings (step definitions, hooks, etc.) [AttributeUsage(AttributeTargets.Class, AllowMultiple = false)] public class BindingAttribute : Attribute Inheritance object Attribute BindingAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Reqnroll.BindingException.html": {
    "href": "api/Reqnroll.BindingException.html",
    "title": "Class BindingException | Unofficial Reqnroll Documentation",
    "summary": "Class BindingException Namespace Reqnroll Assembly Reqnroll.dll [Serializable] public class BindingException : ReqnrollException, ISerializable Inheritance object Exception ReqnrollException BindingException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors BindingException() public BindingException() BindingException(SerializationInfo, StreamingContext) protected BindingException(SerializationInfo info, StreamingContext context) Parameters info SerializationInfo context StreamingContext BindingException(string) public BindingException(string message) Parameters message string BindingException(string, Exception) public BindingException(string message, Exception inner) Parameters message string inner Exception"
  },
  "api/Reqnroll.BindingSkeletons.AnalyzedStepParameter.html": {
    "href": "api/Reqnroll.BindingSkeletons.AnalyzedStepParameter.html",
    "title": "Class AnalyzedStepParameter | Unofficial Reqnroll Documentation",
    "summary": "Class AnalyzedStepParameter Namespace Reqnroll.BindingSkeletons Assembly Reqnroll.dll public class AnalyzedStepParameter Inheritance object AnalyzedStepParameter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AnalyzedStepParameter(string, string, string, string, string) public AnalyzedStepParameter(string type, string name, string regexPattern = null, string cucumberExpressionTypeName = null, string wrapText = \"\") Parameters type string name string regexPattern string cucumberExpressionTypeName string wrapText string Fields CucumberExpressionTypeName public readonly string CucumberExpressionTypeName Field Value string Name public readonly string Name Field Value string RegexPattern public readonly string RegexPattern Field Value string Type public readonly string Type Field Value string WrapText public readonly string WrapText Field Value string"
  },
  "api/Reqnroll.BindingSkeletons.AnalyzedStepText.html": {
    "href": "api/Reqnroll.BindingSkeletons.AnalyzedStepText.html",
    "title": "Class AnalyzedStepText | Unofficial Reqnroll Documentation",
    "summary": "Class AnalyzedStepText Namespace Reqnroll.BindingSkeletons Assembly Reqnroll.dll public class AnalyzedStepText Inheritance object AnalyzedStepText Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Parameters public readonly List<AnalyzedStepParameter> Parameters Field Value List<AnalyzedStepParameter> TextParts public readonly List<string> TextParts Field Value List<string>"
  },
  "api/Reqnroll.BindingSkeletons.DefaultSkeletonTemplateProvider.html": {
    "href": "api/Reqnroll.BindingSkeletons.DefaultSkeletonTemplateProvider.html",
    "title": "Class DefaultSkeletonTemplateProvider | Unofficial Reqnroll Documentation",
    "summary": "Class DefaultSkeletonTemplateProvider Namespace Reqnroll.BindingSkeletons Assembly Reqnroll.dll public class DefaultSkeletonTemplateProvider : FileBasedSkeletonTemplateProvider, ISkeletonTemplateProvider Inheritance object FileBasedSkeletonTemplateProvider DefaultSkeletonTemplateProvider Implements ISkeletonTemplateProvider Inherited Members FileBasedSkeletonTemplateProvider.MissingTemplate(string) FileBasedSkeletonTemplateProvider.GetStepDefinitionTemplate(ProgrammingLanguage, bool) FileBasedSkeletonTemplateProvider.GetStepDefinitionClassTemplate(ProgrammingLanguage) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DefaultSkeletonTemplateProvider(ResourceSkeletonTemplateProvider) public DefaultSkeletonTemplateProvider(ResourceSkeletonTemplateProvider resourceSkeletonTemplateProvider) Parameters resourceSkeletonTemplateProvider ResourceSkeletonTemplateProvider Methods GetTemplate(string) protected override string GetTemplate(string key) Parameters key string Returns string GetTemplateFileContent() protected override string GetTemplateFileContent() Returns string"
  },
  "api/Reqnroll.BindingSkeletons.FileBasedSkeletonTemplateProvider.html": {
    "href": "api/Reqnroll.BindingSkeletons.FileBasedSkeletonTemplateProvider.html",
    "title": "Class FileBasedSkeletonTemplateProvider | Unofficial Reqnroll Documentation",
    "summary": "Class FileBasedSkeletonTemplateProvider Namespace Reqnroll.BindingSkeletons Assembly Reqnroll.dll public abstract class FileBasedSkeletonTemplateProvider : ISkeletonTemplateProvider Inheritance object FileBasedSkeletonTemplateProvider Implements ISkeletonTemplateProvider Derived DefaultSkeletonTemplateProvider ResourceSkeletonTemplateProvider Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetStepDefinitionClassTemplate(ProgrammingLanguage) public string GetStepDefinitionClassTemplate(ProgrammingLanguage language) Parameters language ProgrammingLanguage Returns string GetStepDefinitionTemplate(ProgrammingLanguage, bool) public string GetStepDefinitionTemplate(ProgrammingLanguage language, bool withExpression) Parameters language ProgrammingLanguage withExpression bool Returns string GetTemplate(string) protected virtual string GetTemplate(string key) Parameters key string Returns string GetTemplateFileContent() protected abstract string GetTemplateFileContent() Returns string MissingTemplate(string) protected virtual string MissingTemplate(string key) Parameters key string Returns string"
  },
  "api/Reqnroll.BindingSkeletons.ISkeletonTemplateProvider.html": {
    "href": "api/Reqnroll.BindingSkeletons.ISkeletonTemplateProvider.html",
    "title": "Interface ISkeletonTemplateProvider | Unofficial Reqnroll Documentation",
    "summary": "Interface ISkeletonTemplateProvider Namespace Reqnroll.BindingSkeletons Assembly Reqnroll.dll public interface ISkeletonTemplateProvider Methods GetStepDefinitionClassTemplate(ProgrammingLanguage) string GetStepDefinitionClassTemplate(ProgrammingLanguage language) Parameters language ProgrammingLanguage Returns string GetStepDefinitionTemplate(ProgrammingLanguage, bool) string GetStepDefinitionTemplate(ProgrammingLanguage language, bool withExpression) Parameters language ProgrammingLanguage withExpression bool Returns string"
  },
  "api/Reqnroll.BindingSkeletons.IStepDefinitionSkeletonProvider.html": {
    "href": "api/Reqnroll.BindingSkeletons.IStepDefinitionSkeletonProvider.html",
    "title": "Interface IStepDefinitionSkeletonProvider | Unofficial Reqnroll Documentation",
    "summary": "Interface IStepDefinitionSkeletonProvider Namespace Reqnroll.BindingSkeletons Assembly Reqnroll.dll public interface IStepDefinitionSkeletonProvider Methods GetBindingClassSkeleton(ProgrammingLanguage, StepInstance[], string, string, StepDefinitionSkeletonStyle, CultureInfo) string GetBindingClassSkeleton(ProgrammingLanguage language, StepInstance[] stepInstances, string namespaceName, string className, StepDefinitionSkeletonStyle style, CultureInfo bindingCulture) Parameters language ProgrammingLanguage stepInstances StepInstance[] namespaceName string className string style StepDefinitionSkeletonStyle bindingCulture CultureInfo Returns string GetStepDefinitionSkeleton(ProgrammingLanguage, StepInstance, StepDefinitionSkeletonStyle, CultureInfo) string GetStepDefinitionSkeleton(ProgrammingLanguage language, StepInstance stepInstance, StepDefinitionSkeletonStyle style, CultureInfo bindingCulture) Parameters language ProgrammingLanguage stepInstance StepInstance style StepDefinitionSkeletonStyle bindingCulture CultureInfo Returns string"
  },
  "api/Reqnroll.BindingSkeletons.IStepTextAnalyzer.html": {
    "href": "api/Reqnroll.BindingSkeletons.IStepTextAnalyzer.html",
    "title": "Interface IStepTextAnalyzer | Unofficial Reqnroll Documentation",
    "summary": "Interface IStepTextAnalyzer Namespace Reqnroll.BindingSkeletons Assembly Reqnroll.dll public interface IStepTextAnalyzer Methods Analyze(string, CultureInfo) AnalyzedStepText Analyze(string stepText, CultureInfo bindingCulture) Parameters stepText string bindingCulture CultureInfo Returns AnalyzedStepText"
  },
  "api/Reqnroll.BindingSkeletons.Keywords.html": {
    "href": "api/Reqnroll.BindingSkeletons.Keywords.html",
    "title": "Class Keywords | Unofficial Reqnroll Documentation",
    "summary": "Class Keywords Namespace Reqnroll.BindingSkeletons Assembly Reqnroll.dll public static class Keywords Inheritance object Keywords Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods EscapeCSharpKeyword(string) public static string EscapeCSharpKeyword(string argumentName) Parameters argumentName string Returns string EscapeFSharpKeyword(string) public static string EscapeFSharpKeyword(string argumentName) Parameters argumentName string Returns string EscapeVBKeyword(string) public static string EscapeVBKeyword(string argumentName) Parameters argumentName string Returns string"
  },
  "api/Reqnroll.BindingSkeletons.ParameterNameExtensions.html": {
    "href": "api/Reqnroll.BindingSkeletons.ParameterNameExtensions.html",
    "title": "Class ParameterNameExtensions | Unofficial Reqnroll Documentation",
    "summary": "Class ParameterNameExtensions Namespace Reqnroll.BindingSkeletons Assembly Reqnroll.dll public static class ParameterNameExtensions Inheritance object ParameterNameExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Reqnroll.BindingSkeletons.ResourceSkeletonTemplateProvider.html": {
    "href": "api/Reqnroll.BindingSkeletons.ResourceSkeletonTemplateProvider.html",
    "title": "Class ResourceSkeletonTemplateProvider | Unofficial Reqnroll Documentation",
    "summary": "Class ResourceSkeletonTemplateProvider Namespace Reqnroll.BindingSkeletons Assembly Reqnroll.dll public class ResourceSkeletonTemplateProvider : FileBasedSkeletonTemplateProvider, ISkeletonTemplateProvider Inheritance object FileBasedSkeletonTemplateProvider ResourceSkeletonTemplateProvider Implements ISkeletonTemplateProvider Inherited Members FileBasedSkeletonTemplateProvider.MissingTemplate(string) FileBasedSkeletonTemplateProvider.GetTemplate(string) FileBasedSkeletonTemplateProvider.GetStepDefinitionTemplate(ProgrammingLanguage, bool) FileBasedSkeletonTemplateProvider.GetStepDefinitionClassTemplate(ProgrammingLanguage) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetTemplateFileContent() protected override string GetTemplateFileContent() Returns string"
  },
  "api/Reqnroll.BindingSkeletons.StepDefinitionSkeletonProvider.html": {
    "href": "api/Reqnroll.BindingSkeletons.StepDefinitionSkeletonProvider.html",
    "title": "Class StepDefinitionSkeletonProvider | Unofficial Reqnroll Documentation",
    "summary": "Class StepDefinitionSkeletonProvider Namespace Reqnroll.BindingSkeletons Assembly Reqnroll.dll public class StepDefinitionSkeletonProvider : IStepDefinitionSkeletonProvider Inheritance object StepDefinitionSkeletonProvider Implements IStepDefinitionSkeletonProvider Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors StepDefinitionSkeletonProvider(ISkeletonTemplateProvider, IStepTextAnalyzer) public StepDefinitionSkeletonProvider(ISkeletonTemplateProvider templateProvider, IStepTextAnalyzer stepTextAnalyzer) Parameters templateProvider ISkeletonTemplateProvider stepTextAnalyzer IStepTextAnalyzer Fields METHOD_INDENT public const string METHOD_INDENT = \" \" Field Value string Methods EscapeRegex(string) protected static string EscapeRegex(string text) Parameters text string Returns string GetBindingClassSkeleton(ProgrammingLanguage, StepInstance[], string, string, StepDefinitionSkeletonStyle, CultureInfo) public string GetBindingClassSkeleton(ProgrammingLanguage language, StepInstance[] stepInstances, string namespaceName, string className, StepDefinitionSkeletonStyle style, CultureInfo bindingCulture) Parameters language ProgrammingLanguage stepInstances StepInstance[] namespaceName string className string style StepDefinitionSkeletonStyle bindingCulture CultureInfo Returns string GetStepDefinitionSkeleton(ProgrammingLanguage, StepInstance, StepDefinitionSkeletonStyle, CultureInfo) public virtual string GetStepDefinitionSkeleton(ProgrammingLanguage language, StepInstance stepInstance, StepDefinitionSkeletonStyle style, CultureInfo bindingCulture) Parameters language ProgrammingLanguage stepInstance StepInstance style StepDefinitionSkeletonStyle bindingCulture CultureInfo Returns string"
  },
  "api/Reqnroll.BindingSkeletons.StepDefinitionSkeletonStyle.html": {
    "href": "api/Reqnroll.BindingSkeletons.StepDefinitionSkeletonStyle.html",
    "title": "Enum StepDefinitionSkeletonStyle | Unofficial Reqnroll Documentation",
    "summary": "Enum StepDefinitionSkeletonStyle Namespace Reqnroll.BindingSkeletons Assembly Reqnroll.dll public enum StepDefinitionSkeletonStyle Fields CucumberExpressionAttribute = 4 MethodNamePascalCase = 2 MethodNameRegex = 3 MethodNameUnderscores = 1 RegexAttribute = 0"
  },
  "api/Reqnroll.BindingSkeletons.StepParameterNameGenerator.html": {
    "href": "api/Reqnroll.BindingSkeletons.StepParameterNameGenerator.html",
    "title": "Class StepParameterNameGenerator | Unofficial Reqnroll Documentation",
    "summary": "Class StepParameterNameGenerator Namespace Reqnroll.BindingSkeletons Assembly Reqnroll.dll public class StepParameterNameGenerator Inheritance object StepParameterNameGenerator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GenerateParameterName(string, int, List<string>) public static string GenerateParameterName(string value, int paramIndex, List<string> usedParameterNames) Parameters value string paramIndex int usedParameterNames List<string> Returns string IsSingleWordSurroundedByAngleBrackets(string) public static bool IsSingleWordSurroundedByAngleBrackets(string value) Parameters value string Returns bool IsSingleWordWithNoNumbers(string) public static bool IsSingleWordWithNoNumbers(string value) Parameters value string Returns bool LowerCaseFirstLetter(string) public static string LowerCaseFirstLetter(string value) Parameters value string Returns string RemoveSurroundingAngleBrackets(string) public static string RemoveSurroundingAngleBrackets(string value) Parameters value string Returns string UniquelyIdentified(string, List<string>, int) public static string UniquelyIdentified(string value, List<string> usedParameterNames, int parmIndex) Parameters value string usedParameterNames List<string> parmIndex int Returns string"
  },
  "api/Reqnroll.BindingSkeletons.StepTextAnalyzer.html": {
    "href": "api/Reqnroll.BindingSkeletons.StepTextAnalyzer.html",
    "title": "Class StepTextAnalyzer | Unofficial Reqnroll Documentation",
    "summary": "Class StepTextAnalyzer Namespace Reqnroll.BindingSkeletons Assembly Reqnroll.dll public class StepTextAnalyzer : IStepTextAnalyzer Inheritance object StepTextAnalyzer Implements IStepTextAnalyzer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Analyze(string, CultureInfo) public AnalyzedStepText Analyze(string stepText, CultureInfo bindingCulture) Parameters stepText string bindingCulture CultureInfo Returns AnalyzedStepText"
  },
  "api/Reqnroll.BindingSkeletons.html": {
    "href": "api/Reqnroll.BindingSkeletons.html",
    "title": "Namespace Reqnroll.BindingSkeletons | Unofficial Reqnroll Documentation",
    "summary": "Namespace Reqnroll.BindingSkeletons Classes AnalyzedStepParameter AnalyzedStepText DefaultSkeletonTemplateProvider FileBasedSkeletonTemplateProvider Keywords ParameterNameExtensions ResourceSkeletonTemplateProvider StepDefinitionSkeletonProvider StepParameterNameGenerator StepTextAnalyzer Interfaces ISkeletonTemplateProvider IStepDefinitionSkeletonProvider IStepTextAnalyzer Enums StepDefinitionSkeletonStyle"
  },
  "api/Reqnroll.Bindings.BindingDelegateInvoker.html": {
    "href": "api/Reqnroll.Bindings.BindingDelegateInvoker.html",
    "title": "Class BindingDelegateInvoker | Unofficial Reqnroll Documentation",
    "summary": "Class BindingDelegateInvoker Namespace Reqnroll.Bindings Assembly Reqnroll.dll public class BindingDelegateInvoker : IBindingDelegateInvoker Inheritance object BindingDelegateInvoker Implements IBindingDelegateInvoker Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods InvokeBindingDelegateSync(Delegate, object[]) protected virtual object InvokeBindingDelegateSync(Delegate bindingDelegate, object[] invokeArgs) Parameters bindingDelegate Delegate invokeArgs object[] Returns object InvokeDelegateAsync(Delegate, object[], ExecutionContextHolder) public virtual Task<object> InvokeDelegateAsync(Delegate bindingDelegate, object[] invokeArgs, ExecutionContextHolder executionContext) Parameters bindingDelegate Delegate invokeArgs object[] executionContext ExecutionContextHolder Returns Task<object>"
  },
  "api/Reqnroll.Bindings.BindingError.html": {
    "href": "api/Reqnroll.Bindings.BindingError.html",
    "title": "Class BindingError | Unofficial Reqnroll Documentation",
    "summary": "Class BindingError Namespace Reqnroll.Bindings Assembly Reqnroll.dll public class BindingError Inheritance object BindingError Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors BindingError(BindingErrorType, string) public BindingError(BindingErrorType type, string message) Parameters type BindingErrorType message string Properties Message public string Message { get; } Property Value string Type public BindingErrorType Type { get; } Property Value BindingErrorType"
  },
  "api/Reqnroll.Bindings.BindingErrorType.html": {
    "href": "api/Reqnroll.Bindings.BindingErrorType.html",
    "title": "Enum BindingErrorType | Unofficial Reqnroll Documentation",
    "summary": "Enum BindingErrorType Namespace Reqnroll.Bindings Assembly Reqnroll.dll public enum BindingErrorType Fields BindingError = 1 StepDefinitionError = 2 TypeLoadError = 0"
  },
  "api/Reqnroll.Bindings.BindingFactory.html": {
    "href": "api/Reqnroll.Bindings.BindingFactory.html",
    "title": "Class BindingFactory | Unofficial Reqnroll Documentation",
    "summary": "Class BindingFactory Namespace Reqnroll.Bindings Assembly Reqnroll.dll public class BindingFactory : IBindingFactory Inheritance object BindingFactory Implements IBindingFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors BindingFactory(IStepDefinitionRegexCalculator, ICucumberExpressionStepDefinitionBindingBuilderFactory, ICucumberExpressionDetector) public BindingFactory(IStepDefinitionRegexCalculator _stepDefinitionRegexCalculator, ICucumberExpressionStepDefinitionBindingBuilderFactory _cucumberExpressionStepDefinitionBindingBuilderFactory, ICucumberExpressionDetector _cucumberExpressionDetector) Parameters _stepDefinitionRegexCalculator IStepDefinitionRegexCalculator _cucumberExpressionStepDefinitionBindingBuilderFactory ICucumberExpressionStepDefinitionBindingBuilderFactory _cucumberExpressionDetector ICucumberExpressionDetector Methods CreateHookBinding(IBindingMethod, HookType, BindingScope, int) public IHookBinding CreateHookBinding(IBindingMethod bindingMethod, HookType hookType, BindingScope bindingScope, int hookOrder) Parameters bindingMethod IBindingMethod hookType HookType bindingScope BindingScope hookOrder int Returns IHookBinding CreateStepArgumentTransformation(string, IBindingMethod, string, int) public IStepArgumentTransformationBinding CreateStepArgumentTransformation(string regexString, IBindingMethod bindingMethod, string parameterTypeName = null, int order = 10000) Parameters regexString string bindingMethod IBindingMethod parameterTypeName string order int Returns IStepArgumentTransformationBinding CreateStepDefinitionBindingBuilder(StepDefinitionType, IBindingMethod, BindingScope, string) public IStepDefinitionBindingBuilder CreateStepDefinitionBindingBuilder(StepDefinitionType stepDefinitionType, IBindingMethod bindingMethod, BindingScope bindingScope, string expressionString) Parameters stepDefinitionType StepDefinitionType bindingMethod IBindingMethod bindingScope BindingScope expressionString string Returns IStepDefinitionBindingBuilder"
  },
  "api/Reqnroll.Bindings.BindingInvoker.ExtendedAction-10.html": {
    "href": "api/Reqnroll.Bindings.BindingInvoker.ExtendedAction-10.html",
    "title": "Delegate BindingInvoker.ExtendedAction<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> | Unofficial Reqnroll Documentation",
    "summary": "Delegate BindingInvoker.ExtendedAction<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> Namespace Reqnroll.Bindings Assembly Reqnroll.dll public delegate void BindingInvoker.ExtendedAction<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 arg10 T10 Type Parameters T1 T2 T3 T4 T5 T6 T7 T8 T9 T10"
  },
  "api/Reqnroll.Bindings.BindingInvoker.ExtendedAction-11.html": {
    "href": "api/Reqnroll.Bindings.BindingInvoker.ExtendedAction-11.html",
    "title": "Delegate BindingInvoker.ExtendedAction<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> | Unofficial Reqnroll Documentation",
    "summary": "Delegate BindingInvoker.ExtendedAction<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> Namespace Reqnroll.Bindings Assembly Reqnroll.dll public delegate void BindingInvoker.ExtendedAction<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 arg10 T10 arg11 T11 Type Parameters T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11"
  },
  "api/Reqnroll.Bindings.BindingInvoker.ExtendedAction-12.html": {
    "href": "api/Reqnroll.Bindings.BindingInvoker.ExtendedAction-12.html",
    "title": "Delegate BindingInvoker.ExtendedAction<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> | Unofficial Reqnroll Documentation",
    "summary": "Delegate BindingInvoker.ExtendedAction<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> Namespace Reqnroll.Bindings Assembly Reqnroll.dll public delegate void BindingInvoker.ExtendedAction<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11, T12 arg12) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 arg10 T10 arg11 T11 arg12 T12 Type Parameters T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12"
  },
  "api/Reqnroll.Bindings.BindingInvoker.ExtendedAction-13.html": {
    "href": "api/Reqnroll.Bindings.BindingInvoker.ExtendedAction-13.html",
    "title": "Delegate BindingInvoker.ExtendedAction<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> | Unofficial Reqnroll Documentation",
    "summary": "Delegate BindingInvoker.ExtendedAction<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> Namespace Reqnroll.Bindings Assembly Reqnroll.dll public delegate void BindingInvoker.ExtendedAction<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11, T12 arg12, T13 arg13) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 arg10 T10 arg11 T11 arg12 T12 arg13 T13 Type Parameters T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13"
  },
  "api/Reqnroll.Bindings.BindingInvoker.ExtendedAction-14.html": {
    "href": "api/Reqnroll.Bindings.BindingInvoker.ExtendedAction-14.html",
    "title": "Delegate BindingInvoker.ExtendedAction<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> | Unofficial Reqnroll Documentation",
    "summary": "Delegate BindingInvoker.ExtendedAction<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> Namespace Reqnroll.Bindings Assembly Reqnroll.dll public delegate void BindingInvoker.ExtendedAction<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11, T12 arg12, T13 arg13, T14 arg14) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 arg10 T10 arg11 T11 arg12 T12 arg13 T13 arg14 T14 Type Parameters T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 T14"
  },
  "api/Reqnroll.Bindings.BindingInvoker.ExtendedAction-15.html": {
    "href": "api/Reqnroll.Bindings.BindingInvoker.ExtendedAction-15.html",
    "title": "Delegate BindingInvoker.ExtendedAction<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> | Unofficial Reqnroll Documentation",
    "summary": "Delegate BindingInvoker.ExtendedAction<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> Namespace Reqnroll.Bindings Assembly Reqnroll.dll public delegate void BindingInvoker.ExtendedAction<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11, T12 arg12, T13 arg13, T14 arg14, T15 arg15) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 arg10 T10 arg11 T11 arg12 T12 arg13 T13 arg14 T14 arg15 T15 Type Parameters T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 T14 T15"
  },
  "api/Reqnroll.Bindings.BindingInvoker.ExtendedAction-16.html": {
    "href": "api/Reqnroll.Bindings.BindingInvoker.ExtendedAction-16.html",
    "title": "Delegate BindingInvoker.ExtendedAction<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> | Unofficial Reqnroll Documentation",
    "summary": "Delegate BindingInvoker.ExtendedAction<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> Namespace Reqnroll.Bindings Assembly Reqnroll.dll public delegate void BindingInvoker.ExtendedAction<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11, T12 arg12, T13 arg13, T14 arg14, T15 arg15, T16 arg16) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 arg10 T10 arg11 T11 arg12 T12 arg13 T13 arg14 T14 arg15 T15 arg16 T16 Type Parameters T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 T14 T15 T16"
  },
  "api/Reqnroll.Bindings.BindingInvoker.ExtendedAction-17.html": {
    "href": "api/Reqnroll.Bindings.BindingInvoker.ExtendedAction-17.html",
    "title": "Delegate BindingInvoker.ExtendedAction<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17> | Unofficial Reqnroll Documentation",
    "summary": "Delegate BindingInvoker.ExtendedAction<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17> Namespace Reqnroll.Bindings Assembly Reqnroll.dll public delegate void BindingInvoker.ExtendedAction<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11, T12 arg12, T13 arg13, T14 arg14, T15 arg15, T16 arg16, T17 arg17) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 arg10 T10 arg11 T11 arg12 T12 arg13 T13 arg14 T14 arg15 T15 arg16 T16 arg17 T17 Type Parameters T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 T14 T15 T16 T17"
  },
  "api/Reqnroll.Bindings.BindingInvoker.ExtendedAction-18.html": {
    "href": "api/Reqnroll.Bindings.BindingInvoker.ExtendedAction-18.html",
    "title": "Delegate BindingInvoker.ExtendedAction<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18> | Unofficial Reqnroll Documentation",
    "summary": "Delegate BindingInvoker.ExtendedAction<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18> Namespace Reqnroll.Bindings Assembly Reqnroll.dll public delegate void BindingInvoker.ExtendedAction<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11, T12 arg12, T13 arg13, T14 arg14, T15 arg15, T16 arg16, T17 arg17, T18 arg18) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 arg10 T10 arg11 T11 arg12 T12 arg13 T13 arg14 T14 arg15 T15 arg16 T16 arg17 T17 arg18 T18 Type Parameters T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 T14 T15 T16 T17 T18"
  },
  "api/Reqnroll.Bindings.BindingInvoker.ExtendedAction-19.html": {
    "href": "api/Reqnroll.Bindings.BindingInvoker.ExtendedAction-19.html",
    "title": "Delegate BindingInvoker.ExtendedAction<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19> | Unofficial Reqnroll Documentation",
    "summary": "Delegate BindingInvoker.ExtendedAction<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19> Namespace Reqnroll.Bindings Assembly Reqnroll.dll public delegate void BindingInvoker.ExtendedAction<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11, T12 arg12, T13 arg13, T14 arg14, T15 arg15, T16 arg16, T17 arg17, T18 arg18, T19 arg19) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 arg10 T10 arg11 T11 arg12 T12 arg13 T13 arg14 T14 arg15 T15 arg16 T16 arg17 T17 arg18 T18 arg19 T19 Type Parameters T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 T14 T15 T16 T17 T18 T19"
  },
  "api/Reqnroll.Bindings.BindingInvoker.ExtendedAction-20.html": {
    "href": "api/Reqnroll.Bindings.BindingInvoker.ExtendedAction-20.html",
    "title": "Delegate BindingInvoker.ExtendedAction<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20> | Unofficial Reqnroll Documentation",
    "summary": "Delegate BindingInvoker.ExtendedAction<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20> Namespace Reqnroll.Bindings Assembly Reqnroll.dll public delegate void BindingInvoker.ExtendedAction<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11, T12 arg12, T13 arg13, T14 arg14, T15 arg15, T16 arg16, T17 arg17, T18 arg18, T19 arg19, T20 arg20) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 arg10 T10 arg11 T11 arg12 T12 arg13 T13 arg14 T14 arg15 T15 arg16 T16 arg17 T17 arg18 T18 arg19 T19 arg20 T20 Type Parameters T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 T14 T15 T16 T17 T18 T19 T20"
  },
  "api/Reqnroll.Bindings.BindingInvoker.ExtendedAction-5.html": {
    "href": "api/Reqnroll.Bindings.BindingInvoker.ExtendedAction-5.html",
    "title": "Delegate BindingInvoker.ExtendedAction<T1, T2, T3, T4, T5> | Unofficial Reqnroll Documentation",
    "summary": "Delegate BindingInvoker.ExtendedAction<T1, T2, T3, T4, T5> Namespace Reqnroll.Bindings Assembly Reqnroll.dll public delegate void BindingInvoker.ExtendedAction<T1, T2, T3, T4, T5>(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 Type Parameters T1 T2 T3 T4 T5"
  },
  "api/Reqnroll.Bindings.BindingInvoker.ExtendedAction-6.html": {
    "href": "api/Reqnroll.Bindings.BindingInvoker.ExtendedAction-6.html",
    "title": "Delegate BindingInvoker.ExtendedAction<T1, T2, T3, T4, T5, T6> | Unofficial Reqnroll Documentation",
    "summary": "Delegate BindingInvoker.ExtendedAction<T1, T2, T3, T4, T5, T6> Namespace Reqnroll.Bindings Assembly Reqnroll.dll public delegate void BindingInvoker.ExtendedAction<T1, T2, T3, T4, T5, T6>(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 Type Parameters T1 T2 T3 T4 T5 T6"
  },
  "api/Reqnroll.Bindings.BindingInvoker.ExtendedAction-7.html": {
    "href": "api/Reqnroll.Bindings.BindingInvoker.ExtendedAction-7.html",
    "title": "Delegate BindingInvoker.ExtendedAction<T1, T2, T3, T4, T5, T6, T7> | Unofficial Reqnroll Documentation",
    "summary": "Delegate BindingInvoker.ExtendedAction<T1, T2, T3, T4, T5, T6, T7> Namespace Reqnroll.Bindings Assembly Reqnroll.dll public delegate void BindingInvoker.ExtendedAction<T1, T2, T3, T4, T5, T6, T7>(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 Type Parameters T1 T2 T3 T4 T5 T6 T7"
  },
  "api/Reqnroll.Bindings.BindingInvoker.ExtendedAction-8.html": {
    "href": "api/Reqnroll.Bindings.BindingInvoker.ExtendedAction-8.html",
    "title": "Delegate BindingInvoker.ExtendedAction<T1, T2, T3, T4, T5, T6, T7, T8> | Unofficial Reqnroll Documentation",
    "summary": "Delegate BindingInvoker.ExtendedAction<T1, T2, T3, T4, T5, T6, T7, T8> Namespace Reqnroll.Bindings Assembly Reqnroll.dll public delegate void BindingInvoker.ExtendedAction<T1, T2, T3, T4, T5, T6, T7, T8>(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 Type Parameters T1 T2 T3 T4 T5 T6 T7 T8"
  },
  "api/Reqnroll.Bindings.BindingInvoker.ExtendedAction-9.html": {
    "href": "api/Reqnroll.Bindings.BindingInvoker.ExtendedAction-9.html",
    "title": "Delegate BindingInvoker.ExtendedAction<T1, T2, T3, T4, T5, T6, T7, T8, T9> | Unofficial Reqnroll Documentation",
    "summary": "Delegate BindingInvoker.ExtendedAction<T1, T2, T3, T4, T5, T6, T7, T8, T9> Namespace Reqnroll.Bindings Assembly Reqnroll.dll public delegate void BindingInvoker.ExtendedAction<T1, T2, T3, T4, T5, T6, T7, T8, T9>(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 Type Parameters T1 T2 T3 T4 T5 T6 T7 T8 T9"
  },
  "api/Reqnroll.Bindings.BindingInvoker.ExtendedFunc-10.html": {
    "href": "api/Reqnroll.Bindings.BindingInvoker.ExtendedFunc-10.html",
    "title": "Delegate BindingInvoker.ExtendedFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult> | Unofficial Reqnroll Documentation",
    "summary": "Delegate BindingInvoker.ExtendedFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult> Namespace Reqnroll.Bindings Assembly Reqnroll.dll public delegate TResult BindingInvoker.ExtendedFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 Returns TResult Type Parameters T1 T2 T3 T4 T5 T6 T7 T8 T9 TResult"
  },
  "api/Reqnroll.Bindings.BindingInvoker.ExtendedFunc-11.html": {
    "href": "api/Reqnroll.Bindings.BindingInvoker.ExtendedFunc-11.html",
    "title": "Delegate BindingInvoker.ExtendedFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult> | Unofficial Reqnroll Documentation",
    "summary": "Delegate BindingInvoker.ExtendedFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult> Namespace Reqnroll.Bindings Assembly Reqnroll.dll public delegate TResult BindingInvoker.ExtendedFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 arg10 T10 Returns TResult Type Parameters T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 TResult"
  },
  "api/Reqnroll.Bindings.BindingInvoker.ExtendedFunc-12.html": {
    "href": "api/Reqnroll.Bindings.BindingInvoker.ExtendedFunc-12.html",
    "title": "Delegate BindingInvoker.ExtendedFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult> | Unofficial Reqnroll Documentation",
    "summary": "Delegate BindingInvoker.ExtendedFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult> Namespace Reqnroll.Bindings Assembly Reqnroll.dll public delegate TResult BindingInvoker.ExtendedFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 arg10 T10 arg11 T11 Returns TResult Type Parameters T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 TResult"
  },
  "api/Reqnroll.Bindings.BindingInvoker.ExtendedFunc-13.html": {
    "href": "api/Reqnroll.Bindings.BindingInvoker.ExtendedFunc-13.html",
    "title": "Delegate BindingInvoker.ExtendedFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult> | Unofficial Reqnroll Documentation",
    "summary": "Delegate BindingInvoker.ExtendedFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult> Namespace Reqnroll.Bindings Assembly Reqnroll.dll public delegate TResult BindingInvoker.ExtendedFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11, T12 arg12) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 arg10 T10 arg11 T11 arg12 T12 Returns TResult Type Parameters T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 TResult"
  },
  "api/Reqnroll.Bindings.BindingInvoker.ExtendedFunc-14.html": {
    "href": "api/Reqnroll.Bindings.BindingInvoker.ExtendedFunc-14.html",
    "title": "Delegate BindingInvoker.ExtendedFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult> | Unofficial Reqnroll Documentation",
    "summary": "Delegate BindingInvoker.ExtendedFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult> Namespace Reqnroll.Bindings Assembly Reqnroll.dll public delegate TResult BindingInvoker.ExtendedFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11, T12 arg12, T13 arg13) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 arg10 T10 arg11 T11 arg12 T12 arg13 T13 Returns TResult Type Parameters T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 TResult"
  },
  "api/Reqnroll.Bindings.BindingInvoker.ExtendedFunc-15.html": {
    "href": "api/Reqnroll.Bindings.BindingInvoker.ExtendedFunc-15.html",
    "title": "Delegate BindingInvoker.ExtendedFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult> | Unofficial Reqnroll Documentation",
    "summary": "Delegate BindingInvoker.ExtendedFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult> Namespace Reqnroll.Bindings Assembly Reqnroll.dll public delegate TResult BindingInvoker.ExtendedFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11, T12 arg12, T13 arg13, T14 arg14) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 arg10 T10 arg11 T11 arg12 T12 arg13 T13 arg14 T14 Returns TResult Type Parameters T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 T14 TResult"
  },
  "api/Reqnroll.Bindings.BindingInvoker.ExtendedFunc-16.html": {
    "href": "api/Reqnroll.Bindings.BindingInvoker.ExtendedFunc-16.html",
    "title": "Delegate BindingInvoker.ExtendedFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult> | Unofficial Reqnroll Documentation",
    "summary": "Delegate BindingInvoker.ExtendedFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult> Namespace Reqnroll.Bindings Assembly Reqnroll.dll public delegate TResult BindingInvoker.ExtendedFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11, T12 arg12, T13 arg13, T14 arg14, T15 arg15) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 arg10 T10 arg11 T11 arg12 T12 arg13 T13 arg14 T14 arg15 T15 Returns TResult Type Parameters T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 T14 T15 TResult"
  },
  "api/Reqnroll.Bindings.BindingInvoker.ExtendedFunc-17.html": {
    "href": "api/Reqnroll.Bindings.BindingInvoker.ExtendedFunc-17.html",
    "title": "Delegate BindingInvoker.ExtendedFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult> | Unofficial Reqnroll Documentation",
    "summary": "Delegate BindingInvoker.ExtendedFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult> Namespace Reqnroll.Bindings Assembly Reqnroll.dll public delegate TResult BindingInvoker.ExtendedFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult>(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11, T12 arg12, T13 arg13, T14 arg14, T15 arg15, T16 arg16) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 arg10 T10 arg11 T11 arg12 T12 arg13 T13 arg14 T14 arg15 T15 arg16 T16 Returns TResult Type Parameters T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 T14 T15 T16 TResult"
  },
  "api/Reqnroll.Bindings.BindingInvoker.ExtendedFunc-18.html": {
    "href": "api/Reqnroll.Bindings.BindingInvoker.ExtendedFunc-18.html",
    "title": "Delegate BindingInvoker.ExtendedFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, TResult> | Unofficial Reqnroll Documentation",
    "summary": "Delegate BindingInvoker.ExtendedFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, TResult> Namespace Reqnroll.Bindings Assembly Reqnroll.dll public delegate TResult BindingInvoker.ExtendedFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, TResult>(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11, T12 arg12, T13 arg13, T14 arg14, T15 arg15, T16 arg16, T17 arg17) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 arg10 T10 arg11 T11 arg12 T12 arg13 T13 arg14 T14 arg15 T15 arg16 T16 arg17 T17 Returns TResult Type Parameters T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 T14 T15 T16 T17 TResult"
  },
  "api/Reqnroll.Bindings.BindingInvoker.ExtendedFunc-19.html": {
    "href": "api/Reqnroll.Bindings.BindingInvoker.ExtendedFunc-19.html",
    "title": "Delegate BindingInvoker.ExtendedFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, TResult> | Unofficial Reqnroll Documentation",
    "summary": "Delegate BindingInvoker.ExtendedFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, TResult> Namespace Reqnroll.Bindings Assembly Reqnroll.dll public delegate TResult BindingInvoker.ExtendedFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, TResult>(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11, T12 arg12, T13 arg13, T14 arg14, T15 arg15, T16 arg16, T17 arg17, T18 arg18) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 arg10 T10 arg11 T11 arg12 T12 arg13 T13 arg14 T14 arg15 T15 arg16 T16 arg17 T17 arg18 T18 Returns TResult Type Parameters T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 T14 T15 T16 T17 T18 TResult"
  },
  "api/Reqnroll.Bindings.BindingInvoker.ExtendedFunc-20.html": {
    "href": "api/Reqnroll.Bindings.BindingInvoker.ExtendedFunc-20.html",
    "title": "Delegate BindingInvoker.ExtendedFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, TResult> | Unofficial Reqnroll Documentation",
    "summary": "Delegate BindingInvoker.ExtendedFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, TResult> Namespace Reqnroll.Bindings Assembly Reqnroll.dll public delegate TResult BindingInvoker.ExtendedFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, TResult>(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11, T12 arg12, T13 arg13, T14 arg14, T15 arg15, T16 arg16, T17 arg17, T18 arg18, T19 arg19) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 arg10 T10 arg11 T11 arg12 T12 arg13 T13 arg14 T14 arg15 T15 arg16 T16 arg17 T17 arg18 T18 arg19 T19 Returns TResult Type Parameters T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 T14 T15 T16 T17 T18 T19 TResult"
  },
  "api/Reqnroll.Bindings.BindingInvoker.ExtendedFunc-21.html": {
    "href": "api/Reqnroll.Bindings.BindingInvoker.ExtendedFunc-21.html",
    "title": "Delegate BindingInvoker.ExtendedFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, TResult> | Unofficial Reqnroll Documentation",
    "summary": "Delegate BindingInvoker.ExtendedFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, TResult> Namespace Reqnroll.Bindings Assembly Reqnroll.dll public delegate TResult BindingInvoker.ExtendedFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, TResult>(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11, T12 arg12, T13 arg13, T14 arg14, T15 arg15, T16 arg16, T17 arg17, T18 arg18, T19 arg19, T20 arg20) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 arg9 T9 arg10 T10 arg11 T11 arg12 T12 arg13 T13 arg14 T14 arg15 T15 arg16 T16 arg17 T17 arg18 T18 arg19 T19 arg20 T20 Returns TResult Type Parameters T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 T14 T15 T16 T17 T18 T19 T20 TResult"
  },
  "api/Reqnroll.Bindings.BindingInvoker.ExtendedFunc-6.html": {
    "href": "api/Reqnroll.Bindings.BindingInvoker.ExtendedFunc-6.html",
    "title": "Delegate BindingInvoker.ExtendedFunc<T1, T2, T3, T4, T5, TResult> | Unofficial Reqnroll Documentation",
    "summary": "Delegate BindingInvoker.ExtendedFunc<T1, T2, T3, T4, T5, TResult> Namespace Reqnroll.Bindings Assembly Reqnroll.dll public delegate TResult BindingInvoker.ExtendedFunc<T1, T2, T3, T4, T5, TResult>(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 Returns TResult Type Parameters T1 T2 T3 T4 T5 TResult"
  },
  "api/Reqnroll.Bindings.BindingInvoker.ExtendedFunc-7.html": {
    "href": "api/Reqnroll.Bindings.BindingInvoker.ExtendedFunc-7.html",
    "title": "Delegate BindingInvoker.ExtendedFunc<T1, T2, T3, T4, T5, T6, TResult> | Unofficial Reqnroll Documentation",
    "summary": "Delegate BindingInvoker.ExtendedFunc<T1, T2, T3, T4, T5, T6, TResult> Namespace Reqnroll.Bindings Assembly Reqnroll.dll public delegate TResult BindingInvoker.ExtendedFunc<T1, T2, T3, T4, T5, T6, TResult>(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 Returns TResult Type Parameters T1 T2 T3 T4 T5 T6 TResult"
  },
  "api/Reqnroll.Bindings.BindingInvoker.ExtendedFunc-8.html": {
    "href": "api/Reqnroll.Bindings.BindingInvoker.ExtendedFunc-8.html",
    "title": "Delegate BindingInvoker.ExtendedFunc<T1, T2, T3, T4, T5, T6, T7, TResult> | Unofficial Reqnroll Documentation",
    "summary": "Delegate BindingInvoker.ExtendedFunc<T1, T2, T3, T4, T5, T6, T7, TResult> Namespace Reqnroll.Bindings Assembly Reqnroll.dll public delegate TResult BindingInvoker.ExtendedFunc<T1, T2, T3, T4, T5, T6, T7, TResult>(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 Returns TResult Type Parameters T1 T2 T3 T4 T5 T6 T7 TResult"
  },
  "api/Reqnroll.Bindings.BindingInvoker.ExtendedFunc-9.html": {
    "href": "api/Reqnroll.Bindings.BindingInvoker.ExtendedFunc-9.html",
    "title": "Delegate BindingInvoker.ExtendedFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult> | Unofficial Reqnroll Documentation",
    "summary": "Delegate BindingInvoker.ExtendedFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult> Namespace Reqnroll.Bindings Assembly Reqnroll.dll public delegate TResult BindingInvoker.ExtendedFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8) Parameters arg1 T1 arg2 T2 arg3 T3 arg4 T4 arg5 T5 arg6 T6 arg7 T7 arg8 T8 Returns TResult Type Parameters T1 T2 T3 T4 T5 T6 T7 T8 TResult"
  },
  "api/Reqnroll.Bindings.BindingInvoker.html": {
    "href": "api/Reqnroll.Bindings.BindingInvoker.html",
    "title": "Class BindingInvoker | Unofficial Reqnroll Documentation",
    "summary": "Class BindingInvoker Namespace Reqnroll.Bindings Assembly Reqnroll.dll public class BindingInvoker : IBindingInvoker, IAsyncBindingInvoker Inheritance object BindingInvoker Implements IBindingInvoker IAsyncBindingInvoker Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors BindingInvoker(ReqnrollConfiguration, IErrorProvider, IBindingDelegateInvoker) public BindingInvoker(ReqnrollConfiguration reqnrollConfiguration, IErrorProvider errorProvider, IBindingDelegateInvoker bindingDelegateInvoker) Parameters reqnrollConfiguration ReqnrollConfiguration errorProvider IErrorProvider bindingDelegateInvoker IBindingDelegateInvoker Fields bindingDelegateInvoker protected readonly IBindingDelegateInvoker bindingDelegateInvoker Field Value IBindingDelegateInvoker errorProvider protected readonly IErrorProvider errorProvider Field Value IErrorProvider reqnrollConfiguration protected readonly ReqnrollConfiguration reqnrollConfiguration Field Value ReqnrollConfiguration Methods CreateCultureInfoScope(IContextManager) protected virtual CultureInfoScope CreateCultureInfoScope(IContextManager contextManager) Parameters contextManager IContextManager Returns CultureInfoScope CreateMethodDelegate(MethodInfo) protected virtual Delegate CreateMethodDelegate(MethodInfo method) Parameters method MethodInfo Returns Delegate EnsureReflectionInfo(IBinding, out MethodInfo, out Delegate) protected void EnsureReflectionInfo(IBinding binding, out MethodInfo methodInfo, out Delegate bindingAction) Parameters binding IBinding methodInfo MethodInfo bindingAction Delegate GetActionType(Type[]) protected Type GetActionType(Type[] typeArgs) Parameters typeArgs Type[] Returns Type GetBindingMethodCallExpression(Expression, MethodInfo, Expression[]) protected virtual Expression GetBindingMethodCallExpression(Expression instance, MethodInfo method, Expression[] argumentsExpressions) Parameters instance Expression method MethodInfo argumentsExpressions Expression[] Returns Expression GetDelegateType(Type[], Type) protected Type GetDelegateType(Type[] typeArgs, Type resultType) Parameters typeArgs Type[] resultType Type Returns Type GetFuncType(Type[], Type) protected Type GetFuncType(Type[] typeArgs, Type resultType) Parameters typeArgs Type[] resultType Type Returns Type InvokeBinding(IBinding, IContextManager, object[], ITestTracer, out TimeSpan) [Obsolete(\"Use async version of the method instead\")] public virtual object InvokeBinding(IBinding binding, IContextManager contextManager, object[] arguments, ITestTracer testTracer, out TimeSpan duration) Parameters binding IBinding contextManager IContextManager arguments object[] testTracer ITestTracer duration TimeSpan Returns object InvokeBindingAsync(IBinding, IContextManager, object[], ITestTracer, DurationHolder) public virtual Task<object> InvokeBindingAsync(IBinding binding, IContextManager contextManager, object[] arguments, ITestTracer testTracer, DurationHolder durationHolder) Parameters binding IBinding contextManager IContextManager arguments object[] testTracer ITestTracer durationHolder DurationHolder Returns Task<object>"
  },
  "api/Reqnroll.Bindings.BindingMatch.html": {
    "href": "api/Reqnroll.Bindings.BindingMatch.html",
    "title": "Class BindingMatch | Unofficial Reqnroll Documentation",
    "summary": "Class BindingMatch Namespace Reqnroll.Bindings Assembly Reqnroll.dll public class BindingMatch Inheritance object BindingMatch Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors BindingMatch(IStepDefinitionBinding, int, object[], StepContext) public BindingMatch(IStepDefinitionBinding stepBinding, int scopeMatches, object[] arguments, StepContext stepContext) Parameters stepBinding IStepDefinitionBinding scopeMatches int arguments object[] stepContext StepContext Fields NonMatching public static readonly BindingMatch NonMatching Field Value BindingMatch Properties Arguments public object[] Arguments { get; } Property Value object[] BindingObsoletion public BindingObsoletion BindingObsoletion { get; } Property Value BindingObsoletion IsObsolete public bool IsObsolete { get; } Property Value bool IsScoped public bool IsScoped { get; } Property Value bool ScopeMatches public int ScopeMatches { get; } Property Value int StepBinding public IStepDefinitionBinding StepBinding { get; } Property Value IStepDefinitionBinding StepContext public StepContext StepContext { get; } Property Value StepContext Success public bool Success { get; } Property Value bool"
  },
  "api/Reqnroll.Bindings.BindingObsoletion.html": {
    "href": "api/Reqnroll.Bindings.BindingObsoletion.html",
    "title": "Class BindingObsoletion | Unofficial Reqnroll Documentation",
    "summary": "Class BindingObsoletion Namespace Reqnroll.Bindings Assembly Reqnroll.dll public class BindingObsoletion Inheritance object BindingObsoletion Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors BindingObsoletion(IStepDefinitionBinding) public BindingObsoletion(IStepDefinitionBinding stepBinding) Parameters stepBinding IStepDefinitionBinding Properties IsObsolete public bool IsObsolete { get; } Property Value bool Message public string Message { get; } Property Value string"
  },
  "api/Reqnroll.Bindings.BindingRegistry.html": {
    "href": "api/Reqnroll.Bindings.BindingRegistry.html",
    "title": "Class BindingRegistry | Unofficial Reqnroll Documentation",
    "summary": "Class BindingRegistry Namespace Reqnroll.Bindings Assembly Reqnroll.dll public class BindingRegistry : IBindingRegistry Inheritance object BindingRegistry Implements IBindingRegistry Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties IsValid public bool IsValid { get; } Property Value bool Ready public bool Ready { get; set; } Property Value bool Methods GetConsideredStepDefinitions(StepDefinitionType, string) public IEnumerable<IStepDefinitionBinding> GetConsideredStepDefinitions(StepDefinitionType stepDefinitionType, string stepText) Parameters stepDefinitionType StepDefinitionType stepText string Returns IEnumerable<IStepDefinitionBinding> GetErrorMessages() public IEnumerable<BindingError> GetErrorMessages() Returns IEnumerable<BindingError> GetHooks() public virtual IEnumerable<IHookBinding> GetHooks() Returns IEnumerable<IHookBinding> GetHooks(HookType) public virtual IEnumerable<IHookBinding> GetHooks(HookType bindingEvent) Parameters bindingEvent HookType Returns IEnumerable<IHookBinding> GetStepDefinitions() public IEnumerable<IStepDefinitionBinding> GetStepDefinitions() Returns IEnumerable<IStepDefinitionBinding> GetStepTransformations() public virtual IEnumerable<IStepArgumentTransformationBinding> GetStepTransformations() Returns IEnumerable<IStepArgumentTransformationBinding> RegisterGenericBindingError(BindingError) public void RegisterGenericBindingError(BindingError error) Parameters error BindingError RegisterHookBinding(IHookBinding) public virtual void RegisterHookBinding(IHookBinding hookBinding) Parameters hookBinding IHookBinding RegisterStepArgumentTransformationBinding(IStepArgumentTransformationBinding) public virtual void RegisterStepArgumentTransformationBinding(IStepArgumentTransformationBinding stepArgumentTransformationBinding) Parameters stepArgumentTransformationBinding IStepArgumentTransformationBinding RegisterStepDefinitionBinding(IStepDefinitionBinding) public virtual void RegisterStepDefinitionBinding(IStepDefinitionBinding stepDefinitionBinding) Parameters stepDefinitionBinding IStepDefinitionBinding"
  },
  "api/Reqnroll.Bindings.BindingScope.html": {
    "href": "api/Reqnroll.Bindings.BindingScope.html",
    "title": "Class BindingScope | Unofficial Reqnroll Documentation",
    "summary": "Class BindingScope Namespace Reqnroll.Bindings Assembly Reqnroll.dll public class BindingScope Inheritance object BindingScope Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors BindingScope(string, string, string) public BindingScope(string tag, string featureTitle, string scenarioTitle) Parameters tag string featureTitle string scenarioTitle string Properties FeatureTitle public string FeatureTitle { get; } Property Value string ScenarioTitle public string ScenarioTitle { get; } Property Value string Tag public string Tag { get; } Property Value string Methods Equals(BindingScope) protected bool Equals(BindingScope other) Parameters other BindingScope Returns bool Equals(object) public override bool Equals(object obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int Match(StepContext, out int) public bool Match(StepContext stepContext, out int scopeMatches) Parameters stepContext StepContext scopeMatches int Returns bool"
  },
  "api/Reqnroll.Bindings.CucumberExpressions.BuiltInCucumberExpressionParameterTypeTransformation.html": {
    "href": "api/Reqnroll.Bindings.CucumberExpressions.BuiltInCucumberExpressionParameterTypeTransformation.html",
    "title": "Class BuiltInCucumberExpressionParameterTypeTransformation | Unofficial Reqnroll Documentation",
    "summary": "Class BuiltInCucumberExpressionParameterTypeTransformation Namespace Reqnroll.Bindings.CucumberExpressions Assembly Reqnroll.dll public class BuiltInCucumberExpressionParameterTypeTransformation : ICucumberExpressionParameterTypeTransformation Inheritance object BuiltInCucumberExpressionParameterTypeTransformation Implements ICucumberExpressionParameterTypeTransformation Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors BuiltInCucumberExpressionParameterTypeTransformation(string, IBindingType, string, bool, int) public BuiltInCucumberExpressionParameterTypeTransformation(string regex, IBindingType targetType, string name = null, bool useForSnippets = true, int weight = 0) Parameters regex string targetType IBindingType name string useForSnippets bool weight int Properties Name public string Name { get; } Property Value string Regex public string Regex { get; } Property Value string TargetType public IBindingType TargetType { get; } Property Value IBindingType UseForSnippets public bool UseForSnippets { get; } Property Value bool Weight public int Weight { get; } Property Value int"
  },
  "api/Reqnroll.Bindings.CucumberExpressions.CucumberExpressionDetector.html": {
    "href": "api/Reqnroll.Bindings.CucumberExpressions.CucumberExpressionDetector.html",
    "title": "Class CucumberExpressionDetector | Unofficial Reqnroll Documentation",
    "summary": "Class CucumberExpressionDetector Namespace Reqnroll.Bindings.CucumberExpressions Assembly Reqnroll.dll public class CucumberExpressionDetector : ICucumberExpressionDetector Inheritance object CucumberExpressionDetector Implements ICucumberExpressionDetector Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods IsCucumberExpression(string) public virtual bool IsCucumberExpression(string cucumberExpressionCandidate) Parameters cucumberExpressionCandidate string Returns bool"
  },
  "api/Reqnroll.Bindings.CucumberExpressions.CucumberExpressionParameterType.html": {
    "href": "api/Reqnroll.Bindings.CucumberExpressions.CucumberExpressionParameterType.html",
    "title": "Class CucumberExpressionParameterType | Unofficial Reqnroll Documentation",
    "summary": "Class CucumberExpressionParameterType Namespace Reqnroll.Bindings.CucumberExpressions Assembly Reqnroll.dll public class CucumberExpressionParameterType : IReqnrollCucumberExpressionParameterType, IParameterType Inheritance object CucumberExpressionParameterType Implements IReqnrollCucumberExpressionParameterType IParameterType Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CucumberExpressionParameterType(string, IBindingType, IEnumerable<ICucumberExpressionParameterTypeTransformation>) public CucumberExpressionParameterType(string name, IBindingType targetType, IEnumerable<ICucumberExpressionParameterTypeTransformation> transformations) Parameters name string targetType IBindingType transformations IEnumerable<ICucumberExpressionParameterTypeTransformation> Properties Name public string Name { get; } Property Value string ParameterType public Type ParameterType { get; } Property Value Type RegexStrings public string[] RegexStrings { get; } Property Value string[] TargetType public IBindingType TargetType { get; } Property Value IBindingType Transformations public ICucumberExpressionParameterTypeTransformation[] Transformations { get; } Property Value ICucumberExpressionParameterTypeTransformation[] UseForSnippets public bool UseForSnippets { get; } Property Value bool Weight public int Weight { get; } Property Value int"
  },
  "api/Reqnroll.Bindings.CucumberExpressions.CucumberExpressionParameterTypeRegistry.html": {
    "href": "api/Reqnroll.Bindings.CucumberExpressions.CucumberExpressionParameterTypeRegistry.html",
    "title": "Class CucumberExpressionParameterTypeRegistry | Unofficial Reqnroll Documentation",
    "summary": "Class CucumberExpressionParameterTypeRegistry Namespace Reqnroll.Bindings.CucumberExpressions Assembly Reqnroll.dll public class CucumberExpressionParameterTypeRegistry : IParameterTypeRegistry Inheritance object CucumberExpressionParameterTypeRegistry Implements IParameterTypeRegistry Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CucumberExpressionParameterTypeRegistry(IBindingRegistry) public CucumberExpressionParameterTypeRegistry(IBindingRegistry bindingRegistry) Parameters bindingRegistry IBindingRegistry Methods ConvertQuotedString(string) public static string ConvertQuotedString(string message) Parameters message string Returns string GetParameterTypes() public IEnumerable<IParameterType> GetParameterTypes() Returns IEnumerable<IParameterType> LookupByTypeName(string) public IParameterType LookupByTypeName(string name) Parameters name string Returns IParameterType OnBindingMethodProcessed(IBindingMethod) public void OnBindingMethodProcessed(IBindingMethod bindingMethod) Parameters bindingMethod IBindingMethod"
  },
  "api/Reqnroll.Bindings.CucumberExpressions.CucumberExpressionStepDefinitionBindingBuilder.html": {
    "href": "api/Reqnroll.Bindings.CucumberExpressions.CucumberExpressionStepDefinitionBindingBuilder.html",
    "title": "Class CucumberExpressionStepDefinitionBindingBuilder | Unofficial Reqnroll Documentation",
    "summary": "Class CucumberExpressionStepDefinitionBindingBuilder Namespace Reqnroll.Bindings.CucumberExpressions Assembly Reqnroll.dll public class CucumberExpressionStepDefinitionBindingBuilder : StepDefinitionBindingBuilderBase, IStepDefinitionBindingBuilder Inheritance object StepDefinitionBindingBuilderBase CucumberExpressionStepDefinitionBindingBuilder Implements IStepDefinitionBindingBuilder Inherited Members StepDefinitionBindingBuilderBase._stepDefinitionType StepDefinitionBindingBuilderBase._bindingMethod StepDefinitionBindingBuilderBase._bindingScope StepDefinitionBindingBuilderBase._sourceExpression StepDefinitionBindingBuilderBase.Build() StepDefinitionBindingBuilderBase.BuildSingle() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CucumberExpressionStepDefinitionBindingBuilder(CucumberExpressionParameterTypeRegistry, StepDefinitionType, IBindingMethod, BindingScope, string) public CucumberExpressionStepDefinitionBindingBuilder(CucumberExpressionParameterTypeRegistry _cucumberExpressionParameterTypeRegistry, StepDefinitionType stepDefinitionType, IBindingMethod bindingMethod, BindingScope bindingScope, string sourceExpression) Parameters _cucumberExpressionParameterTypeRegistry CucumberExpressionParameterTypeRegistry stepDefinitionType StepDefinitionType bindingMethod IBindingMethod bindingScope BindingScope sourceExpression string Methods CreateExpression(out string) protected override IExpression CreateExpression(out string expressionType) Parameters expressionType string Returns IExpression"
  },
  "api/Reqnroll.Bindings.CucumberExpressions.CucumberExpressionStepDefinitionBindingBuilderFactory.html": {
    "href": "api/Reqnroll.Bindings.CucumberExpressions.CucumberExpressionStepDefinitionBindingBuilderFactory.html",
    "title": "Class CucumberExpressionStepDefinitionBindingBuilderFactory | Unofficial Reqnroll Documentation",
    "summary": "Class CucumberExpressionStepDefinitionBindingBuilderFactory Namespace Reqnroll.Bindings.CucumberExpressions Assembly Reqnroll.dll public class CucumberExpressionStepDefinitionBindingBuilderFactory : ICucumberExpressionStepDefinitionBindingBuilderFactory Inheritance object CucumberExpressionStepDefinitionBindingBuilderFactory Implements ICucumberExpressionStepDefinitionBindingBuilderFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CucumberExpressionStepDefinitionBindingBuilderFactory(CucumberExpressionParameterTypeRegistry) public CucumberExpressionStepDefinitionBindingBuilderFactory(CucumberExpressionParameterTypeRegistry cucumberExpressionParameterTypeRegistry) Parameters cucumberExpressionParameterTypeRegistry CucumberExpressionParameterTypeRegistry Methods Create(StepDefinitionType, IBindingMethod, BindingScope, string) public CucumberExpressionStepDefinitionBindingBuilder Create(StepDefinitionType stepDefinitionType, IBindingMethod bindingMethod, BindingScope bindingScope, string sourceExpression) Parameters stepDefinitionType StepDefinitionType bindingMethod IBindingMethod bindingScope BindingScope sourceExpression string Returns CucumberExpressionStepDefinitionBindingBuilder"
  },
  "api/Reqnroll.Bindings.CucumberExpressions.ICucumberExpressionDetector.html": {
    "href": "api/Reqnroll.Bindings.CucumberExpressions.ICucumberExpressionDetector.html",
    "title": "Interface ICucumberExpressionDetector | Unofficial Reqnroll Documentation",
    "summary": "Interface ICucumberExpressionDetector Namespace Reqnroll.Bindings.CucumberExpressions Assembly Reqnroll.dll public interface ICucumberExpressionDetector Methods IsCucumberExpression(string) bool IsCucumberExpression(string cucumberExpressionCandidate) Parameters cucumberExpressionCandidate string Returns bool"
  },
  "api/Reqnroll.Bindings.CucumberExpressions.ICucumberExpressionParameterTypeTransformation.html": {
    "href": "api/Reqnroll.Bindings.CucumberExpressions.ICucumberExpressionParameterTypeTransformation.html",
    "title": "Interface ICucumberExpressionParameterTypeTransformation | Unofficial Reqnroll Documentation",
    "summary": "Interface ICucumberExpressionParameterTypeTransformation Namespace Reqnroll.Bindings.CucumberExpressions Assembly Reqnroll.dll public interface ICucumberExpressionParameterTypeTransformation Properties Name string Name { get; } Property Value string Regex string Regex { get; } Property Value string TargetType IBindingType TargetType { get; } Property Value IBindingType UseForSnippets bool UseForSnippets { get; } Property Value bool Weight int Weight { get; } Property Value int"
  },
  "api/Reqnroll.Bindings.CucumberExpressions.ICucumberExpressionStepDefinitionBindingBuilderFactory.html": {
    "href": "api/Reqnroll.Bindings.CucumberExpressions.ICucumberExpressionStepDefinitionBindingBuilderFactory.html",
    "title": "Interface ICucumberExpressionStepDefinitionBindingBuilderFactory | Unofficial Reqnroll Documentation",
    "summary": "Interface ICucumberExpressionStepDefinitionBindingBuilderFactory Namespace Reqnroll.Bindings.CucumberExpressions Assembly Reqnroll.dll public interface ICucumberExpressionStepDefinitionBindingBuilderFactory Methods Create(StepDefinitionType, IBindingMethod, BindingScope, string) CucumberExpressionStepDefinitionBindingBuilder Create(StepDefinitionType stepDefinitionType, IBindingMethod bindingMethod, BindingScope bindingScope, string sourceExpression) Parameters stepDefinitionType StepDefinitionType bindingMethod IBindingMethod bindingScope BindingScope sourceExpression string Returns CucumberExpressionStepDefinitionBindingBuilder"
  },
  "api/Reqnroll.Bindings.CucumberExpressions.IReqnrollCucumberExpressionParameterType.html": {
    "href": "api/Reqnroll.Bindings.CucumberExpressions.IReqnrollCucumberExpressionParameterType.html",
    "title": "Interface IReqnrollCucumberExpressionParameterType | Unofficial Reqnroll Documentation",
    "summary": "Interface IReqnrollCucumberExpressionParameterType Namespace Reqnroll.Bindings.CucumberExpressions Assembly Reqnroll.dll public interface IReqnrollCucumberExpressionParameterType : IParameterType Inherited Members IParameterType.RegexStrings IParameterType.Name IParameterType.ParameterType IParameterType.Weight IParameterType.UseForSnippets Properties TargetType IBindingType TargetType { get; } Property Value IBindingType Transformations ICucumberExpressionParameterTypeTransformation[] Transformations { get; } Property Value ICucumberExpressionParameterTypeTransformation[]"
  },
  "api/Reqnroll.Bindings.CucumberExpressions.ReqnrollCucumberExpression.html": {
    "href": "api/Reqnroll.Bindings.CucumberExpressions.ReqnrollCucumberExpression.html",
    "title": "Class ReqnrollCucumberExpression | Unofficial Reqnroll Documentation",
    "summary": "Class ReqnrollCucumberExpression Namespace Reqnroll.Bindings.CucumberExpressions Assembly Reqnroll.dll public class ReqnrollCucumberExpression : CucumberExpression, IExpression Inheritance object CucumberExpression ReqnrollCucumberExpression Implements IExpression Inherited Members CucumberExpression.RewriteParameter(Node) CucumberExpression.GetGroupName(Node, IParameterType) CucumberExpression.GetParameterTypeRegexps(string, IParameterType, out bool) CucumberExpression.Source CucumberExpression.Regex CucumberExpression.ParameterTypes object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ReqnrollCucumberExpression(string, IParameterTypeRegistry) public ReqnrollCucumberExpression(string expression, IParameterTypeRegistry parameterTypeRegistry) Parameters expression string parameterTypeRegistry IParameterTypeRegistry Methods HandleStringType(string, IParameterType, out string[], out bool) protected override bool HandleStringType(string name, IParameterType parameterType, out string[] regexps, out bool shouldWrapWithCaptureGroup) Parameters name string parameterType IParameterType regexps string[] shouldWrapWithCaptureGroup bool Returns bool"
  },
  "api/Reqnroll.Bindings.CucumberExpressions.UserDefinedCucumberExpressionParameterTypeTransformation.html": {
    "href": "api/Reqnroll.Bindings.CucumberExpressions.UserDefinedCucumberExpressionParameterTypeTransformation.html",
    "title": "Class UserDefinedCucumberExpressionParameterTypeTransformation | Unofficial Reqnroll Documentation",
    "summary": "Class UserDefinedCucumberExpressionParameterTypeTransformation Namespace Reqnroll.Bindings.CucumberExpressions Assembly Reqnroll.dll public class UserDefinedCucumberExpressionParameterTypeTransformation : ICucumberExpressionParameterTypeTransformation Inheritance object UserDefinedCucumberExpressionParameterTypeTransformation Implements ICucumberExpressionParameterTypeTransformation Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UserDefinedCucumberExpressionParameterTypeTransformation(IStepArgumentTransformationBinding, string) public UserDefinedCucumberExpressionParameterTypeTransformation(IStepArgumentTransformationBinding stepArgumentTransformationBinding, string customName = null) Parameters stepArgumentTransformationBinding IStepArgumentTransformationBinding customName string Properties Name public string Name { get; } Property Value string Regex public string Regex { get; } Property Value string TargetType public IBindingType TargetType { get; } Property Value IBindingType UseForSnippets public bool UseForSnippets { get; } Property Value bool Weight public int Weight { get; } Property Value int"
  },
  "api/Reqnroll.Bindings.CucumberExpressions.html": {
    "href": "api/Reqnroll.Bindings.CucumberExpressions.html",
    "title": "Namespace Reqnroll.Bindings.CucumberExpressions | Unofficial Reqnroll Documentation",
    "summary": "Namespace Reqnroll.Bindings.CucumberExpressions Classes BuiltInCucumberExpressionParameterTypeTransformation CucumberExpressionDetector CucumberExpressionParameterType CucumberExpressionParameterTypeRegistry CucumberExpressionStepDefinitionBindingBuilder CucumberExpressionStepDefinitionBindingBuilderFactory ReqnrollCucumberExpression UserDefinedCucumberExpressionParameterTypeTransformation Interfaces ICucumberExpressionDetector ICucumberExpressionParameterTypeTransformation ICucumberExpressionStepDefinitionBindingBuilderFactory IReqnrollCucumberExpressionParameterType"
  },
  "api/Reqnroll.Bindings.Discovery.BindingSourceAttribute.html": {
    "href": "api/Reqnroll.Bindings.Discovery.BindingSourceAttribute.html",
    "title": "Class BindingSourceAttribute | Unofficial Reqnroll Documentation",
    "summary": "Class BindingSourceAttribute Namespace Reqnroll.Bindings.Discovery Assembly Reqnroll.dll public class BindingSourceAttribute Inheritance object BindingSourceAttribute Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AttributeType public IBindingType AttributeType { get; set; } Property Value IBindingType AttributeValues public IBindingSourceAttributeValueProvider[] AttributeValues { get; set; } Property Value IBindingSourceAttributeValueProvider[] NamedAttributeValues public IDictionary<string, IBindingSourceAttributeValueProvider> NamedAttributeValues { get; set; } Property Value IDictionary<string, IBindingSourceAttributeValueProvider> Methods TryGetAttributeValue<TValue>(int, TValue) public TValue TryGetAttributeValue<TValue>(int index, TValue defaultValue = default) Parameters index int defaultValue TValue Returns TValue Type Parameters TValue TryGetAttributeValue<TValue>(string, TValue) public TValue TryGetAttributeValue<TValue>(string name, TValue defaultValue = default) Parameters name string defaultValue TValue Returns TValue Type Parameters TValue TryGetParamsAttributeValue<TValue>(int, TValue[]) public TValue[] TryGetParamsAttributeValue<TValue>(int index, TValue[] defaultValue = null) Parameters index int defaultValue TValue[] Returns TValue[] Type Parameters TValue"
  },
  "api/Reqnroll.Bindings.Discovery.BindingSourceAttributeValueProvider.html": {
    "href": "api/Reqnroll.Bindings.Discovery.BindingSourceAttributeValueProvider.html",
    "title": "Class BindingSourceAttributeValueProvider | Unofficial Reqnroll Documentation",
    "summary": "Class BindingSourceAttributeValueProvider Namespace Reqnroll.Bindings.Discovery Assembly Reqnroll.dll public class BindingSourceAttributeValueProvider : IBindingSourceAttributeValueProvider Inheritance object BindingSourceAttributeValueProvider Implements IBindingSourceAttributeValueProvider Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors BindingSourceAttributeValueProvider(object) public BindingSourceAttributeValueProvider(object value) Parameters value object Methods GetValue<TValue>() public TValue GetValue<TValue>() Returns TValue Type Parameters TValue"
  },
  "api/Reqnroll.Bindings.Discovery.BindingSourceMethod.html": {
    "href": "api/Reqnroll.Bindings.Discovery.BindingSourceMethod.html",
    "title": "Class BindingSourceMethod | Unofficial Reqnroll Documentation",
    "summary": "Class BindingSourceMethod Namespace Reqnroll.Bindings.Discovery Assembly Reqnroll.dll public class BindingSourceMethod Inheritance object BindingSourceMethod Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties Attributes public BindingSourceAttribute[] Attributes { get; set; } Property Value BindingSourceAttribute[] BindingMethod public IBindingMethod BindingMethod { get; set; } Property Value IBindingMethod IsPublic public bool IsPublic { get; set; } Property Value bool IsStatic public bool IsStatic { get; set; } Property Value bool Methods ToString() public override string ToString() Returns string"
  },
  "api/Reqnroll.Bindings.Discovery.BindingSourceProcessor.BindingValidationResult.html": {
    "href": "api/Reqnroll.Bindings.Discovery.BindingSourceProcessor.BindingValidationResult.html",
    "title": "Struct BindingSourceProcessor.BindingValidationResult | Unofficial Reqnroll Documentation",
    "summary": "Struct BindingSourceProcessor.BindingValidationResult Namespace Reqnroll.Bindings.Discovery Assembly Reqnroll.dll protected readonly struct BindingSourceProcessor.BindingValidationResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields Valid public static BindingSourceProcessor.BindingValidationResult Valid Field Value BindingSourceProcessor.BindingValidationResult Properties CombinedErrorMessages public string CombinedErrorMessages { get; } Property Value string ErrorMessages public List<string> ErrorMessages { get; } Property Value List<string> IsValid public bool IsValid { get; } Property Value bool Methods Error(string) public static BindingSourceProcessor.BindingValidationResult Error(string errorMessage) Parameters errorMessage string Returns BindingSourceProcessor.BindingValidationResult Operators operator +(BindingValidationResult, BindingValidationResult) public static BindingSourceProcessor.BindingValidationResult operator +(BindingSourceProcessor.BindingValidationResult r1, BindingSourceProcessor.BindingValidationResult r2) Parameters r1 BindingSourceProcessor.BindingValidationResult r2 BindingSourceProcessor.BindingValidationResult Returns BindingSourceProcessor.BindingValidationResult"
  },
  "api/Reqnroll.Bindings.Discovery.BindingSourceProcessor.html": {
    "href": "api/Reqnroll.Bindings.Discovery.BindingSourceProcessor.html",
    "title": "Class BindingSourceProcessor | Unofficial Reqnroll Documentation",
    "summary": "Class BindingSourceProcessor Namespace Reqnroll.Bindings.Discovery Assembly Reqnroll.dll public abstract class BindingSourceProcessor : IBindingSourceProcessor Inheritance object BindingSourceProcessor Implements IBindingSourceProcessor Derived RuntimeBindingSourceProcessor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors BindingSourceProcessor(IBindingFactory) protected BindingSourceProcessor(IBindingFactory bindingFactory) Parameters bindingFactory IBindingFactory Methods BuildingCompleted() public virtual void BuildingCompleted() CanProcessMethodAttribute(string) public bool CanProcessMethodAttribute(string attributeTypeName) Parameters attributeTypeName string Returns bool CanProcessTypeAttribute(string) public bool CanProcessTypeAttribute(string attributeTypeName) Parameters attributeTypeName string Returns bool IsScenarioSpecificHook(HookType) protected bool IsScenarioSpecificHook(HookType hookType) Parameters hookType HookType Returns bool OnValidationError(BindingValidationResult, bool) protected virtual void OnValidationError(BindingSourceProcessor.BindingValidationResult validationResult, bool genericBindingError) Parameters validationResult BindingSourceProcessor.BindingValidationResult genericBindingError bool PreFilterType(IEnumerable<string>) public bool PreFilterType(IEnumerable<string> attributeTypeNames) Parameters attributeTypeNames IEnumerable<string> Returns bool ProcessHookBinding(IHookBinding) protected abstract void ProcessHookBinding(IHookBinding hookBinding) Parameters hookBinding IHookBinding ProcessHooks(BindingSourceMethod, BindingScope[]) protected virtual void ProcessHooks(BindingSourceMethod bindingSourceMethod, BindingScope[] methodScopes) Parameters bindingSourceMethod BindingSourceMethod methodScopes BindingScope[] ProcessMethod(BindingSourceMethod) public void ProcessMethod(BindingSourceMethod bindingSourceMethod) Parameters bindingSourceMethod BindingSourceMethod ProcessStepArgumentTransformationBinding(IStepArgumentTransformationBinding) protected abstract void ProcessStepArgumentTransformationBinding(IStepArgumentTransformationBinding stepArgumentTransformationBinding) Parameters stepArgumentTransformationBinding IStepArgumentTransformationBinding ProcessStepArgumentTransformations(BindingSourceMethod, BindingScope[]) protected virtual void ProcessStepArgumentTransformations(BindingSourceMethod bindingSourceMethod, BindingScope[] methodScopes) Parameters bindingSourceMethod BindingSourceMethod methodScopes BindingScope[] ProcessStepDefinitionBinding(IStepDefinitionBinding) protected abstract void ProcessStepDefinitionBinding(IStepDefinitionBinding stepDefinitionBinding) Parameters stepDefinitionBinding IStepDefinitionBinding ProcessStepDefinitions(BindingSourceMethod, BindingScope[]) protected virtual void ProcessStepDefinitions(BindingSourceMethod bindingSourceMethod, BindingScope[] methodScopes) Parameters bindingSourceMethod BindingSourceMethod methodScopes BindingScope[] ProcessType(BindingSourceType) public bool ProcessType(BindingSourceType bindingSourceType) Parameters bindingSourceType BindingSourceType Returns bool ProcessTypeDone() public void ProcessTypeDone() ValidateHook(BindingSourceMethod, BindingSourceAttribute, HookType) protected virtual BindingSourceProcessor.BindingValidationResult ValidateHook(BindingSourceMethod bindingSourceMethod, BindingSourceAttribute hookAttribute, HookType hookType) Parameters bindingSourceMethod BindingSourceMethod hookAttribute BindingSourceAttribute hookType HookType Returns BindingSourceProcessor.BindingValidationResult ValidateMethod(BindingSourceMethod) protected virtual BindingSourceProcessor.BindingValidationResult ValidateMethod(BindingSourceMethod bindingSourceMethod) Parameters bindingSourceMethod BindingSourceMethod Returns BindingSourceProcessor.BindingValidationResult ValidateStepArgumentTransformation(BindingSourceMethod, BindingSourceAttribute) protected virtual BindingSourceProcessor.BindingValidationResult ValidateStepArgumentTransformation(BindingSourceMethod bindingSourceMethod, BindingSourceAttribute stepArgumentTransformationAttribute) Parameters bindingSourceMethod BindingSourceMethod stepArgumentTransformationAttribute BindingSourceAttribute Returns BindingSourceProcessor.BindingValidationResult ValidateStepDefinition(BindingSourceMethod, BindingSourceAttribute) protected virtual BindingSourceProcessor.BindingValidationResult ValidateStepDefinition(BindingSourceMethod bindingSourceMethod, BindingSourceAttribute stepDefinitionAttribute) Parameters bindingSourceMethod BindingSourceMethod stepDefinitionAttribute BindingSourceAttribute Returns BindingSourceProcessor.BindingValidationResult ValidateType(BindingSourceType) protected virtual BindingSourceProcessor.BindingValidationResult ValidateType(BindingSourceType bindingSourceType) Parameters bindingSourceType BindingSourceType Returns BindingSourceProcessor.BindingValidationResult"
  },
  "api/Reqnroll.Bindings.Discovery.BindingSourceType.html": {
    "href": "api/Reqnroll.Bindings.Discovery.BindingSourceType.html",
    "title": "Class BindingSourceType | Unofficial Reqnroll Documentation",
    "summary": "Class BindingSourceType Namespace Reqnroll.Bindings.Discovery Assembly Reqnroll.dll public class BindingSourceType Inheritance object BindingSourceType Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties Attributes public BindingSourceAttribute[] Attributes { get; set; } Property Value BindingSourceAttribute[] BindingType public IBindingType BindingType { get; set; } Property Value IBindingType IsAbstract public bool IsAbstract { get; set; } Property Value bool IsClass public bool IsClass { get; set; } Property Value bool IsGenericTypeDefinition public bool IsGenericTypeDefinition { get; set; } Property Value bool IsNested public bool IsNested { get; set; } Property Value bool IsPublic public bool IsPublic { get; set; } Property Value bool Methods ToString() public override string ToString() Returns string"
  },
  "api/Reqnroll.Bindings.Discovery.IBindingSourceAttributeValueProvider.html": {
    "href": "api/Reqnroll.Bindings.Discovery.IBindingSourceAttributeValueProvider.html",
    "title": "Interface IBindingSourceAttributeValueProvider | Unofficial Reqnroll Documentation",
    "summary": "Interface IBindingSourceAttributeValueProvider Namespace Reqnroll.Bindings.Discovery Assembly Reqnroll.dll public interface IBindingSourceAttributeValueProvider Methods GetValue<TValue>() TValue GetValue<TValue>() Returns TValue Type Parameters TValue"
  },
  "api/Reqnroll.Bindings.Discovery.IBindingSourceProcessor.html": {
    "href": "api/Reqnroll.Bindings.Discovery.IBindingSourceProcessor.html",
    "title": "Interface IBindingSourceProcessor | Unofficial Reqnroll Documentation",
    "summary": "Interface IBindingSourceProcessor Namespace Reqnroll.Bindings.Discovery Assembly Reqnroll.dll public interface IBindingSourceProcessor Methods BuildingCompleted() void BuildingCompleted() CanProcessMethodAttribute(string) bool CanProcessMethodAttribute(string attributeTypeName) Parameters attributeTypeName string Returns bool CanProcessTypeAttribute(string) bool CanProcessTypeAttribute(string attributeTypeName) Parameters attributeTypeName string Returns bool PreFilterType(IEnumerable<string>) bool PreFilterType(IEnumerable<string> attributeTypeNames) Parameters attributeTypeNames IEnumerable<string> Returns bool ProcessMethod(BindingSourceMethod) void ProcessMethod(BindingSourceMethod bindingSourceMethod) Parameters bindingSourceMethod BindingSourceMethod ProcessType(BindingSourceType) bool ProcessType(BindingSourceType bindingSourceType) Parameters bindingSourceType BindingSourceType Returns bool ProcessTypeDone() void ProcessTypeDone()"
  },
  "api/Reqnroll.Bindings.Discovery.IReqnrollAttributesFilter.html": {
    "href": "api/Reqnroll.Bindings.Discovery.IReqnrollAttributesFilter.html",
    "title": "Interface IReqnrollAttributesFilter | Unofficial Reqnroll Documentation",
    "summary": "Interface IReqnrollAttributesFilter Namespace Reqnroll.Bindings.Discovery Assembly Reqnroll.dll public interface IReqnrollAttributesFilter Methods FilterForReqnrollAttributes(IEnumerable<Attribute>) IEnumerable<Attribute> FilterForReqnrollAttributes(IEnumerable<Attribute> customAttributes) Parameters customAttributes IEnumerable<Attribute> Returns IEnumerable<Attribute>"
  },
  "api/Reqnroll.Bindings.Discovery.IRuntimeBindingRegistryBuilder.html": {
    "href": "api/Reqnroll.Bindings.Discovery.IRuntimeBindingRegistryBuilder.html",
    "title": "Interface IRuntimeBindingRegistryBuilder | Unofficial Reqnroll Documentation",
    "summary": "Interface IRuntimeBindingRegistryBuilder Namespace Reqnroll.Bindings.Discovery Assembly Reqnroll.dll public interface IRuntimeBindingRegistryBuilder Methods BuildBindingsFromAssembly(Assembly) void BuildBindingsFromAssembly(Assembly assembly) Parameters assembly Assembly BuildingCompleted() void BuildingCompleted() GetBindingAssemblies(Assembly) Assembly[] GetBindingAssemblies(Assembly testAssembly) Parameters testAssembly Assembly Returns Assembly[]"
  },
  "api/Reqnroll.Bindings.Discovery.IRuntimeBindingSourceProcessor.html": {
    "href": "api/Reqnroll.Bindings.Discovery.IRuntimeBindingSourceProcessor.html",
    "title": "Interface IRuntimeBindingSourceProcessor | Unofficial Reqnroll Documentation",
    "summary": "Interface IRuntimeBindingSourceProcessor Namespace Reqnroll.Bindings.Discovery Assembly Reqnroll.dll public interface IRuntimeBindingSourceProcessor : IBindingSourceProcessor Inherited Members IBindingSourceProcessor.CanProcessTypeAttribute(string) IBindingSourceProcessor.CanProcessMethodAttribute(string) IBindingSourceProcessor.PreFilterType(IEnumerable<string>) IBindingSourceProcessor.ProcessType(BindingSourceType) IBindingSourceProcessor.ProcessMethod(BindingSourceMethod) IBindingSourceProcessor.ProcessTypeDone() IBindingSourceProcessor.BuildingCompleted() Methods RegisterTypeLoadError(string) void RegisterTypeLoadError(string errorMessage) Parameters errorMessage string"
  },
  "api/Reqnroll.Bindings.Discovery.ReqnrollAttributesFilter.html": {
    "href": "api/Reqnroll.Bindings.Discovery.ReqnrollAttributesFilter.html",
    "title": "Class ReqnrollAttributesFilter | Unofficial Reqnroll Documentation",
    "summary": "Class ReqnrollAttributesFilter Namespace Reqnroll.Bindings.Discovery Assembly Reqnroll.dll public class ReqnrollAttributesFilter : IReqnrollAttributesFilter Inheritance object ReqnrollAttributesFilter Implements IReqnrollAttributesFilter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods FilterForReqnrollAttributes(IEnumerable<Attribute>) public IEnumerable<Attribute> FilterForReqnrollAttributes(IEnumerable<Attribute> customAttributes) Parameters customAttributes IEnumerable<Attribute> Returns IEnumerable<Attribute>"
  },
  "api/Reqnroll.Bindings.Discovery.RuntimeBindingRegistryBuilder.html": {
    "href": "api/Reqnroll.Bindings.Discovery.RuntimeBindingRegistryBuilder.html",
    "title": "Class RuntimeBindingRegistryBuilder | Unofficial Reqnroll Documentation",
    "summary": "Class RuntimeBindingRegistryBuilder Namespace Reqnroll.Bindings.Discovery Assembly Reqnroll.dll public class RuntimeBindingRegistryBuilder : IRuntimeBindingRegistryBuilder Inheritance object RuntimeBindingRegistryBuilder Implements IRuntimeBindingRegistryBuilder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RuntimeBindingRegistryBuilder(IRuntimeBindingSourceProcessor, IReqnrollAttributesFilter, IBindingAssemblyLoader, ReqnrollConfiguration) public RuntimeBindingRegistryBuilder(IRuntimeBindingSourceProcessor bindingSourceProcessor, IReqnrollAttributesFilter reqnrollAttributesFilter, IBindingAssemblyLoader bindingAssemblyLoader, ReqnrollConfiguration reqnrollConfiguration) Parameters bindingSourceProcessor IRuntimeBindingSourceProcessor reqnrollAttributesFilter IReqnrollAttributesFilter bindingAssemblyLoader IBindingAssemblyLoader reqnrollConfiguration ReqnrollConfiguration Methods BuildBindingsFromAssembly(Assembly) public void BuildBindingsFromAssembly(Assembly assembly) Parameters assembly Assembly BuildingCompleted() public void BuildingCompleted() GetAssemblyTypes(Assembly, out string[]) protected virtual Type[] GetAssemblyTypes(Assembly assembly, out string[] typeLoadErrors) Parameters assembly Assembly typeLoadErrors string[] Returns Type[] GetBindingAssemblies(Assembly) public Assembly[] GetBindingAssemblies(Assembly testAssembly) Parameters testAssembly Assembly Returns Assembly[]"
  },
  "api/Reqnroll.Bindings.Discovery.RuntimeBindingSourceProcessor.html": {
    "href": "api/Reqnroll.Bindings.Discovery.RuntimeBindingSourceProcessor.html",
    "title": "Class RuntimeBindingSourceProcessor | Unofficial Reqnroll Documentation",
    "summary": "Class RuntimeBindingSourceProcessor Namespace Reqnroll.Bindings.Discovery Assembly Reqnroll.dll public class RuntimeBindingSourceProcessor : BindingSourceProcessor, IRuntimeBindingSourceProcessor, IBindingSourceProcessor Inheritance object BindingSourceProcessor RuntimeBindingSourceProcessor Implements IRuntimeBindingSourceProcessor IBindingSourceProcessor Inherited Members BindingSourceProcessor.CanProcessTypeAttribute(string) BindingSourceProcessor.CanProcessMethodAttribute(string) BindingSourceProcessor.PreFilterType(IEnumerable<string>) BindingSourceProcessor.ProcessType(BindingSourceType) BindingSourceProcessor.ProcessTypeDone() BindingSourceProcessor.ProcessMethod(BindingSourceMethod) BindingSourceProcessor.ProcessStepDefinitions(BindingSourceMethod, BindingScope[]) BindingSourceProcessor.ProcessHooks(BindingSourceMethod, BindingScope[]) BindingSourceProcessor.ProcessStepArgumentTransformations(BindingSourceMethod, BindingScope[]) BindingSourceProcessor.ValidateType(BindingSourceType) BindingSourceProcessor.ValidateMethod(BindingSourceMethod) BindingSourceProcessor.ValidateStepDefinition(BindingSourceMethod, BindingSourceAttribute) BindingSourceProcessor.ValidateHook(BindingSourceMethod, BindingSourceAttribute, HookType) BindingSourceProcessor.IsScenarioSpecificHook(HookType) BindingSourceProcessor.ValidateStepArgumentTransformation(BindingSourceMethod, BindingSourceAttribute) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RuntimeBindingSourceProcessor(IBindingFactory, IBindingRegistry, ITestTracer) public RuntimeBindingSourceProcessor(IBindingFactory bindingFactory, IBindingRegistry bindingRegistry, ITestTracer testTracer) Parameters bindingFactory IBindingFactory bindingRegistry IBindingRegistry testTracer ITestTracer Methods BuildingCompleted() public override void BuildingCompleted() OnValidationError(BindingValidationResult, bool) protected override void OnValidationError(BindingSourceProcessor.BindingValidationResult validationResult, bool genericBindingError) Parameters validationResult BindingSourceProcessor.BindingValidationResult genericBindingError bool ProcessHookBinding(IHookBinding) protected override void ProcessHookBinding(IHookBinding hookBinding) Parameters hookBinding IHookBinding ProcessStepArgumentTransformationBinding(IStepArgumentTransformationBinding) protected override void ProcessStepArgumentTransformationBinding(IStepArgumentTransformationBinding stepArgumentTransformationBinding) Parameters stepArgumentTransformationBinding IStepArgumentTransformationBinding ProcessStepDefinitionBinding(IStepDefinitionBinding) protected override void ProcessStepDefinitionBinding(IStepDefinitionBinding stepDefinitionBinding) Parameters stepDefinitionBinding IStepDefinitionBinding RegisterTypeLoadError(string) public void RegisterTypeLoadError(string errorMessage) Parameters errorMessage string"
  },
  "api/Reqnroll.Bindings.Discovery.html": {
    "href": "api/Reqnroll.Bindings.Discovery.html",
    "title": "Namespace Reqnroll.Bindings.Discovery | Unofficial Reqnroll Documentation",
    "summary": "Namespace Reqnroll.Bindings.Discovery Classes BindingSourceAttribute BindingSourceAttributeValueProvider BindingSourceMethod BindingSourceProcessor BindingSourceType ReqnrollAttributesFilter RuntimeBindingRegistryBuilder RuntimeBindingSourceProcessor Structs BindingSourceProcessor.BindingValidationResult Interfaces IBindingSourceAttributeValueProvider IBindingSourceProcessor IReqnrollAttributesFilter IRuntimeBindingRegistryBuilder IRuntimeBindingSourceProcessor"
  },
  "api/Reqnroll.Bindings.DryRunBindingInvoker.html": {
    "href": "api/Reqnroll.Bindings.DryRunBindingInvoker.html",
    "title": "Class DryRunBindingInvoker | Unofficial Reqnroll Documentation",
    "summary": "Class DryRunBindingInvoker Namespace Reqnroll.Bindings Assembly Reqnroll.dll public class DryRunBindingInvoker : IAsyncBindingInvoker, IBindingInvoker Inheritance object DryRunBindingInvoker Implements IAsyncBindingInvoker IBindingInvoker Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods InvokeBinding(IBinding, IContextManager, object[], ITestTracer, out TimeSpan) public object InvokeBinding(IBinding binding, IContextManager contextManager, object[] arguments, ITestTracer testTracer, out TimeSpan duration) Parameters binding IBinding contextManager IContextManager arguments object[] testTracer ITestTracer duration TimeSpan Returns object InvokeBindingAsync(IBinding, IContextManager, object[], ITestTracer, DurationHolder) public Task<object> InvokeBindingAsync(IBinding binding, IContextManager contextManager, object[] arguments, ITestTracer testTracer, DurationHolder durationHolder) Parameters binding IBinding contextManager IContextManager arguments object[] testTracer ITestTracer durationHolder DurationHolder Returns Task<object>"
  },
  "api/Reqnroll.Bindings.DurationHolder.html": {
    "href": "api/Reqnroll.Bindings.DurationHolder.html",
    "title": "Class DurationHolder | Unofficial Reqnroll Documentation",
    "summary": "Class DurationHolder Namespace Reqnroll.Bindings Assembly Reqnroll.dll public class DurationHolder Inheritance object DurationHolder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Duration public TimeSpan Duration { get; set; } Property Value TimeSpan"
  },
  "api/Reqnroll.Bindings.ExecutionContextHolder.html": {
    "href": "api/Reqnroll.Bindings.ExecutionContextHolder.html",
    "title": "Class ExecutionContextHolder | Unofficial Reqnroll Documentation",
    "summary": "Class ExecutionContextHolder Namespace Reqnroll.Bindings Assembly Reqnroll.dll public class ExecutionContextHolder : StrongBox<ExecutionContext>, IStrongBox Inheritance object StrongBox<ExecutionContext> ExecutionContextHolder Implements IStrongBox Inherited Members StrongBox<ExecutionContext>.Value object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Reqnroll.Bindings.HookBinding.html": {
    "href": "api/Reqnroll.Bindings.HookBinding.html",
    "title": "Class HookBinding | Unofficial Reqnroll Documentation",
    "summary": "Class HookBinding Namespace Reqnroll.Bindings Assembly Reqnroll.dll public class HookBinding : MethodBinding, IHookBinding, IScopedBinding, IBinding Inheritance object MethodBinding HookBinding Implements IHookBinding IScopedBinding IBinding Inherited Members MethodBinding.Method MethodBinding.Equals(MethodBinding) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors HookBinding(IBindingMethod, HookType, BindingScope, int) public HookBinding(IBindingMethod bindingMethod, HookType hookType, BindingScope bindingScope, int hookOrder) Parameters bindingMethod IBindingMethod hookType HookType bindingScope BindingScope hookOrder int Properties BindingScope public BindingScope BindingScope { get; } Property Value BindingScope HookOrder public int HookOrder { get; } Property Value int HookType public HookType HookType { get; set; } Property Value HookType IsScoped public bool IsScoped { get; } Property Value bool Methods Equals(HookBinding) protected bool Equals(HookBinding other) Parameters other HookBinding Returns bool Equals(object) public override bool Equals(object obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int"
  },
  "api/Reqnroll.Bindings.HookType.html": {
    "href": "api/Reqnroll.Bindings.HookType.html",
    "title": "Enum HookType | Unofficial Reqnroll Documentation",
    "summary": "Enum HookType Namespace Reqnroll.Bindings Assembly Reqnroll.dll public enum HookType Fields AfterFeature = 3 AfterScenario = 5 AfterScenarioBlock = 7 AfterStep = 9 AfterTestRun = 1 BeforeFeature = 2 BeforeScenario = 4 BeforeScenarioBlock = 6 BeforeStep = 8 BeforeTestRun = 0"
  },
  "api/Reqnroll.Bindings.IAsyncBindingInvoker.html": {
    "href": "api/Reqnroll.Bindings.IAsyncBindingInvoker.html",
    "title": "Interface IAsyncBindingInvoker | Unofficial Reqnroll Documentation",
    "summary": "Interface IAsyncBindingInvoker Namespace Reqnroll.Bindings Assembly Reqnroll.dll public interface IAsyncBindingInvoker Methods InvokeBindingAsync(IBinding, IContextManager, object[], ITestTracer, DurationHolder) Task<object> InvokeBindingAsync(IBinding binding, IContextManager contextManager, object[] arguments, ITestTracer testTracer, DurationHolder durationHolder) Parameters binding IBinding contextManager IContextManager arguments object[] testTracer ITestTracer durationHolder DurationHolder Returns Task<object>"
  },
  "api/Reqnroll.Bindings.IBinding.html": {
    "href": "api/Reqnroll.Bindings.IBinding.html",
    "title": "Interface IBinding | Unofficial Reqnroll Documentation",
    "summary": "Interface IBinding Namespace Reqnroll.Bindings Assembly Reqnroll.dll public interface IBinding Properties Method IBindingMethod Method { get; } Property Value IBindingMethod"
  },
  "api/Reqnroll.Bindings.IBindingDelegateInvoker.html": {
    "href": "api/Reqnroll.Bindings.IBindingDelegateInvoker.html",
    "title": "Interface IBindingDelegateInvoker | Unofficial Reqnroll Documentation",
    "summary": "Interface IBindingDelegateInvoker Namespace Reqnroll.Bindings Assembly Reqnroll.dll public interface IBindingDelegateInvoker Methods InvokeDelegateAsync(Delegate, object[], ExecutionContextHolder) Task<object> InvokeDelegateAsync(Delegate bindingDelegate, object[] invokeArgs, ExecutionContextHolder executionContext) Parameters bindingDelegate Delegate invokeArgs object[] executionContext ExecutionContextHolder Returns Task<object>"
  },
  "api/Reqnroll.Bindings.IBindingFactory.html": {
    "href": "api/Reqnroll.Bindings.IBindingFactory.html",
    "title": "Interface IBindingFactory | Unofficial Reqnroll Documentation",
    "summary": "Interface IBindingFactory Namespace Reqnroll.Bindings Assembly Reqnroll.dll public interface IBindingFactory Methods CreateHookBinding(IBindingMethod, HookType, BindingScope, int) IHookBinding CreateHookBinding(IBindingMethod bindingMethod, HookType hookType, BindingScope bindingScope, int hookOrder) Parameters bindingMethod IBindingMethod hookType HookType bindingScope BindingScope hookOrder int Returns IHookBinding CreateStepArgumentTransformation(string, IBindingMethod, string, int) IStepArgumentTransformationBinding CreateStepArgumentTransformation(string regexString, IBindingMethod bindingMethod, string parameterTypeName = null, int order = 10000) Parameters regexString string bindingMethod IBindingMethod parameterTypeName string order int Returns IStepArgumentTransformationBinding CreateStepDefinitionBindingBuilder(StepDefinitionType, IBindingMethod, BindingScope, string) IStepDefinitionBindingBuilder CreateStepDefinitionBindingBuilder(StepDefinitionType stepDefinitionType, IBindingMethod bindingMethod, BindingScope bindingScope, string expressionString) Parameters stepDefinitionType StepDefinitionType bindingMethod IBindingMethod bindingScope BindingScope expressionString string Returns IStepDefinitionBindingBuilder"
  },
  "api/Reqnroll.Bindings.IBindingInvoker.html": {
    "href": "api/Reqnroll.Bindings.IBindingInvoker.html",
    "title": "Interface IBindingInvoker | Unofficial Reqnroll Documentation",
    "summary": "Interface IBindingInvoker Namespace Reqnroll.Bindings Assembly Reqnroll.dll [Obsolete(\"Use async version of the interface (IAsyncBindingInvoker) whenever you can\")] public interface IBindingInvoker Methods InvokeBinding(IBinding, IContextManager, object[], ITestTracer, out TimeSpan) [Obsolete(\"Use async version of the method of IAsyncBindingInvoker instead\")] object InvokeBinding(IBinding binding, IContextManager contextManager, object[] arguments, ITestTracer testTracer, out TimeSpan duration) Parameters binding IBinding contextManager IContextManager arguments object[] testTracer ITestTracer duration TimeSpan Returns object"
  },
  "api/Reqnroll.Bindings.IBindingRegistry.html": {
    "href": "api/Reqnroll.Bindings.IBindingRegistry.html",
    "title": "Interface IBindingRegistry | Unofficial Reqnroll Documentation",
    "summary": "Interface IBindingRegistry Namespace Reqnroll.Bindings Assembly Reqnroll.dll public interface IBindingRegistry Properties IsValid bool IsValid { get; } Property Value bool Ready bool Ready { get; set; } Property Value bool Methods GetConsideredStepDefinitions(StepDefinitionType, string) IEnumerable<IStepDefinitionBinding> GetConsideredStepDefinitions(StepDefinitionType stepDefinitionType, string stepText = null) Parameters stepDefinitionType StepDefinitionType stepText string Returns IEnumerable<IStepDefinitionBinding> GetErrorMessages() IEnumerable<BindingError> GetErrorMessages() Returns IEnumerable<BindingError> GetHooks() IEnumerable<IHookBinding> GetHooks() Returns IEnumerable<IHookBinding> GetHooks(HookType) IEnumerable<IHookBinding> GetHooks(HookType bindingEvent) Parameters bindingEvent HookType Returns IEnumerable<IHookBinding> GetStepDefinitions() IEnumerable<IStepDefinitionBinding> GetStepDefinitions() Returns IEnumerable<IStepDefinitionBinding> GetStepTransformations() IEnumerable<IStepArgumentTransformationBinding> GetStepTransformations() Returns IEnumerable<IStepArgumentTransformationBinding> RegisterGenericBindingError(BindingError) void RegisterGenericBindingError(BindingError error) Parameters error BindingError RegisterHookBinding(IHookBinding) void RegisterHookBinding(IHookBinding hookBinding) Parameters hookBinding IHookBinding RegisterStepArgumentTransformationBinding(IStepArgumentTransformationBinding) void RegisterStepArgumentTransformationBinding(IStepArgumentTransformationBinding stepArgumentTransformationBinding) Parameters stepArgumentTransformationBinding IStepArgumentTransformationBinding RegisterStepDefinitionBinding(IStepDefinitionBinding) void RegisterStepDefinitionBinding(IStepDefinitionBinding stepDefinitionBinding) Parameters stepDefinitionBinding IStepDefinitionBinding"
  },
  "api/Reqnroll.Bindings.IHookBinding.html": {
    "href": "api/Reqnroll.Bindings.IHookBinding.html",
    "title": "Interface IHookBinding | Unofficial Reqnroll Documentation",
    "summary": "Interface IHookBinding Namespace Reqnroll.Bindings Assembly Reqnroll.dll public interface IHookBinding : IScopedBinding, IBinding Inherited Members IScopedBinding.IsScoped IScopedBinding.BindingScope IBinding.Method Properties HookOrder int HookOrder { get; } Property Value int HookType HookType HookType { get; } Property Value HookType"
  },
  "api/Reqnroll.Bindings.IScopedBinding.html": {
    "href": "api/Reqnroll.Bindings.IScopedBinding.html",
    "title": "Interface IScopedBinding | Unofficial Reqnroll Documentation",
    "summary": "Interface IScopedBinding Namespace Reqnroll.Bindings Assembly Reqnroll.dll public interface IScopedBinding Properties BindingScope BindingScope BindingScope { get; } Property Value BindingScope IsScoped bool IsScoped { get; } Property Value bool"
  },
  "api/Reqnroll.Bindings.IStepArgumentTransformationBinding.html": {
    "href": "api/Reqnroll.Bindings.IStepArgumentTransformationBinding.html",
    "title": "Interface IStepArgumentTransformationBinding | Unofficial Reqnroll Documentation",
    "summary": "Interface IStepArgumentTransformationBinding Namespace Reqnroll.Bindings Assembly Reqnroll.dll Represents a custom step definition parameter binding public interface IStepArgumentTransformationBinding : IBinding Inherited Members IBinding.Method Properties Name The optional name of the custom parameter. The name can be used in cucumber expressions. string Name { get; } Property Value string Order The deterministic order for step argument transformation int Order { get; } Property Value int Regex The regular expression matches the step argument. Optional, if null, the transformation receives the entire argument. Regex Regex { get; } Property Value Regex"
  },
  "api/Reqnroll.Bindings.IStepArgumentTypeConverter.html": {
    "href": "api/Reqnroll.Bindings.IStepArgumentTypeConverter.html",
    "title": "Interface IStepArgumentTypeConverter | Unofficial Reqnroll Documentation",
    "summary": "Interface IStepArgumentTypeConverter Namespace Reqnroll.Bindings Assembly Reqnroll.dll public interface IStepArgumentTypeConverter Methods CanConvert(object, IBindingType, CultureInfo) bool CanConvert(object value, IBindingType typeToConvertTo, CultureInfo cultureInfo) Parameters value object typeToConvertTo IBindingType cultureInfo CultureInfo Returns bool ConvertAsync(object, IBindingType, CultureInfo) Task<object> ConvertAsync(object value, IBindingType typeToConvertTo, CultureInfo cultureInfo) Parameters value object typeToConvertTo IBindingType cultureInfo CultureInfo Returns Task<object>"
  },
  "api/Reqnroll.Bindings.IStepDefinitionBinding.html": {
    "href": "api/Reqnroll.Bindings.IStepDefinitionBinding.html",
    "title": "Interface IStepDefinitionBinding | Unofficial Reqnroll Documentation",
    "summary": "Interface IStepDefinitionBinding Namespace Reqnroll.Bindings Assembly Reqnroll.dll public interface IStepDefinitionBinding : IScopedBinding, IBinding Inherited Members IScopedBinding.IsScoped IScopedBinding.BindingScope IBinding.Method Properties ErrorMessage string ErrorMessage { get; } Property Value string Expression IExpression Expression { get; } Property Value IExpression ExpressionType string ExpressionType { get; } Property Value string IsValid bool IsValid { get; } Property Value bool Regex Regex Regex { get; } Property Value Regex SourceExpression string SourceExpression { get; } Property Value string StepDefinitionType StepDefinitionType StepDefinitionType { get; } Property Value StepDefinitionType"
  },
  "api/Reqnroll.Bindings.IStepDefinitionBindingBuilder.html": {
    "href": "api/Reqnroll.Bindings.IStepDefinitionBindingBuilder.html",
    "title": "Interface IStepDefinitionBindingBuilder | Unofficial Reqnroll Documentation",
    "summary": "Interface IStepDefinitionBindingBuilder Namespace Reqnroll.Bindings Assembly Reqnroll.dll public interface IStepDefinitionBindingBuilder Methods Build() IEnumerable<IStepDefinitionBinding> Build() Returns IEnumerable<IStepDefinitionBinding>"
  },
  "api/Reqnroll.Bindings.IStepDefinitionRegexCalculator.html": {
    "href": "api/Reqnroll.Bindings.IStepDefinitionRegexCalculator.html",
    "title": "Interface IStepDefinitionRegexCalculator | Unofficial Reqnroll Documentation",
    "summary": "Interface IStepDefinitionRegexCalculator Namespace Reqnroll.Bindings Assembly Reqnroll.dll public interface IStepDefinitionRegexCalculator Methods CalculateRegexFromMethod(StepDefinitionType, IBindingMethod) string CalculateRegexFromMethod(StepDefinitionType stepDefinitionType, IBindingMethod bindingMethod) Parameters stepDefinitionType StepDefinitionType bindingMethod IBindingMethod Returns string"
  },
  "api/Reqnroll.Bindings.InvalidStepDefinitionBindingBuilder.html": {
    "href": "api/Reqnroll.Bindings.InvalidStepDefinitionBindingBuilder.html",
    "title": "Class InvalidStepDefinitionBindingBuilder | Unofficial Reqnroll Documentation",
    "summary": "Class InvalidStepDefinitionBindingBuilder Namespace Reqnroll.Bindings Assembly Reqnroll.dll public class InvalidStepDefinitionBindingBuilder : IStepDefinitionBindingBuilder Inheritance object InvalidStepDefinitionBindingBuilder Implements IStepDefinitionBindingBuilder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors InvalidStepDefinitionBindingBuilder(StepDefinitionType, IBindingMethod, BindingScope, string, string) public InvalidStepDefinitionBindingBuilder(StepDefinitionType stepDefinitionType, IBindingMethod bindingMethod, BindingScope bindingScope, string sourceExpression, string errorMessage) Parameters stepDefinitionType StepDefinitionType bindingMethod IBindingMethod bindingScope BindingScope sourceExpression string errorMessage string Methods Build() public IEnumerable<IStepDefinitionBinding> Build() Returns IEnumerable<IStepDefinitionBinding>"
  },
  "api/Reqnroll.Bindings.MethodBinding.html": {
    "href": "api/Reqnroll.Bindings.MethodBinding.html",
    "title": "Class MethodBinding | Unofficial Reqnroll Documentation",
    "summary": "Class MethodBinding Namespace Reqnroll.Bindings Assembly Reqnroll.dll public abstract class MethodBinding : IBinding Inheritance object MethodBinding Implements IBinding Derived HookBinding StepArgumentTransformationBinding StepDefinitionBinding Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MethodBinding(IBindingMethod) protected MethodBinding(IBindingMethod bindingMethod) Parameters bindingMethod IBindingMethod Properties Method public IBindingMethod Method { get; } Property Value IBindingMethod Methods Equals(MethodBinding) protected bool Equals(MethodBinding other) Parameters other MethodBinding Returns bool Equals(object) public override bool Equals(object obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int"
  },
  "api/Reqnroll.Bindings.MethodNameStepDefinitionBindingBuilder.html": {
    "href": "api/Reqnroll.Bindings.MethodNameStepDefinitionBindingBuilder.html",
    "title": "Class MethodNameStepDefinitionBindingBuilder | Unofficial Reqnroll Documentation",
    "summary": "Class MethodNameStepDefinitionBindingBuilder Namespace Reqnroll.Bindings Assembly Reqnroll.dll public class MethodNameStepDefinitionBindingBuilder : RegexStepDefinitionBindingBuilder, IStepDefinitionBindingBuilder Inheritance object StepDefinitionBindingBuilderBase RegexStepDefinitionBindingBuilder MethodNameStepDefinitionBindingBuilder Implements IStepDefinitionBindingBuilder Inherited Members RegexStepDefinitionBindingBuilder.CreateExpression(out string) StepDefinitionBindingBuilderBase._stepDefinitionType StepDefinitionBindingBuilderBase._bindingMethod StepDefinitionBindingBuilderBase._bindingScope StepDefinitionBindingBuilderBase._sourceExpression StepDefinitionBindingBuilderBase.Build() StepDefinitionBindingBuilderBase.BuildSingle() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MethodNameStepDefinitionBindingBuilder(IStepDefinitionRegexCalculator, StepDefinitionType, IBindingMethod, BindingScope) public MethodNameStepDefinitionBindingBuilder(IStepDefinitionRegexCalculator stepDefinitionRegexCalculator, StepDefinitionType stepDefinitionType, IBindingMethod bindingMethod, BindingScope bindingScope) Parameters stepDefinitionRegexCalculator IStepDefinitionRegexCalculator stepDefinitionType StepDefinitionType bindingMethod IBindingMethod bindingScope BindingScope Methods GetRegexSource(out string) protected override string GetRegexSource(out string expressionType) Parameters expressionType string Returns string"
  },
  "api/Reqnroll.Bindings.Provider.BindingProviderService.html": {
    "href": "api/Reqnroll.Bindings.Provider.BindingProviderService.html",
    "title": "Class BindingProviderService | Unofficial Reqnroll Documentation",
    "summary": "Class BindingProviderService Namespace Reqnroll.Bindings.Provider Assembly Reqnroll.dll public class BindingProviderService Inheritance object BindingProviderService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods DiscoverBindings(Assembly, string) public static string DiscoverBindings(Assembly testAssembly, string jsonConfiguration) Parameters testAssembly Assembly jsonConfiguration string Returns string"
  },
  "api/Reqnroll.Bindings.Provider.Data.BindingData.html": {
    "href": "api/Reqnroll.Bindings.Provider.Data.BindingData.html",
    "title": "Class BindingData | Unofficial Reqnroll Documentation",
    "summary": "Class BindingData Namespace Reqnroll.Bindings.Provider.Data Assembly Reqnroll.dll public class BindingData Inheritance object BindingData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Errors public string[] Errors { get; set; } Property Value string[] Hooks public HookData[] Hooks { get; set; } Property Value HookData[] StepArgumentTransformations public StepArgumentTransformationData[] StepArgumentTransformations { get; set; } Property Value StepArgumentTransformationData[] StepDefinitions public StepDefinitionData[] StepDefinitions { get; set; } Property Value StepDefinitionData[] Warnings public string[] Warnings { get; set; } Property Value string[]"
  },
  "api/Reqnroll.Bindings.Provider.Data.BindingScopeData.html": {
    "href": "api/Reqnroll.Bindings.Provider.Data.BindingScopeData.html",
    "title": "Class BindingScopeData | Unofficial Reqnroll Documentation",
    "summary": "Class BindingScopeData Namespace Reqnroll.Bindings.Provider.Data Assembly Reqnroll.dll public class BindingScopeData Inheritance object BindingScopeData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties FeatureTitle public string FeatureTitle { get; set; } Property Value string ScenarioTitle public string ScenarioTitle { get; set; } Property Value string Tag public string Tag { get; set; } Property Value string"
  },
  "api/Reqnroll.Bindings.Provider.Data.BindingSourceData.html": {
    "href": "api/Reqnroll.Bindings.Provider.Data.BindingSourceData.html",
    "title": "Class BindingSourceData | Unofficial Reqnroll Documentation",
    "summary": "Class BindingSourceData Namespace Reqnroll.Bindings.Provider.Data Assembly Reqnroll.dll public class BindingSourceData Inheritance object BindingSourceData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Method public BindingSourceMethodData Method { get; set; } Property Value BindingSourceMethodData SourceLocation public string SourceLocation { get; set; } Property Value string"
  },
  "api/Reqnroll.Bindings.Provider.Data.BindingSourceMethodData.html": {
    "href": "api/Reqnroll.Bindings.Provider.Data.BindingSourceMethodData.html",
    "title": "Class BindingSourceMethodData | Unofficial Reqnroll Documentation",
    "summary": "Class BindingSourceMethodData Namespace Reqnroll.Bindings.Provider.Data Assembly Reqnroll.dll public class BindingSourceMethodData Inheritance object BindingSourceMethodData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Assembly public string Assembly { get; set; } Property Value string FullName public string FullName { get; set; } Property Value string MetadataToken public int? MetadataToken { get; set; } Property Value int? Type public string Type { get; set; } Property Value string"
  },
  "api/Reqnroll.Bindings.Provider.Data.HookData.html": {
    "href": "api/Reqnroll.Bindings.Provider.Data.HookData.html",
    "title": "Class HookData | Unofficial Reqnroll Documentation",
    "summary": "Class HookData Namespace Reqnroll.Bindings.Provider.Data Assembly Reqnroll.dll public class HookData Inheritance object HookData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties HookOrder public int HookOrder { get; set; } Property Value int Scope public BindingScopeData Scope { get; set; } Property Value BindingScopeData Source public BindingSourceData Source { get; set; } Property Value BindingSourceData Type public string Type { get; set; } Property Value string"
  },
  "api/Reqnroll.Bindings.Provider.Data.StepArgumentTransformationData.html": {
    "href": "api/Reqnroll.Bindings.Provider.Data.StepArgumentTransformationData.html",
    "title": "Class StepArgumentTransformationData | Unofficial Reqnroll Documentation",
    "summary": "Class StepArgumentTransformationData Namespace Reqnroll.Bindings.Provider.Data Assembly Reqnroll.dll public class StepArgumentTransformationData Inheritance object StepArgumentTransformationData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Name public string Name { get; set; } Property Value string ParamTypes public string[] ParamTypes { get; set; } Property Value string[] Regex public string Regex { get; set; } Property Value string Source public BindingSourceData Source { get; set; } Property Value BindingSourceData"
  },
  "api/Reqnroll.Bindings.Provider.Data.StepDefinitionData.html": {
    "href": "api/Reqnroll.Bindings.Provider.Data.StepDefinitionData.html",
    "title": "Class StepDefinitionData | Unofficial Reqnroll Documentation",
    "summary": "Class StepDefinitionData Namespace Reqnroll.Bindings.Provider.Data Assembly Reqnroll.dll public class StepDefinitionData Inheritance object StepDefinitionData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Error public string Error { get; set; } Property Value string Expression public string Expression { get; set; } Property Value string ParamTypes public string[] ParamTypes { get; set; } Property Value string[] Regex public string Regex { get; set; } Property Value string Scope public BindingScopeData Scope { get; set; } Property Value BindingScopeData Source public BindingSourceData Source { get; set; } Property Value BindingSourceData Type public string Type { get; set; } Property Value string"
  },
  "api/Reqnroll.Bindings.Provider.Data.html": {
    "href": "api/Reqnroll.Bindings.Provider.Data.html",
    "title": "Namespace Reqnroll.Bindings.Provider.Data | Unofficial Reqnroll Documentation",
    "summary": "Namespace Reqnroll.Bindings.Provider.Data Classes BindingData BindingScopeData BindingSourceData BindingSourceMethodData HookData StepArgumentTransformationData StepDefinitionData"
  },
  "api/Reqnroll.Bindings.Provider.html": {
    "href": "api/Reqnroll.Bindings.Provider.html",
    "title": "Namespace Reqnroll.Bindings.Provider | Unofficial Reqnroll Documentation",
    "summary": "Namespace Reqnroll.Bindings.Provider Classes BindingProviderService"
  },
  "api/Reqnroll.Bindings.Reflection.BindingMethod.html": {
    "href": "api/Reqnroll.Bindings.Reflection.BindingMethod.html",
    "title": "Class BindingMethod | Unofficial Reqnroll Documentation",
    "summary": "Class BindingMethod Namespace Reqnroll.Bindings.Reflection Assembly Reqnroll.dll public class BindingMethod : IBindingMethod Inheritance object BindingMethod Implements IBindingMethod Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods BindingReflectionExtensions.GetShortDisplayText(IBindingMethod) BindingReflectionExtensions.MethodEquals(IBindingMethod, IBindingMethod) Constructors BindingMethod(IBindingType, string, IEnumerable<IBindingParameter>, IBindingType) public BindingMethod(IBindingType type, string name, IEnumerable<IBindingParameter> parameters, IBindingType returnType) Parameters type IBindingType name string parameters IEnumerable<IBindingParameter> returnType IBindingType Properties Name public string Name { get; } Property Value string Parameters public IEnumerable<IBindingParameter> Parameters { get; } Property Value IEnumerable<IBindingParameter> ReturnType The return type of the method or null for void methods. public IBindingType ReturnType { get; } Property Value IBindingType Type The declaring type of the method. public IBindingType Type { get; } Property Value IBindingType Methods Equals(BindingMethod) protected bool Equals(BindingMethod other) Parameters other BindingMethod Returns bool Equals(object) public override bool Equals(object obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string"
  },
  "api/Reqnroll.Bindings.Reflection.BindingMethodComparer.html": {
    "href": "api/Reqnroll.Bindings.Reflection.BindingMethodComparer.html",
    "title": "Class BindingMethodComparer | Unofficial Reqnroll Documentation",
    "summary": "Class BindingMethodComparer Namespace Reqnroll.Bindings.Reflection Assembly Reqnroll.dll public class BindingMethodComparer : IEqualityComparer<IBindingMethod> Inheritance object BindingMethodComparer Implements IEqualityComparer<IBindingMethod> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Instance public static readonly BindingMethodComparer Instance Field Value BindingMethodComparer Methods Equals(IBindingMethod, IBindingMethod) public bool Equals(IBindingMethod x, IBindingMethod y) Parameters x IBindingMethod y IBindingMethod Returns bool GetHashCode(IBindingMethod) public int GetHashCode(IBindingMethod obj) Parameters obj IBindingMethod Returns int"
  },
  "api/Reqnroll.Bindings.Reflection.BindingParameter.html": {
    "href": "api/Reqnroll.Bindings.Reflection.BindingParameter.html",
    "title": "Class BindingParameter | Unofficial Reqnroll Documentation",
    "summary": "Class BindingParameter Namespace Reqnroll.Bindings.Reflection Assembly Reqnroll.dll public class BindingParameter : IBindingParameter Inheritance object BindingParameter Implements IBindingParameter Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods BindingReflectionExtensions.ParamEquals(IBindingParameter, IBindingParameter) Constructors BindingParameter(IBindingType, string) public BindingParameter(IBindingType type, string parameterName) Parameters type IBindingType parameterName string Properties ParameterName public string ParameterName { get; } Property Value string Type public IBindingType Type { get; } Property Value IBindingType Methods Equals(BindingParameter) protected bool Equals(BindingParameter other) Parameters other BindingParameter Returns bool Equals(object) public override bool Equals(object obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string"
  },
  "api/Reqnroll.Bindings.Reflection.BindingReflectionExtensions.html": {
    "href": "api/Reqnroll.Bindings.Reflection.BindingReflectionExtensions.html",
    "title": "Class BindingReflectionExtensions | Unofficial Reqnroll Documentation",
    "summary": "Class BindingReflectionExtensions Namespace Reqnroll.Bindings.Reflection Assembly Reqnroll.dll public static class BindingReflectionExtensions Inheritance object BindingReflectionExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetShortDisplayText(IBindingMethod) public static string GetShortDisplayText(this IBindingMethod bindingMethod) Parameters bindingMethod IBindingMethod Returns string IsAssignableFrom(Type, IBindingType) public static bool IsAssignableFrom(this Type baseType, IBindingType type) Parameters baseType Type type IBindingType Returns bool IsAssignableTo(Type, IBindingType) public static bool IsAssignableTo(this Type type, IBindingType baseType) Parameters type Type baseType IBindingType Returns bool MethodEquals(IBindingMethod, IBindingMethod) public static bool MethodEquals(this IBindingMethod method1, IBindingMethod method2) Parameters method1 IBindingMethod method2 IBindingMethod Returns bool ParamEquals(IBindingParameter, IBindingParameter) public static bool ParamEquals(this IBindingParameter param1, IBindingParameter param2) Parameters param1 IBindingParameter param2 IBindingParameter Returns bool TypeEquals(IBindingType, IBindingType) public static bool TypeEquals(this IBindingType type1, IBindingType type2) Parameters type1 IBindingType type2 IBindingType Returns bool TypeEquals(IBindingType, Type) public static bool TypeEquals(this IBindingType type1, Type type2) Parameters type1 IBindingType type2 Type Returns bool"
  },
  "api/Reqnroll.Bindings.Reflection.BindingType.html": {
    "href": "api/Reqnroll.Bindings.Reflection.BindingType.html",
    "title": "Class BindingType | Unofficial Reqnroll Documentation",
    "summary": "Class BindingType Namespace Reqnroll.Bindings.Reflection Assembly Reqnroll.dll public class BindingType : IBindingType Inheritance object BindingType Implements IBindingType Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods BindingReflectionExtensions.TypeEquals(IBindingType, IBindingType) BindingReflectionExtensions.TypeEquals(IBindingType, Type) Constructors BindingType(string, string, string) public BindingType(string name, string fullName, string assemblyName) Parameters name string fullName string assemblyName string Properties AssemblyName public string AssemblyName { get; } Property Value string FullName public string FullName { get; } Property Value string Name public string Name { get; } Property Value string Methods Equals(BindingType) protected bool Equals(BindingType other) Parameters other BindingType Returns bool Equals(object) public override bool Equals(object obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string"
  },
  "api/Reqnroll.Bindings.Reflection.IBindingMethod.html": {
    "href": "api/Reqnroll.Bindings.Reflection.IBindingMethod.html",
    "title": "Interface IBindingMethod | Unofficial Reqnroll Documentation",
    "summary": "Interface IBindingMethod Namespace Reqnroll.Bindings.Reflection Assembly Reqnroll.dll public interface IBindingMethod Extension Methods BindingReflectionExtensions.GetShortDisplayText(IBindingMethod) BindingReflectionExtensions.MethodEquals(IBindingMethod, IBindingMethod) Properties Name string Name { get; } Property Value string Parameters IEnumerable<IBindingParameter> Parameters { get; } Property Value IEnumerable<IBindingParameter> ReturnType The return type of the method or null for void methods. IBindingType ReturnType { get; } Property Value IBindingType Type The declaring type of the method. IBindingType Type { get; } Property Value IBindingType"
  },
  "api/Reqnroll.Bindings.Reflection.IBindingParameter.html": {
    "href": "api/Reqnroll.Bindings.Reflection.IBindingParameter.html",
    "title": "Interface IBindingParameter | Unofficial Reqnroll Documentation",
    "summary": "Interface IBindingParameter Namespace Reqnroll.Bindings.Reflection Assembly Reqnroll.dll public interface IBindingParameter Extension Methods BindingReflectionExtensions.ParamEquals(IBindingParameter, IBindingParameter) Properties ParameterName string ParameterName { get; } Property Value string Type IBindingType Type { get; } Property Value IBindingType"
  },
  "api/Reqnroll.Bindings.Reflection.IBindingType.html": {
    "href": "api/Reqnroll.Bindings.Reflection.IBindingType.html",
    "title": "Interface IBindingType | Unofficial Reqnroll Documentation",
    "summary": "Interface IBindingType Namespace Reqnroll.Bindings.Reflection Assembly Reqnroll.dll public interface IBindingType Extension Methods BindingReflectionExtensions.TypeEquals(IBindingType, IBindingType) BindingReflectionExtensions.TypeEquals(IBindingType, Type) Properties AssemblyName string AssemblyName { get; } Property Value string FullName string FullName { get; } Property Value string Name string Name { get; } Property Value string"
  },
  "api/Reqnroll.Bindings.Reflection.IPolymorphicBindingType.html": {
    "href": "api/Reqnroll.Bindings.Reflection.IPolymorphicBindingType.html",
    "title": "Interface IPolymorphicBindingType | Unofficial Reqnroll Documentation",
    "summary": "Interface IPolymorphicBindingType Namespace Reqnroll.Bindings.Reflection Assembly Reqnroll.dll public interface IPolymorphicBindingType : IBindingType Inherited Members IBindingType.Name IBindingType.FullName IBindingType.AssemblyName Extension Methods BindingReflectionExtensions.TypeEquals(IBindingType, IBindingType) BindingReflectionExtensions.TypeEquals(IBindingType, Type) Methods IsAssignableTo(IBindingType) bool IsAssignableTo(IBindingType baseType) Parameters baseType IBindingType Returns bool"
  },
  "api/Reqnroll.Bindings.Reflection.RuntimeBindingMethod.html": {
    "href": "api/Reqnroll.Bindings.Reflection.RuntimeBindingMethod.html",
    "title": "Class RuntimeBindingMethod | Unofficial Reqnroll Documentation",
    "summary": "Class RuntimeBindingMethod Namespace Reqnroll.Bindings.Reflection Assembly Reqnroll.dll public class RuntimeBindingMethod : IBindingMethod Inheritance object RuntimeBindingMethod Implements IBindingMethod Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods BindingReflectionExtensions.GetShortDisplayText(IBindingMethod) BindingReflectionExtensions.MethodEquals(IBindingMethod, IBindingMethod) Constructors RuntimeBindingMethod(MethodInfo) public RuntimeBindingMethod(MethodInfo methodInfo) Parameters methodInfo MethodInfo Fields MethodInfo public readonly MethodInfo MethodInfo Field Value MethodInfo Properties Name public string Name { get; } Property Value string Parameters public IEnumerable<IBindingParameter> Parameters { get; } Property Value IEnumerable<IBindingParameter> ReturnType The return type of the method or null for void methods. public IBindingType ReturnType { get; } Property Value IBindingType Type The declaring type of the method. public IBindingType Type { get; } Property Value IBindingType Methods Equals(RuntimeBindingMethod) protected bool Equals(RuntimeBindingMethod other) Parameters other RuntimeBindingMethod Returns bool Equals(object) public override bool Equals(object obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string"
  },
  "api/Reqnroll.Bindings.Reflection.RuntimeBindingParameter.html": {
    "href": "api/Reqnroll.Bindings.Reflection.RuntimeBindingParameter.html",
    "title": "Class RuntimeBindingParameter | Unofficial Reqnroll Documentation",
    "summary": "Class RuntimeBindingParameter Namespace Reqnroll.Bindings.Reflection Assembly Reqnroll.dll public class RuntimeBindingParameter : IBindingParameter Inheritance object RuntimeBindingParameter Implements IBindingParameter Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods BindingReflectionExtensions.ParamEquals(IBindingParameter, IBindingParameter) Constructors RuntimeBindingParameter(ParameterInfo) public RuntimeBindingParameter(ParameterInfo parameterInfo) Parameters parameterInfo ParameterInfo Properties ParameterName public string ParameterName { get; } Property Value string Type public IBindingType Type { get; } Property Value IBindingType Methods Equals(RuntimeBindingParameter) protected bool Equals(RuntimeBindingParameter other) Parameters other RuntimeBindingParameter Returns bool Equals(object) public override bool Equals(object obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string"
  },
  "api/Reqnroll.Bindings.Reflection.RuntimeBindingType.html": {
    "href": "api/Reqnroll.Bindings.Reflection.RuntimeBindingType.html",
    "title": "Class RuntimeBindingType | Unofficial Reqnroll Documentation",
    "summary": "Class RuntimeBindingType Namespace Reqnroll.Bindings.Reflection Assembly Reqnroll.dll public class RuntimeBindingType : IPolymorphicBindingType, IBindingType Inheritance object RuntimeBindingType Implements IPolymorphicBindingType IBindingType Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods BindingReflectionExtensions.TypeEquals(IBindingType, IBindingType) BindingReflectionExtensions.TypeEquals(IBindingType, Type) Constructors RuntimeBindingType(Type) public RuntimeBindingType(Type type) Parameters type Type Fields Type public readonly Type Type Field Value Type Void public static readonly RuntimeBindingType Void Field Value RuntimeBindingType Properties AssemblyName public string AssemblyName { get; } Property Value string FullName public string FullName { get; } Property Value string Name public string Name { get; } Property Value string Methods Equals(RuntimeBindingType) protected bool Equals(RuntimeBindingType other) Parameters other RuntimeBindingType Returns bool Equals(object) public override bool Equals(object obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int IsAssignableTo(IBindingType) public bool IsAssignableTo(IBindingType baseType) Parameters baseType IBindingType Returns bool ToString() public override string ToString() Returns string"
  },
  "api/Reqnroll.Bindings.Reflection.html": {
    "href": "api/Reqnroll.Bindings.Reflection.html",
    "title": "Namespace Reqnroll.Bindings.Reflection | Unofficial Reqnroll Documentation",
    "summary": "Namespace Reqnroll.Bindings.Reflection Classes BindingMethod BindingMethodComparer BindingParameter BindingReflectionExtensions BindingType RuntimeBindingMethod RuntimeBindingParameter RuntimeBindingType Interfaces IBindingMethod IBindingParameter IBindingType IPolymorphicBindingType"
  },
  "api/Reqnroll.Bindings.RegexStepDefinitionBindingBuilder.html": {
    "href": "api/Reqnroll.Bindings.RegexStepDefinitionBindingBuilder.html",
    "title": "Class RegexStepDefinitionBindingBuilder | Unofficial Reqnroll Documentation",
    "summary": "Class RegexStepDefinitionBindingBuilder Namespace Reqnroll.Bindings Assembly Reqnroll.dll public class RegexStepDefinitionBindingBuilder : StepDefinitionBindingBuilderBase, IStepDefinitionBindingBuilder Inheritance object StepDefinitionBindingBuilderBase RegexStepDefinitionBindingBuilder Implements IStepDefinitionBindingBuilder Derived MethodNameStepDefinitionBindingBuilder Inherited Members StepDefinitionBindingBuilderBase._stepDefinitionType StepDefinitionBindingBuilderBase._bindingMethod StepDefinitionBindingBuilderBase._bindingScope StepDefinitionBindingBuilderBase._sourceExpression StepDefinitionBindingBuilderBase.Build() StepDefinitionBindingBuilderBase.BuildSingle() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RegexStepDefinitionBindingBuilder(StepDefinitionType, IBindingMethod, BindingScope, string) public RegexStepDefinitionBindingBuilder(StepDefinitionType stepDefinitionType, IBindingMethod bindingMethod, BindingScope bindingScope, string sourceExpression) Parameters stepDefinitionType StepDefinitionType bindingMethod IBindingMethod bindingScope BindingScope sourceExpression string Methods CreateExpression(out string) protected override IExpression CreateExpression(out string expressionType) Parameters expressionType string Returns IExpression GetRegexSource(out string) protected virtual string GetRegexSource(out string expressionType) Parameters expressionType string Returns string"
  },
  "api/Reqnroll.Bindings.StepArgumentTransformationBinding.html": {
    "href": "api/Reqnroll.Bindings.StepArgumentTransformationBinding.html",
    "title": "Class StepArgumentTransformationBinding | Unofficial Reqnroll Documentation",
    "summary": "Class StepArgumentTransformationBinding Namespace Reqnroll.Bindings Assembly Reqnroll.dll public class StepArgumentTransformationBinding : MethodBinding, IStepArgumentTransformationBinding, IBinding Inheritance object MethodBinding StepArgumentTransformationBinding Implements IStepArgumentTransformationBinding IBinding Inherited Members MethodBinding.Method MethodBinding.Equals(MethodBinding) MethodBinding.Equals(object) MethodBinding.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors StepArgumentTransformationBinding(string, IBindingMethod, string, int) public StepArgumentTransformationBinding(string regexString, IBindingMethod bindingMethod, string name = null, int order = 10000) Parameters regexString string bindingMethod IBindingMethod name string order int StepArgumentTransformationBinding(Regex, IBindingMethod, string, int) public StepArgumentTransformationBinding(Regex regex, IBindingMethod bindingMethod, string name = null, int order = 10000) Parameters regex Regex bindingMethod IBindingMethod name string order int Properties Name The optional name of the custom parameter. The name can be used in cucumber expressions. public string Name { get; } Property Value string Order The deterministic order for step argument transformation public int Order { get; } Property Value int Regex The regular expression matches the step argument. Optional, if null, the transformation receives the entire argument. public Regex Regex { get; } Property Value Regex"
  },
  "api/Reqnroll.Bindings.StepArgumentTypeConverter.html": {
    "href": "api/Reqnroll.Bindings.StepArgumentTypeConverter.html",
    "title": "Class StepArgumentTypeConverter | Unofficial Reqnroll Documentation",
    "summary": "Class StepArgumentTypeConverter Namespace Reqnroll.Bindings Assembly Reqnroll.dll public class StepArgumentTypeConverter : IStepArgumentTypeConverter Inheritance object StepArgumentTypeConverter Implements IStepArgumentTypeConverter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors StepArgumentTypeConverter(ITestTracer, IBindingRegistry, IContextManager, IAsyncBindingInvoker) public StepArgumentTypeConverter(ITestTracer testTracer, IBindingRegistry bindingRegistry, IContextManager contextManager, IAsyncBindingInvoker bindingInvoker) Parameters testTracer ITestTracer bindingRegistry IBindingRegistry contextManager IContextManager bindingInvoker IAsyncBindingInvoker Methods CanConvert(object, IBindingType, CultureInfo) public bool CanConvert(object value, IBindingType typeToConvertTo, CultureInfo cultureInfo) Parameters value object typeToConvertTo IBindingType cultureInfo CultureInfo Returns bool CanConvertSimple(IBindingType, object, CultureInfo) public static bool CanConvertSimple(IBindingType typeToConvertTo, object value, CultureInfo cultureInfo) Parameters typeToConvertTo IBindingType value object cultureInfo CultureInfo Returns bool ConvertAsync(object, IBindingType, CultureInfo) public Task<object> ConvertAsync(object value, IBindingType typeToConvertTo, CultureInfo cultureInfo) Parameters value object typeToConvertTo IBindingType cultureInfo CultureInfo Returns Task<object> ConvertToAnEnum(Type, string) public static object ConvertToAnEnum(Type enumType, string value) Parameters enumType Type value string Returns object GetMatchingStepTransformation(object, IBindingType, bool) protected virtual IStepArgumentTransformationBinding GetMatchingStepTransformation(object value, IBindingType typeToConvertTo, bool traceWarning) Parameters value object typeToConvertTo IBindingType traceWarning bool Returns IStepArgumentTransformationBinding IsDataTableType(IBindingType) protected virtual bool IsDataTableType(IBindingType bindingType) Parameters bindingType IBindingType Returns bool"
  },
  "api/Reqnroll.Bindings.StepContext.html": {
    "href": "api/Reqnroll.Bindings.StepContext.html",
    "title": "Class StepContext | Unofficial Reqnroll Documentation",
    "summary": "Class StepContext Namespace Reqnroll.Bindings Assembly Reqnroll.dll public class StepContext Inheritance object StepContext Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors StepContext(FeatureInfo, ScenarioInfo) public StepContext(FeatureInfo featureInfo, ScenarioInfo scenarioInfo) Parameters featureInfo FeatureInfo scenarioInfo ScenarioInfo StepContext(string, string, IEnumerable<string>, CultureInfo) public StepContext(string featureTitle, string scenarioTitle, IEnumerable<string> tags, CultureInfo language) Parameters featureTitle string scenarioTitle string tags IEnumerable<string> language CultureInfo Properties FeatureTitle public string FeatureTitle { get; } Property Value string Language public CultureInfo Language { get; } Property Value CultureInfo ScenarioTitle public string ScenarioTitle { get; } Property Value string Tags public IEnumerable<string> Tags { get; } Property Value IEnumerable<string>"
  },
  "api/Reqnroll.Bindings.StepDefinitionBinding.html": {
    "href": "api/Reqnroll.Bindings.StepDefinitionBinding.html",
    "title": "Class StepDefinitionBinding | Unofficial Reqnroll Documentation",
    "summary": "Class StepDefinitionBinding Namespace Reqnroll.Bindings Assembly Reqnroll.dll public class StepDefinitionBinding : MethodBinding, IStepDefinitionBinding, IScopedBinding, IBinding Inheritance object MethodBinding StepDefinitionBinding Implements IStepDefinitionBinding IScopedBinding IBinding Inherited Members MethodBinding.Method MethodBinding.Equals(MethodBinding) MethodBinding.Equals(object) MethodBinding.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors StepDefinitionBinding(StepDefinitionType, IBindingMethod, BindingScope, string, string, IExpression) public StepDefinitionBinding(StepDefinitionType stepDefinitionType, IBindingMethod bindingMethod, BindingScope bindingScope, string expressionType, string sourceExpression, IExpression expression) Parameters stepDefinitionType StepDefinitionType bindingMethod IBindingMethod bindingScope BindingScope expressionType string sourceExpression string expression IExpression Properties BindingScope public BindingScope BindingScope { get; } Property Value BindingScope ErrorMessage public string ErrorMessage { get; } Property Value string Expression public IExpression Expression { get; } Property Value IExpression ExpressionType public string ExpressionType { get; } Property Value string IsScoped public bool IsScoped { get; } Property Value bool IsValid public bool IsValid { get; } Property Value bool Regex public Regex Regex { get; } Property Value Regex SourceExpression public string SourceExpression { get; } Property Value string StepDefinitionType public StepDefinitionType StepDefinitionType { get; } Property Value StepDefinitionType Methods CreateInvalid(StepDefinitionType, IBindingMethod, BindingScope, string, string, string) public static StepDefinitionBinding CreateInvalid(StepDefinitionType stepDefinitionType, IBindingMethod bindingMethod, BindingScope bindingScope, string expressionType, string sourceExpression, string errorMessage) Parameters stepDefinitionType StepDefinitionType bindingMethod IBindingMethod bindingScope BindingScope expressionType string sourceExpression string errorMessage string Returns StepDefinitionBinding"
  },
  "api/Reqnroll.Bindings.StepDefinitionBindingBuilderBase.html": {
    "href": "api/Reqnroll.Bindings.StepDefinitionBindingBuilderBase.html",
    "title": "Class StepDefinitionBindingBuilderBase | Unofficial Reqnroll Documentation",
    "summary": "Class StepDefinitionBindingBuilderBase Namespace Reqnroll.Bindings Assembly Reqnroll.dll public abstract class StepDefinitionBindingBuilderBase : IStepDefinitionBindingBuilder Inheritance object StepDefinitionBindingBuilderBase Implements IStepDefinitionBindingBuilder Derived CucumberExpressionStepDefinitionBindingBuilder RegexStepDefinitionBindingBuilder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors StepDefinitionBindingBuilderBase(StepDefinitionType, IBindingMethod, BindingScope, string) protected StepDefinitionBindingBuilderBase(StepDefinitionType stepDefinitionType, IBindingMethod bindingMethod, BindingScope bindingScope, string sourceExpression) Parameters stepDefinitionType StepDefinitionType bindingMethod IBindingMethod bindingScope BindingScope sourceExpression string Fields _bindingMethod protected IBindingMethod _bindingMethod Field Value IBindingMethod _bindingScope protected BindingScope _bindingScope Field Value BindingScope _sourceExpression protected string _sourceExpression Field Value string _stepDefinitionType protected StepDefinitionType _stepDefinitionType Field Value StepDefinitionType Methods Build() public virtual IEnumerable<IStepDefinitionBinding> Build() Returns IEnumerable<IStepDefinitionBinding> BuildSingle() public virtual IStepDefinitionBinding BuildSingle() Returns IStepDefinitionBinding CreateExpression(out string) protected abstract IExpression CreateExpression(out string expressionType) Parameters expressionType string Returns IExpression"
  },
  "api/Reqnroll.Bindings.StepDefinitionExpressionTypes.html": {
    "href": "api/Reqnroll.Bindings.StepDefinitionExpressionTypes.html",
    "title": "Class StepDefinitionExpressionTypes | Unofficial Reqnroll Documentation",
    "summary": "Class StepDefinitionExpressionTypes Namespace Reqnroll.Bindings Assembly Reqnroll.dll public static class StepDefinitionExpressionTypes Inheritance object StepDefinitionExpressionTypes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields CucumberExpression public const string CucumberExpression = \"CucumberExpression\" Field Value string MethodName public const string MethodName = \"MethodName\" Field Value string RegularExpression public const string RegularExpression = \"RegularExpression\" Field Value string Unknown public const string Unknown = \"Unknown\" Field Value string"
  },
  "api/Reqnroll.Bindings.StepDefinitionKeyword.html": {
    "href": "api/Reqnroll.Bindings.StepDefinitionKeyword.html",
    "title": "Enum StepDefinitionKeyword | Unofficial Reqnroll Documentation",
    "summary": "Enum StepDefinitionKeyword Namespace Reqnroll.Bindings Assembly Reqnroll.dll public enum StepDefinitionKeyword Fields And = 4 But = 5 Given = 1 Then = 3 When = 2"
  },
  "api/Reqnroll.Bindings.StepDefinitionRegexCalculator.html": {
    "href": "api/Reqnroll.Bindings.StepDefinitionRegexCalculator.html",
    "title": "Class StepDefinitionRegexCalculator | Unofficial Reqnroll Documentation",
    "summary": "Class StepDefinitionRegexCalculator Namespace Reqnroll.Bindings Assembly Reqnroll.dll public class StepDefinitionRegexCalculator : IStepDefinitionRegexCalculator Inheritance object StepDefinitionRegexCalculator Implements IStepDefinitionRegexCalculator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors StepDefinitionRegexCalculator(ReqnrollConfiguration) public StepDefinitionRegexCalculator(ReqnrollConfiguration reqnrollConfiguration) Parameters reqnrollConfiguration ReqnrollConfiguration Methods CalculateRegexFromMethod(StepDefinitionType, IBindingMethod) public string CalculateRegexFromMethod(StepDefinitionType stepDefinitionType, IBindingMethod bindingMethod) Parameters stepDefinitionType StepDefinitionType bindingMethod IBindingMethod Returns string"
  },
  "api/Reqnroll.Bindings.StepDefinitionType.html": {
    "href": "api/Reqnroll.Bindings.StepDefinitionType.html",
    "title": "Enum StepDefinitionType | Unofficial Reqnroll Documentation",
    "summary": "Enum StepDefinitionType Namespace Reqnroll.Bindings Assembly Reqnroll.dll public enum StepDefinitionType Fields Given = 1 Then = 3 When = 2"
  },
  "api/Reqnroll.Bindings.StepInstance.html": {
    "href": "api/Reqnroll.Bindings.StepInstance.html",
    "title": "Class StepInstance | Unofficial Reqnroll Documentation",
    "summary": "Class StepInstance Namespace Reqnroll.Bindings Assembly Reqnroll.dll public class StepInstance Inheritance object StepInstance Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors StepInstance(StepDefinitionType, StepDefinitionKeyword, string, string, StepContext) public StepInstance(StepDefinitionType stepDefinitionType, StepDefinitionKeyword stepDefinitionKeyword, string keywordWithTrailingSpaces, string text, StepContext stepContext) Parameters stepDefinitionType StepDefinitionType stepDefinitionKeyword StepDefinitionKeyword keywordWithTrailingSpaces string text string stepContext StepContext StepInstance(StepDefinitionType, StepDefinitionKeyword, string, string, string, Table, StepContext) public StepInstance(StepDefinitionType type, StepDefinitionKeyword stepDefinitionKeyword, string keyword, string text, string multilineTextArgument, Table tableArgument, StepContext stepContext) Parameters type StepDefinitionType stepDefinitionKeyword StepDefinitionKeyword keyword string text string multilineTextArgument string tableArgument Table stepContext StepContext Properties Keyword Keyword (including trailing spaces) used in the original specs or null if unknown. public string Keyword { get; } Property Value string MultilineTextArgument public string MultilineTextArgument { get; set; } Property Value string StepContext public StepContext StepContext { get; } Property Value StepContext StepDefinitionKeyword public StepDefinitionKeyword StepDefinitionKeyword { get; } Property Value StepDefinitionKeyword StepDefinitionType public StepDefinitionType StepDefinitionType { get; } Property Value StepDefinitionType TableArgument public Table TableArgument { get; set; } Property Value Table Text public string Text { get; } Property Value string"
  },
  "api/Reqnroll.Bindings.html": {
    "href": "api/Reqnroll.Bindings.html",
    "title": "Namespace Reqnroll.Bindings | Unofficial Reqnroll Documentation",
    "summary": "Namespace Reqnroll.Bindings Classes BindingDelegateInvoker BindingError BindingFactory BindingInvoker BindingMatch BindingObsoletion BindingRegistry BindingScope DryRunBindingInvoker DurationHolder ExecutionContextHolder HookBinding InvalidStepDefinitionBindingBuilder MethodBinding MethodNameStepDefinitionBindingBuilder RegexStepDefinitionBindingBuilder StepArgumentTransformationBinding StepArgumentTypeConverter StepContext StepDefinitionBinding StepDefinitionBindingBuilderBase StepDefinitionExpressionTypes StepDefinitionRegexCalculator StepInstance Interfaces IAsyncBindingInvoker IBinding IBindingDelegateInvoker IBindingFactory IBindingInvoker IBindingRegistry IHookBinding IScopedBinding IStepArgumentTransformationBinding Represents a custom step definition parameter binding IStepArgumentTypeConverter IStepDefinitionBinding IStepDefinitionBindingBuilder IStepDefinitionRegexCalculator Enums BindingErrorType HookType StepDefinitionKeyword StepDefinitionType Delegates BindingInvoker.ExtendedAction<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> BindingInvoker.ExtendedAction<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> BindingInvoker.ExtendedAction<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> BindingInvoker.ExtendedAction<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> BindingInvoker.ExtendedAction<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> BindingInvoker.ExtendedAction<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> BindingInvoker.ExtendedAction<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> BindingInvoker.ExtendedAction<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17> BindingInvoker.ExtendedAction<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18> BindingInvoker.ExtendedAction<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19> BindingInvoker.ExtendedAction<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20> BindingInvoker.ExtendedAction<T1, T2, T3, T4, T5> BindingInvoker.ExtendedAction<T1, T2, T3, T4, T5, T6> BindingInvoker.ExtendedAction<T1, T2, T3, T4, T5, T6, T7> BindingInvoker.ExtendedAction<T1, T2, T3, T4, T5, T6, T7, T8> BindingInvoker.ExtendedAction<T1, T2, T3, T4, T5, T6, T7, T8, T9> BindingInvoker.ExtendedFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult> BindingInvoker.ExtendedFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult> BindingInvoker.ExtendedFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult> BindingInvoker.ExtendedFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult> BindingInvoker.ExtendedFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult> BindingInvoker.ExtendedFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult> BindingInvoker.ExtendedFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult> BindingInvoker.ExtendedFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult> BindingInvoker.ExtendedFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, TResult> BindingInvoker.ExtendedFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, TResult> BindingInvoker.ExtendedFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, TResult> BindingInvoker.ExtendedFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, TResult> BindingInvoker.ExtendedFunc<T1, T2, T3, T4, T5, TResult> BindingInvoker.ExtendedFunc<T1, T2, T3, T4, T5, T6, TResult> BindingInvoker.ExtendedFunc<T1, T2, T3, T4, T5, T6, T7, TResult> BindingInvoker.ExtendedFunc<T1, T2, T3, T4, T5, T6, T7, T8, TResult>"
  },
  "api/Reqnroll.BoDi.IContainedInstance.html": {
    "href": "api/Reqnroll.BoDi.IContainedInstance.html",
    "title": "Interface IContainedInstance | Unofficial Reqnroll Documentation",
    "summary": "Interface IContainedInstance Namespace Reqnroll.BoDi Assembly Reqnroll.dll public interface IContainedInstance Properties Container IObjectContainer Container { get; } Property Value IObjectContainer"
  },
  "api/Reqnroll.BoDi.IObjectContainer.html": {
    "href": "api/Reqnroll.BoDi.IObjectContainer.html",
    "title": "Interface IObjectContainer | Unofficial Reqnroll Documentation",
    "summary": "Interface IObjectContainer Namespace Reqnroll.BoDi Assembly Reqnroll.dll public interface IObjectContainer : IDisposable Inherited Members IDisposable.Dispose() Methods IsRegistered(Type, string) Determines whether the interface or type is registered in the container, optionally with the specified name. bool IsRegistered(Type type, string name = null) Parameters type Type The interface or type. name string The name. Returns bool true if the interface or type is registered; otherwise false. IsRegistered<T>(string) Determines whether the interface or type is registered in the container, optionally with the specified name. bool IsRegistered<T>(string name = null) Parameters name string The name or null. Returns bool true if the interface or type is registered; otherwise false. Type Parameters T The interface or type. RegisterFactoryAs<TInterface>(Func<IObjectContainer, TInterface>, string) Registers an instance produced by factoryDelegate. The delegate will be called only once and the instance it returned will be returned in each resolution. IStrategyRegistration RegisterFactoryAs<TInterface>(Func<IObjectContainer, TInterface> factoryDelegate, string name = null) Parameters factoryDelegate Func<IObjectContainer, TInterface> The function to run to obtain the instance. name string A name to resolve named instance, otherwise null. Returns IStrategyRegistration Type Parameters TInterface Interface to register as. RegisterFactoryAs<TInterface>(Func<TInterface>, string) Registers an instance produced by factoryDelegate. The delegate will be called only once and the instance it returned will be returned in each resolution. IStrategyRegistration RegisterFactoryAs<TInterface>(Func<TInterface> factoryDelegate, string name = null) Parameters factoryDelegate Func<TInterface> The function to run to obtain the instance. name string A name to resolve named instance, otherwise null. Returns IStrategyRegistration Type Parameters TInterface Interface to register as. RegisterInstanceAs(object, Type, string, bool) Registers an instance void RegisterInstanceAs(object instance, Type interfaceType, string name = null, bool dispose = false) Parameters instance object The instance implements the interface. interfaceType Type Interface will be resolved name string A name to register named instance, otherwise null. dispose bool Whether the instance should be disposed on container dispose, otherwise false. Remarks Previous registrations can be overridden before the first resolution for the interfaceType. The instance will be registered in the object pool, so if a Resolve<T>() (for another interface) would require an instance of the dynamic type of the instance, the instance will be returned. Exceptions ArgumentNullException If instance is null. ObjectContainerException If there was already a resolve for the interfaceType. RegisterInstanceAs<TInterface>(TInterface, string, bool) Registers an instance void RegisterInstanceAs<TInterface>(TInterface instance, string name = null, bool dispose = false) where TInterface : class Parameters instance TInterface The instance implements the interface. name string A name to register named instance, otherwise null. dispose bool Whether the instance should be disposed on container dispose, otherwise false. Type Parameters TInterface Interface will be resolved Remarks Previous registrations can be overridden before the first resolution for the TInterface. The instance will be registered in the object pool, so if a Resolve<T>() (for another interface) would require an instance of the dynamic type of the instance, the instance will be returned. Exceptions ArgumentNullException If instance is null. ObjectContainerException If there was already a resolve for the TInterface. RegisterTypeAs<TType, TInterface>(string) Registers a type as the desired implementation type of an interface. IStrategyRegistration RegisterTypeAs<TType, TInterface>(string name = null) where TType : class, TInterface Parameters name string A name to register named instance, otherwise null. Returns IStrategyRegistration An object which allows to change resolving strategy. Type Parameters TType Implementation type TInterface Interface will be resolved Remarks Previous registrations can be overridden before the first resolution for the TInterface. Exceptions ObjectContainerException If there was already a resolve for the TInterface. Resolve(Type, string) Resolves an implementation object for an interface or type. object Resolve(Type typeToResolve, string name = null) Parameters typeToResolve Type The interface or type. name string A name to resolve named instance, otherwise null. Returns object An object implementing typeToResolve. Remarks The container pools the objects, so if the interface is resolved twice or the same type is registered for multiple interfaces, a single instance is created and returned. ResolveAll<T>() Resolves all implementations of an interface or type. IEnumerable<T> ResolveAll<T>() where T : class Returns IEnumerable<T> An object implementing T. Type Parameters T The interface or type. Resolve<T>() Resolves an implementation object for an interface or type. T Resolve<T>() Returns T An object implementing T. Type Parameters T The interface or type. Remarks The container pools the objects, so if the interface is resolved twice or the same type is registered for multiple interfaces, a single instance is created and returned. Resolve<T>(string) Resolves an implementation object for an interface or type. T Resolve<T>(string name) Parameters name string A name to resolve named instance, otherwise null. Returns T An object implementing T. Type Parameters T The interface or type. Remarks The container pools the objects, so if the interface is resolved twice or the same type is registered for multiple interfaces, a single instance is created and returned. Events ObjectCreated Fired when a new object is created directly by the container. It is not invoked for resolving instance and factory registrations. event Action<object> ObjectCreated Event Type Action<object>"
  },
  "api/Reqnroll.BoDi.IStrategyRegistration.html": {
    "href": "api/Reqnroll.BoDi.IStrategyRegistration.html",
    "title": "Interface IStrategyRegistration | Unofficial Reqnroll Documentation",
    "summary": "Interface IStrategyRegistration Namespace Reqnroll.BoDi Assembly Reqnroll.dll public interface IStrategyRegistration Methods InstancePerContext() Changes resolving strategy to a single instance per object container. This strategy is a default behaviour. IStrategyRegistration InstancePerContext() Returns IStrategyRegistration InstancePerDependency() Changes resolving strategy to a new instance per each dependency. IStrategyRegistration InstancePerDependency() Returns IStrategyRegistration"
  },
  "api/Reqnroll.BoDi.ObjectContainer.html": {
    "href": "api/Reqnroll.BoDi.ObjectContainer.html",
    "title": "Class ObjectContainer | Unofficial Reqnroll Documentation",
    "summary": "Class ObjectContainer Namespace Reqnroll.BoDi Assembly Reqnroll.dll public class ObjectContainer : IObjectContainer, IDisposable Inheritance object ObjectContainer Implements IObjectContainer IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ObjectContainer(IObjectContainer) public ObjectContainer(IObjectContainer baseContainer = null) Parameters baseContainer IObjectContainer Properties BaseContainer public IObjectContainer BaseContainer { get; } Property Value IObjectContainer ConcurrentObjectResolutionTimeout Sets the timeout for thread-safe object resolution. By default, it uses the value of DefaultConcurrentObjectResolutionTimeout that is initialized to 1 second. Setting it to Zero disables thread-safe resolution. public TimeSpan ConcurrentObjectResolutionTimeout { get; set; } Property Value TimeSpan DefaultConcurrentObjectResolutionTimeout public static TimeSpan DefaultConcurrentObjectResolutionTimeout { get; set; } Property Value TimeSpan Methods Dispose() public void Dispose() IsRegistered(Type, string) Determines whether the interface or type is registered in the container, optionally with the specified name. public bool IsRegistered(Type type, string name = null) Parameters type Type The interface or type. name string The name. Returns bool true if the interface or type is registered; otherwise false. IsRegistered<T>(string) Determines whether the interface or type is registered in the container, optionally with the specified name. public bool IsRegistered<T>(string name = null) Parameters name string The name or null. Returns bool true if the interface or type is registered; otherwise false. Type Parameters T The interface or type. OnObjectCreated(object) protected virtual void OnObjectCreated(object obj) Parameters obj object RegisterFactoryAs(Delegate, Type, string) public IStrategyRegistration RegisterFactoryAs(Delegate factoryDelegate, Type interfaceType, string name = null) Parameters factoryDelegate Delegate interfaceType Type name string Returns IStrategyRegistration RegisterFactoryAs<TInterface>(Delegate, string) public void RegisterFactoryAs<TInterface>(Delegate factoryDelegate, string name = null) Parameters factoryDelegate Delegate name string Type Parameters TInterface RegisterFactoryAs<TInterface>(Func<IObjectContainer, TInterface>, string) Registers an instance produced by factoryDelegate. The delegate will be called only once and the instance it returned will be returned in each resolution. public IStrategyRegistration RegisterFactoryAs<TInterface>(Func<IObjectContainer, TInterface> factoryDelegate, string name = null) Parameters factoryDelegate Func<IObjectContainer, TInterface> The function to run to obtain the instance. name string A name to resolve named instance, otherwise null. Returns IStrategyRegistration Type Parameters TInterface Interface to register as. RegisterFactoryAs<TInterface>(Func<TInterface>, string) Registers an instance produced by factoryDelegate. The delegate will be called only once and the instance it returned will be returned in each resolution. public IStrategyRegistration RegisterFactoryAs<TInterface>(Func<TInterface> factoryDelegate, string name = null) Parameters factoryDelegate Func<TInterface> The function to run to obtain the instance. name string A name to resolve named instance, otherwise null. Returns IStrategyRegistration Type Parameters TInterface Interface to register as. RegisterInstanceAs(object, Type, string, bool) Registers an instance public void RegisterInstanceAs(object instance, Type interfaceType, string name = null, bool dispose = false) Parameters instance object The instance implements the interface. interfaceType Type Interface will be resolved name string A name to register named instance, otherwise null. dispose bool Whether the instance should be disposed on container dispose, otherwise false. Remarks Previous registrations can be overridden before the first resolution for the interfaceType. The instance will be registered in the object pool, so if a Resolve<T>() (for another interface) would require an instance of the dynamic type of the instance, the instance will be returned. Exceptions ArgumentNullException If instance is null. ObjectContainerException If there was already a resolve for the interfaceType. RegisterInstanceAs<TInterface>(TInterface, string, bool) Registers an instance public void RegisterInstanceAs<TInterface>(TInterface instance, string name = null, bool dispose = false) where TInterface : class Parameters instance TInterface The instance implements the interface. name string A name to register named instance, otherwise null. dispose bool Whether the instance should be disposed on container dispose, otherwise false. Type Parameters TInterface Interface will be resolved Remarks Previous registrations can be overridden before the first resolution for the TInterface. The instance will be registered in the object pool, so if a Resolve<T>() (for another interface) would require an instance of the dynamic type of the instance, the instance will be returned. Exceptions ArgumentNullException If instance is null. ObjectContainerException If there was already a resolve for the TInterface. RegisterTypeAs(Type, Type, string) public IStrategyRegistration RegisterTypeAs(Type implementationType, Type interfaceType, string name = null) Parameters implementationType Type interfaceType Type name string Returns IStrategyRegistration RegisterTypeAs<TInterface>(Type, string) public IStrategyRegistration RegisterTypeAs<TInterface>(Type implementationType, string name = null) where TInterface : class Parameters implementationType Type name string Returns IStrategyRegistration Type Parameters TInterface RegisterTypeAs<TType, TInterface>(string) Registers a type as the desired implementation type of an interface. public IStrategyRegistration RegisterTypeAs<TType, TInterface>(string name = null) where TType : class, TInterface Parameters name string A name to register named instance, otherwise null. Returns IStrategyRegistration An object which allows to change resolving strategy. Type Parameters TType Implementation type TInterface Interface will be resolved Remarks Previous registrations can be overridden before the first resolution for the TInterface. Exceptions ObjectContainerException If there was already a resolve for the TInterface. Resolve(Type, string) Resolves an implementation object for an interface or type. public object Resolve(Type typeToResolve, string name = null) Parameters typeToResolve Type The interface or type. name string A name to resolve named instance, otherwise null. Returns object An object implementing typeToResolve. Remarks The container pools the objects, so if the interface is resolved twice or the same type is registered for multiple interfaces, a single instance is created and returned. ResolveAll<T>() Resolves all implementations of an interface or type. public IEnumerable<T> ResolveAll<T>() where T : class Returns IEnumerable<T> An object implementing T. Type Parameters T The interface or type. Resolve<T>() Resolves an implementation object for an interface or type. public T Resolve<T>() Returns T An object implementing T. Type Parameters T The interface or type. Remarks The container pools the objects, so if the interface is resolved twice or the same type is registered for multiple interfaces, a single instance is created and returned. Resolve<T>(string) Resolves an implementation object for an interface or type. public T Resolve<T>(string name) Parameters name string A name to resolve named instance, otherwise null. Returns T An object implementing T. Type Parameters T The interface or type. Remarks The container pools the objects, so if the interface is resolved twice or the same type is registered for multiple interfaces, a single instance is created and returned. ToString() public override string ToString() Returns string Events ObjectCreated Fired when a new object is created directly by the container. It is not invoked for resolving instance and factory registrations. public event Action<object> ObjectCreated Event Type Action<object>"
  },
  "api/Reqnroll.BoDi.ObjectContainerException.html": {
    "href": "api/Reqnroll.BoDi.ObjectContainerException.html",
    "title": "Class ObjectContainerException | Unofficial Reqnroll Documentation",
    "summary": "Class ObjectContainerException Namespace Reqnroll.BoDi Assembly Reqnroll.dll [Serializable] public class ObjectContainerException : Exception, ISerializable Inheritance object Exception ObjectContainerException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ObjectContainerException(SerializationInfo, StreamingContext) protected ObjectContainerException(SerializationInfo info, StreamingContext context) Parameters info SerializationInfo context StreamingContext ObjectContainerException(string, Type[]) public ObjectContainerException(string message, Type[] resolutionPath) Parameters message string resolutionPath Type[]"
  },
  "api/Reqnroll.BoDi.html": {
    "href": "api/Reqnroll.BoDi.html",
    "title": "Namespace Reqnroll.BoDi | Unofficial Reqnroll Documentation",
    "summary": "Namespace Reqnroll.BoDi Classes ObjectContainer ObjectContainerException Interfaces IContainedInstance IObjectContainer IStrategyRegistration"
  },
  "api/Reqnroll.ColumnCouldNotBeBoundException.html": {
    "href": "api/Reqnroll.ColumnCouldNotBeBoundException.html",
    "title": "Class ColumnCouldNotBeBoundException | Unofficial Reqnroll Documentation",
    "summary": "Class ColumnCouldNotBeBoundException Namespace Reqnroll Assembly Reqnroll.dll [Serializable] public class ColumnCouldNotBeBoundException : Exception, ISerializable Inheritance object Exception ColumnCouldNotBeBoundException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ColumnCouldNotBeBoundException() public ColumnCouldNotBeBoundException() ColumnCouldNotBeBoundException(IList<string>) public ColumnCouldNotBeBoundException(IList<string> columns) Parameters columns IList<string> ColumnCouldNotBeBoundException(SerializationInfo, StreamingContext) protected ColumnCouldNotBeBoundException(SerializationInfo info, StreamingContext context) Parameters info SerializationInfo context StreamingContext ColumnCouldNotBeBoundException(string, IList<string>) public ColumnCouldNotBeBoundException(string message, IList<string> columns) Parameters message string columns IList<string> ColumnCouldNotBeBoundException(string, Exception, IList<string>) public ColumnCouldNotBeBoundException(string message, Exception innerException, IList<string> columns) Parameters message string innerException Exception columns IList<string> Properties Columns public IList<string> Columns { get; } Property Value IList<string>"
  },
  "api/Reqnroll.CommonModels.ExceptionFailure-1.html": {
    "href": "api/Reqnroll.CommonModels.ExceptionFailure-1.html",
    "title": "Class ExceptionFailure<T> | Unofficial Reqnroll Documentation",
    "summary": "Class ExceptionFailure<T> Namespace Reqnroll.CommonModels Assembly Reqnroll.dll public class ExceptionFailure<T> : ExceptionFailure, IFailure<T>, IFailure, IResult<T>, IResult Type Parameters T Inheritance object ExceptionFailure ExceptionFailure<T> Implements IFailure<T> IFailure IResult<T> IResult Inherited Members ExceptionFailure.Exception ExceptionFailure.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ExceptionFailure(Exception) public ExceptionFailure(Exception exception) Parameters exception Exception"
  },
  "api/Reqnroll.CommonModels.ExceptionFailure.html": {
    "href": "api/Reqnroll.CommonModels.ExceptionFailure.html",
    "title": "Class ExceptionFailure | Unofficial Reqnroll Documentation",
    "summary": "Class ExceptionFailure Namespace Reqnroll.CommonModels Assembly Reqnroll.dll public class ExceptionFailure : IFailure, IResult Inheritance object ExceptionFailure Implements IFailure IResult Derived ExceptionFailure<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ExceptionFailure(Exception) public ExceptionFailure(Exception exception) Parameters exception Exception Properties Exception public Exception Exception { get; } Property Value Exception Methods ToString() public override string ToString() Returns string"
  },
  "api/Reqnroll.CommonModels.Failure-1.html": {
    "href": "api/Reqnroll.CommonModels.Failure-1.html",
    "title": "Class Failure<T> | Unofficial Reqnroll Documentation",
    "summary": "Class Failure<T> Namespace Reqnroll.CommonModels Assembly Reqnroll.dll public class Failure<T> : Failure, IFailure<T>, IFailure, IResult<T>, IResult Type Parameters T Inheritance object Failure Failure<T> Implements IFailure<T> IFailure IResult<T> IResult Inherited Members Failure.Description Failure.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors Failure(string) public Failure(string description) Parameters description string"
  },
  "api/Reqnroll.CommonModels.Failure.html": {
    "href": "api/Reqnroll.CommonModels.Failure.html",
    "title": "Class Failure | Unofficial Reqnroll Documentation",
    "summary": "Class Failure Namespace Reqnroll.CommonModels Assembly Reqnroll.dll public class Failure : IFailure, IResult Inheritance object Failure Implements IFailure IResult Derived Failure<T> WrappedFailure Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors Failure(string) public Failure(string description) Parameters description string Properties Description public string Description { get; } Property Value string Methods ToString() public override string ToString() Returns string"
  },
  "api/Reqnroll.CommonModels.IFailure-1.html": {
    "href": "api/Reqnroll.CommonModels.IFailure-1.html",
    "title": "Interface IFailure<T> | Unofficial Reqnroll Documentation",
    "summary": "Interface IFailure<T> Namespace Reqnroll.CommonModels Assembly Reqnroll.dll public interface IFailure<out T> : IFailure, IResult<T>, IResult Type Parameters T"
  },
  "api/Reqnroll.CommonModels.IFailure.html": {
    "href": "api/Reqnroll.CommonModels.IFailure.html",
    "title": "Interface IFailure | Unofficial Reqnroll Documentation",
    "summary": "Interface IFailure Namespace Reqnroll.CommonModels Assembly Reqnroll.dll public interface IFailure : IResult"
  },
  "api/Reqnroll.CommonModels.IResult-1.html": {
    "href": "api/Reqnroll.CommonModels.IResult-1.html",
    "title": "Interface IResult<T> | Unofficial Reqnroll Documentation",
    "summary": "Interface IResult<T> Namespace Reqnroll.CommonModels Assembly Reqnroll.dll public interface IResult<out T> : IResult Type Parameters T"
  },
  "api/Reqnroll.CommonModels.IResult.html": {
    "href": "api/Reqnroll.CommonModels.IResult.html",
    "title": "Interface IResult | Unofficial Reqnroll Documentation",
    "summary": "Interface IResult Namespace Reqnroll.CommonModels Assembly Reqnroll.dll public interface IResult"
  },
  "api/Reqnroll.CommonModels.ISuccess-1.html": {
    "href": "api/Reqnroll.CommonModels.ISuccess-1.html",
    "title": "Interface ISuccess<T> | Unofficial Reqnroll Documentation",
    "summary": "Interface ISuccess<T> Namespace Reqnroll.CommonModels Assembly Reqnroll.dll public interface ISuccess<out T> : ISuccess, IResult<T>, IResult Type Parameters T Properties Result T Result { get; } Property Value T"
  },
  "api/Reqnroll.CommonModels.ISuccess.html": {
    "href": "api/Reqnroll.CommonModels.ISuccess.html",
    "title": "Interface ISuccess | Unofficial Reqnroll Documentation",
    "summary": "Interface ISuccess Namespace Reqnroll.CommonModels Assembly Reqnroll.dll public interface ISuccess : IResult"
  },
  "api/Reqnroll.CommonModels.Result-1.html": {
    "href": "api/Reqnroll.CommonModels.Result-1.html",
    "title": "Class Result<T> | Unofficial Reqnroll Documentation",
    "summary": "Class Result<T> Namespace Reqnroll.CommonModels Assembly Reqnroll.dll public static class Result<T> Type Parameters T Inheritance object Result<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Failure(Exception) public static IResult<T> Failure(Exception exception) Parameters exception Exception Returns IResult<T> Failure(string) public static IResult<T> Failure(string description) Parameters description string Returns IResult<T> Failure(string, IFailure) public static IResult<T> Failure(string description, IFailure innerFailure) Parameters description string innerFailure IFailure Returns IResult<T> Success(T) public static IResult<T> Success(T value) Parameters value T Returns IResult<T>"
  },
  "api/Reqnroll.CommonModels.Result.html": {
    "href": "api/Reqnroll.CommonModels.Result.html",
    "title": "Class Result | Unofficial Reqnroll Documentation",
    "summary": "Class Result Namespace Reqnroll.CommonModels Assembly Reqnroll.dll public static class Result Inheritance object Result Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Failure(Exception) public static IResult Failure(Exception exception) Parameters exception Exception Returns IResult Failure(string) public static IResult Failure(string description) Parameters description string Returns IResult Failure(string, IFailure) public static IResult Failure(string description, IFailure innerFailure) Parameters description string innerFailure IFailure Returns IResult Success() public static IResult Success() Returns IResult Success<T>(T) public static IResult<T> Success<T>(T result) Parameters result T Returns IResult<T> Type Parameters T"
  },
  "api/Reqnroll.CommonModels.Success-1.html": {
    "href": "api/Reqnroll.CommonModels.Success-1.html",
    "title": "Class Success<T> | Unofficial Reqnroll Documentation",
    "summary": "Class Success<T> Namespace Reqnroll.CommonModels Assembly Reqnroll.dll public class Success<T> : Success, ISuccess<T>, ISuccess, IResult<T>, IResult Type Parameters T Inheritance object Success Success<T> Implements ISuccess<T> ISuccess IResult<T> IResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Success(T) public Success(T result) Parameters result T Properties Result public T Result { get; } Property Value T"
  },
  "api/Reqnroll.CommonModels.Success.html": {
    "href": "api/Reqnroll.CommonModels.Success.html",
    "title": "Class Success | Unofficial Reqnroll Documentation",
    "summary": "Class Success Namespace Reqnroll.CommonModels Assembly Reqnroll.dll public class Success : ISuccess, IResult Inheritance object Success Implements ISuccess IResult Derived Success<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Reqnroll.CommonModels.WrappedFailure-1.html": {
    "href": "api/Reqnroll.CommonModels.WrappedFailure-1.html",
    "title": "Class WrappedFailure<T> | Unofficial Reqnroll Documentation",
    "summary": "Class WrappedFailure<T> Namespace Reqnroll.CommonModels Assembly Reqnroll.dll public class WrappedFailure<T> : WrappedFailure, IFailure<T>, IFailure, IResult<T>, IResult Type Parameters T Inheritance object Failure WrappedFailure WrappedFailure<T> Implements IFailure<T> IFailure IResult<T> IResult Inherited Members WrappedFailure.InnerFailure WrappedFailure.GetStringOfInnerFailure() WrappedFailure.ToString() Failure.Description object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors WrappedFailure(string, IFailure) public WrappedFailure(string description, IFailure innerFailure) Parameters description string innerFailure IFailure"
  },
  "api/Reqnroll.CommonModels.WrappedFailure.html": {
    "href": "api/Reqnroll.CommonModels.WrappedFailure.html",
    "title": "Class WrappedFailure | Unofficial Reqnroll Documentation",
    "summary": "Class WrappedFailure Namespace Reqnroll.CommonModels Assembly Reqnroll.dll public class WrappedFailure : Failure, IFailure, IResult Inheritance object Failure WrappedFailure Implements IFailure IResult Derived WrappedFailure<T> Inherited Members Failure.Description object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors WrappedFailure(string, IFailure) public WrappedFailure(string description, IFailure innerFailure) Parameters description string innerFailure IFailure Properties InnerFailure public IFailure InnerFailure { get; } Property Value IFailure Methods GetStringOfInnerFailure() public string GetStringOfInnerFailure() Returns string ToString() public override string ToString() Returns string"
  },
  "api/Reqnroll.CommonModels.html": {
    "href": "api/Reqnroll.CommonModels.html",
    "title": "Namespace Reqnroll.CommonModels | Unofficial Reqnroll Documentation",
    "summary": "Namespace Reqnroll.CommonModels Classes ExceptionFailure ExceptionFailure<T> Failure Failure<T> Result Result<T> Success Success<T> WrappedFailure WrappedFailure<T> Interfaces IFailure IFailure<T> IResult IResult<T> ISuccess ISuccess<T>"
  },
  "api/Reqnroll.ComparisonException.html": {
    "href": "api/Reqnroll.ComparisonException.html",
    "title": "Class ComparisonException | Unofficial Reqnroll Documentation",
    "summary": "Class ComparisonException Namespace Reqnroll Assembly Reqnroll.dll public class ComparisonException : Exception, ISerializable Inheritance object Exception ComparisonException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ComparisonException(string) public ComparisonException(string message) Parameters message string"
  },
  "api/Reqnroll.Configuration.ConfigDefaults.html": {
    "href": "api/Reqnroll.Configuration.ConfigDefaults.html",
    "title": "Class ConfigDefaults | Unofficial Reqnroll Documentation",
    "summary": "Class ConfigDefaults Namespace Reqnroll.Configuration Assembly Reqnroll.dll public static class ConfigDefaults Inheritance object ConfigDefaults Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AddNonParallelizableMarkerForTags public static readonly string[] AddNonParallelizableMarkerForTags Field Value string[] AllowDebugGeneratedFiles public const bool AllowDebugGeneratedFiles = false Field Value bool AllowRowTests public const bool AllowRowTests = true Field Value bool ColoredOutput public const bool ColoredOutput = false Field Value bool DetectAmbiguousMatches public const bool DetectAmbiguousMatches = true Field Value bool FeatureLanguage public const string FeatureLanguage = \"en-US\" Field Value string GeneratorPath public const string GeneratorPath = null Field Value string MinTracedDuration public const string MinTracedDuration = \"0:0:0.1\" Field Value string MissingOrPendingStepsOutcome public const MissingOrPendingStepsOutcome MissingOrPendingStepsOutcome = Pending Field Value MissingOrPendingStepsOutcome ObsoleteBehavior public const ObsoleteBehavior ObsoleteBehavior = Warn Field Value ObsoleteBehavior StepDefinitionSkeletonStyle public const StepDefinitionSkeletonStyle StepDefinitionSkeletonStyle = CucumberExpressionAttribute Field Value StepDefinitionSkeletonStyle StopAtFirstError public const bool StopAtFirstError = false Field Value bool ToolLanguage public const string ToolLanguage = \"\" Field Value string TraceSuccessfulSteps public const bool TraceSuccessfulSteps = true Field Value bool TraceTimings public const bool TraceTimings = false Field Value bool UnitTestProviderName public const string UnitTestProviderName = \"nunit\" Field Value string Properties MinTracedDurationAsTimeSpan public static TimeSpan MinTracedDurationAsTimeSpan { get; } Property Value TimeSpan"
  },
  "api/Reqnroll.Configuration.ConfigSource.html": {
    "href": "api/Reqnroll.Configuration.ConfigSource.html",
    "title": "Enum ConfigSource | Unofficial Reqnroll Documentation",
    "summary": "Enum ConfigSource Namespace Reqnroll.Configuration Assembly Reqnroll.dll public enum ConfigSource Fields AppConfig = 0 Default = 2 Json = 1"
  },
  "api/Reqnroll.Configuration.ConfigurationLoader.html": {
    "href": "api/Reqnroll.Configuration.ConfigurationLoader.html",
    "title": "Class ConfigurationLoader | Unofficial Reqnroll Documentation",
    "summary": "Class ConfigurationLoader Namespace Reqnroll.Configuration Assembly Reqnroll.dll public class ConfigurationLoader : IConfigurationLoader Inheritance object ConfigurationLoader Implements IConfigurationLoader Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ConfigurationLoader(IReqnrollJsonLocator) public ConfigurationLoader(IReqnrollJsonLocator reqnrollJsonLocator) Parameters reqnrollJsonLocator IReqnrollJsonLocator Properties DefaultAddNonParallelizableMarkerForTags public static string[] DefaultAddNonParallelizableMarkerForTags { get; } Property Value string[] DefaultColoredOutput public static bool DefaultColoredOutput { get; } Property Value bool DefaultGeneratorPath public static string DefaultGeneratorPath { get; } Property Value string DefaultObsoleteBehavior public static ObsoleteBehavior DefaultObsoleteBehavior { get; } Property Value ObsoleteBehavior HasJsonConfig public bool HasJsonConfig { get; } Property Value bool Methods GetDefault() public static ReqnrollConfiguration GetDefault() Returns ReqnrollConfiguration Load(ReqnrollConfiguration) public ReqnrollConfiguration Load(ReqnrollConfiguration reqnrollConfiguration) Parameters reqnrollConfiguration ReqnrollConfiguration Returns ReqnrollConfiguration Load(ReqnrollConfiguration, IReqnrollConfigurationHolder) public ReqnrollConfiguration Load(ReqnrollConfiguration reqnrollConfiguration, IReqnrollConfigurationHolder reqnrollConfigurationHolder) Parameters reqnrollConfiguration ReqnrollConfiguration reqnrollConfigurationHolder IReqnrollConfigurationHolder Returns ReqnrollConfiguration LoadFromConfigSource(ReqnrollConfiguration, IReqnrollConfigurationHolder) protected virtual ReqnrollConfiguration LoadFromConfigSource(ReqnrollConfiguration reqnrollConfiguration, IReqnrollConfigurationHolder reqnrollConfigurationHolder) Parameters reqnrollConfiguration ReqnrollConfiguration reqnrollConfigurationHolder IReqnrollConfigurationHolder Returns ReqnrollConfiguration TraceConfigSource(ITraceListener, ReqnrollConfiguration) public void TraceConfigSource(ITraceListener traceListener, ReqnrollConfiguration reqnrollConfiguration) Parameters traceListener ITraceListener reqnrollConfiguration ReqnrollConfiguration"
  },
  "api/Reqnroll.Configuration.DefaultRuntimeConfigurationProvider.html": {
    "href": "api/Reqnroll.Configuration.DefaultRuntimeConfigurationProvider.html",
    "title": "Class DefaultRuntimeConfigurationProvider | Unofficial Reqnroll Documentation",
    "summary": "Class DefaultRuntimeConfigurationProvider Namespace Reqnroll.Configuration Assembly Reqnroll.dll public class DefaultRuntimeConfigurationProvider : IRuntimeConfigurationProvider Inheritance object DefaultRuntimeConfigurationProvider Implements IRuntimeConfigurationProvider Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DefaultRuntimeConfigurationProvider(IConfigurationLoader) public DefaultRuntimeConfigurationProvider(IConfigurationLoader configurationLoader) Parameters configurationLoader IConfigurationLoader Methods LoadConfiguration(ReqnrollConfiguration) public ReqnrollConfiguration LoadConfiguration(ReqnrollConfiguration reqnrollConfiguration) Parameters reqnrollConfiguration ReqnrollConfiguration Returns ReqnrollConfiguration"
  },
  "api/Reqnroll.Configuration.DependencyConfiguration.html": {
    "href": "api/Reqnroll.Configuration.DependencyConfiguration.html",
    "title": "Class DependencyConfiguration | Unofficial Reqnroll Documentation",
    "summary": "Class DependencyConfiguration Namespace Reqnroll.Configuration Assembly Reqnroll.dll public class DependencyConfiguration Inheritance object DependencyConfiguration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ImplementationType public string ImplementationType { get; set; } Property Value string InterfaceType public string InterfaceType { get; set; } Property Value string Name public string Name { get; set; } Property Value string Methods RegisterTo(ObjectContainer) public void RegisterTo(ObjectContainer container) Parameters container ObjectContainer"
  },
  "api/Reqnroll.Configuration.DependencyConfigurationCollection.html": {
    "href": "api/Reqnroll.Configuration.DependencyConfigurationCollection.html",
    "title": "Class DependencyConfigurationCollection | Unofficial Reqnroll Documentation",
    "summary": "Class DependencyConfigurationCollection Namespace Reqnroll.Configuration Assembly Reqnroll.dll public class DependencyConfigurationCollection : List<DependencyConfiguration>, IList<DependencyConfiguration>, ICollection<DependencyConfiguration>, IReadOnlyList<DependencyConfiguration>, IReadOnlyCollection<DependencyConfiguration>, IEnumerable<DependencyConfiguration>, IList, ICollection, IEnumerable Inheritance object List<DependencyConfiguration> DependencyConfigurationCollection Implements IList<DependencyConfiguration> ICollection<DependencyConfiguration> IReadOnlyList<DependencyConfiguration> IReadOnlyCollection<DependencyConfiguration> IEnumerable<DependencyConfiguration> IList ICollection IEnumerable Inherited Members List<DependencyConfiguration>.Add(DependencyConfiguration) List<DependencyConfiguration>.AddRange(IEnumerable<DependencyConfiguration>) List<DependencyConfiguration>.AsReadOnly() List<DependencyConfiguration>.BinarySearch(DependencyConfiguration) List<DependencyConfiguration>.BinarySearch(DependencyConfiguration, IComparer<DependencyConfiguration>) List<DependencyConfiguration>.BinarySearch(int, int, DependencyConfiguration, IComparer<DependencyConfiguration>) List<DependencyConfiguration>.Clear() List<DependencyConfiguration>.Contains(DependencyConfiguration) List<DependencyConfiguration>.ConvertAll<TOutput>(Converter<DependencyConfiguration, TOutput>) List<DependencyConfiguration>.CopyTo(DependencyConfiguration[]) List<DependencyConfiguration>.CopyTo(DependencyConfiguration[], int) List<DependencyConfiguration>.CopyTo(int, DependencyConfiguration[], int, int) List<DependencyConfiguration>.Exists(Predicate<DependencyConfiguration>) List<DependencyConfiguration>.Find(Predicate<DependencyConfiguration>) List<DependencyConfiguration>.FindAll(Predicate<DependencyConfiguration>) List<DependencyConfiguration>.FindIndex(int, int, Predicate<DependencyConfiguration>) List<DependencyConfiguration>.FindIndex(int, Predicate<DependencyConfiguration>) List<DependencyConfiguration>.FindIndex(Predicate<DependencyConfiguration>) List<DependencyConfiguration>.FindLast(Predicate<DependencyConfiguration>) List<DependencyConfiguration>.FindLastIndex(int, int, Predicate<DependencyConfiguration>) List<DependencyConfiguration>.FindLastIndex(int, Predicate<DependencyConfiguration>) List<DependencyConfiguration>.FindLastIndex(Predicate<DependencyConfiguration>) List<DependencyConfiguration>.ForEach(Action<DependencyConfiguration>) List<DependencyConfiguration>.GetEnumerator() List<DependencyConfiguration>.GetRange(int, int) List<DependencyConfiguration>.IndexOf(DependencyConfiguration) List<DependencyConfiguration>.IndexOf(DependencyConfiguration, int) List<DependencyConfiguration>.IndexOf(DependencyConfiguration, int, int) List<DependencyConfiguration>.Insert(int, DependencyConfiguration) List<DependencyConfiguration>.InsertRange(int, IEnumerable<DependencyConfiguration>) List<DependencyConfiguration>.LastIndexOf(DependencyConfiguration) List<DependencyConfiguration>.LastIndexOf(DependencyConfiguration, int) List<DependencyConfiguration>.LastIndexOf(DependencyConfiguration, int, int) List<DependencyConfiguration>.Remove(DependencyConfiguration) List<DependencyConfiguration>.RemoveAll(Predicate<DependencyConfiguration>) List<DependencyConfiguration>.RemoveAt(int) List<DependencyConfiguration>.RemoveRange(int, int) List<DependencyConfiguration>.Reverse() List<DependencyConfiguration>.Reverse(int, int) List<DependencyConfiguration>.Sort() List<DependencyConfiguration>.Sort(IComparer<DependencyConfiguration>) List<DependencyConfiguration>.Sort(Comparison<DependencyConfiguration>) List<DependencyConfiguration>.Sort(int, int, IComparer<DependencyConfiguration>) List<DependencyConfiguration>.ToArray() List<DependencyConfiguration>.TrimExcess() List<DependencyConfiguration>.TrueForAll(Predicate<DependencyConfiguration>) List<DependencyConfiguration>.Capacity List<DependencyConfiguration>.Count List<DependencyConfiguration>.this[int] object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ProjectionExtensionMethods.ToProjection<T>(IEnumerable<T>, Table) Methods Add(string, string, string) public void Add(string implementationType, string interfaceType, string name = null) Parameters implementationType string interfaceType string name string RegisterTo(ObjectContainer) public void RegisterTo(ObjectContainer container) Parameters container ObjectContainer"
  },
  "api/Reqnroll.Configuration.IConfigurationLoader.html": {
    "href": "api/Reqnroll.Configuration.IConfigurationLoader.html",
    "title": "Interface IConfigurationLoader | Unofficial Reqnroll Documentation",
    "summary": "Interface IConfigurationLoader Namespace Reqnroll.Configuration Assembly Reqnroll.dll public interface IConfigurationLoader Methods Load(ReqnrollConfiguration) ReqnrollConfiguration Load(ReqnrollConfiguration reqnrollConfiguration) Parameters reqnrollConfiguration ReqnrollConfiguration Returns ReqnrollConfiguration Load(ReqnrollConfiguration, IReqnrollConfigurationHolder) ReqnrollConfiguration Load(ReqnrollConfiguration reqnrollConfiguration, IReqnrollConfigurationHolder reqnrollConfigurationHolder) Parameters reqnrollConfiguration ReqnrollConfiguration reqnrollConfigurationHolder IReqnrollConfigurationHolder Returns ReqnrollConfiguration TraceConfigSource(ITraceListener, ReqnrollConfiguration) void TraceConfigSource(ITraceListener traceListener, ReqnrollConfiguration reqnrollConfiguration) Parameters traceListener ITraceListener reqnrollConfiguration ReqnrollConfiguration"
  },
  "api/Reqnroll.Configuration.IReqnrollConfigurationHolder.html": {
    "href": "api/Reqnroll.Configuration.IReqnrollConfigurationHolder.html",
    "title": "Interface IReqnrollConfigurationHolder | Unofficial Reqnroll Documentation",
    "summary": "Interface IReqnrollConfigurationHolder Namespace Reqnroll.Configuration Assembly Reqnroll.dll public interface IReqnrollConfigurationHolder Properties ConfigSource ConfigSource ConfigSource { get; } Property Value ConfigSource Content string Content { get; } Property Value string HasConfiguration bool HasConfiguration { get; } Property Value bool"
  },
  "api/Reqnroll.Configuration.IReqnrollJsonLocator.html": {
    "href": "api/Reqnroll.Configuration.IReqnrollJsonLocator.html",
    "title": "Interface IReqnrollJsonLocator | Unofficial Reqnroll Documentation",
    "summary": "Interface IReqnrollJsonLocator Namespace Reqnroll.Configuration Assembly Reqnroll.dll public interface IReqnrollJsonLocator Methods GetReqnrollJsonFilePath() string GetReqnrollJsonFilePath() Returns string"
  },
  "api/Reqnroll.Configuration.IRuntimeConfigurationProvider.html": {
    "href": "api/Reqnroll.Configuration.IRuntimeConfigurationProvider.html",
    "title": "Interface IRuntimeConfigurationProvider | Unofficial Reqnroll Documentation",
    "summary": "Interface IRuntimeConfigurationProvider Namespace Reqnroll.Configuration Assembly Reqnroll.dll public interface IRuntimeConfigurationProvider Methods LoadConfiguration(ReqnrollConfiguration) ReqnrollConfiguration LoadConfiguration(ReqnrollConfiguration reqnrollConfiguration) Parameters reqnrollConfiguration ReqnrollConfiguration Returns ReqnrollConfiguration"
  },
  "api/Reqnroll.Configuration.JsonConfig.BindingCultureElement.html": {
    "href": "api/Reqnroll.Configuration.JsonConfig.BindingCultureElement.html",
    "title": "Class BindingCultureElement | Unofficial Reqnroll Documentation",
    "summary": "Class BindingCultureElement Namespace Reqnroll.Configuration.JsonConfig Assembly Reqnroll.dll public class BindingCultureElement Inheritance object BindingCultureElement Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Name [JsonPropertyName(\"name\")] public string Name { get; set; } Property Value string"
  },
  "api/Reqnroll.Configuration.JsonConfig.Dependency.html": {
    "href": "api/Reqnroll.Configuration.JsonConfig.Dependency.html",
    "title": "Class Dependency | Unofficial Reqnroll Documentation",
    "summary": "Class Dependency Namespace Reqnroll.Configuration.JsonConfig Assembly Reqnroll.dll public class Dependency Inheritance object Dependency Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ImplementationType [JsonPropertyName(\"type\")] public string ImplementationType { get; set; } Property Value string InterfaceType [JsonPropertyName(\"as\")] public string InterfaceType { get; set; } Property Value string Name [JsonPropertyName(\"name\")] public string Name { get; set; } Property Value string"
  },
  "api/Reqnroll.Configuration.JsonConfig.GeneratorElement.html": {
    "href": "api/Reqnroll.Configuration.JsonConfig.GeneratorElement.html",
    "title": "Class GeneratorElement | Unofficial Reqnroll Documentation",
    "summary": "Class GeneratorElement Namespace Reqnroll.Configuration.JsonConfig Assembly Reqnroll.dll public class GeneratorElement Inheritance object GeneratorElement Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AddNonParallelizableMarkerForTags [JsonPropertyName(\"addNonParallelizableMarkerForTags\")] public List<string> AddNonParallelizableMarkerForTags { get; set; } Property Value List<string> AllowDebugGeneratedFiles [JsonPropertyName(\"allowDebugGeneratedFiles\")] public bool AllowDebugGeneratedFiles { get; set; } Property Value bool AllowRowTests [JsonPropertyName(\"allowRowTests\")] public bool AllowRowTests { get; set; } Property Value bool"
  },
  "api/Reqnroll.Configuration.JsonConfig.JsonConfig.html": {
    "href": "api/Reqnroll.Configuration.JsonConfig.JsonConfig.html",
    "title": "Class JsonConfig | Unofficial Reqnroll Documentation",
    "summary": "Class JsonConfig Namespace Reqnroll.Configuration.JsonConfig Assembly Reqnroll.dll public class JsonConfig Inheritance object JsonConfig Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties BindingAssemblies [JsonPropertyName(\"bindingAssemblies\")] public List<StepAssemblyElement> BindingAssemblies { get; set; } Property Value List<StepAssemblyElement> BindingCulture [JsonPropertyName(\"bindingCulture\")] public BindingCultureElement BindingCulture { get; set; } Property Value BindingCultureElement Generator [JsonPropertyName(\"generator\")] public GeneratorElement Generator { get; set; } Property Value GeneratorElement Language [JsonPropertyName(\"language\")] public LanguageElement Language { get; set; } Property Value LanguageElement Runtime [JsonPropertyName(\"runtime\")] public RuntimeElement Runtime { get; set; } Property Value RuntimeElement StepAssemblies [JsonPropertyName(\"stepAssemblies\")] public List<StepAssemblyElement> StepAssemblies { get; set; } Property Value List<StepAssemblyElement> Trace [JsonPropertyName(\"trace\")] public TraceElement Trace { get; set; } Property Value TraceElement"
  },
  "api/Reqnroll.Configuration.JsonConfig.JsonConfigurationLoader.html": {
    "href": "api/Reqnroll.Configuration.JsonConfig.JsonConfigurationLoader.html",
    "title": "Class JsonConfigurationLoader | Unofficial Reqnroll Documentation",
    "summary": "Class JsonConfigurationLoader Namespace Reqnroll.Configuration.JsonConfig Assembly Reqnroll.dll public class JsonConfigurationLoader Inheritance object JsonConfigurationLoader Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods LoadJson(ReqnrollConfiguration, string) public ReqnrollConfiguration LoadJson(ReqnrollConfiguration reqnrollConfiguration, string jsonContent) Parameters reqnrollConfiguration ReqnrollConfiguration jsonContent string Returns ReqnrollConfiguration"
  },
  "api/Reqnroll.Configuration.JsonConfig.LanguageElement.html": {
    "href": "api/Reqnroll.Configuration.JsonConfig.LanguageElement.html",
    "title": "Class LanguageElement | Unofficial Reqnroll Documentation",
    "summary": "Class LanguageElement Namespace Reqnroll.Configuration.JsonConfig Assembly Reqnroll.dll public class LanguageElement Inheritance object LanguageElement Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Binding [JsonPropertyName(\"binding\")] public string Binding { get; set; } Property Value string Feature [JsonPropertyName(\"feature\")] public string Feature { get; set; } Property Value string"
  },
  "api/Reqnroll.Configuration.JsonConfig.PluginElement.html": {
    "href": "api/Reqnroll.Configuration.JsonConfig.PluginElement.html",
    "title": "Class PluginElement | Unofficial Reqnroll Documentation",
    "summary": "Class PluginElement Namespace Reqnroll.Configuration.JsonConfig Assembly Reqnroll.dll public class PluginElement Inheritance object PluginElement Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Name [JsonPropertyName(\"name\")] public string Name { get; set; } Property Value string Parameters [JsonPropertyName(\"parameters\")] public string Parameters { get; set; } Property Value string Path [JsonPropertyName(\"path\")] public string Path { get; set; } Property Value string Type [JsonPropertyName(\"type\")] public PluginType Type { get; set; } Property Value PluginType"
  },
  "api/Reqnroll.Configuration.JsonConfig.RuntimeElement.html": {
    "href": "api/Reqnroll.Configuration.JsonConfig.RuntimeElement.html",
    "title": "Class RuntimeElement | Unofficial Reqnroll Documentation",
    "summary": "Class RuntimeElement Namespace Reqnroll.Configuration.JsonConfig Assembly Reqnroll.dll public class RuntimeElement Inheritance object RuntimeElement Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Dependencies [JsonPropertyName(\"dependencies\")] public List<Dependency> Dependencies { get; set; } Property Value List<Dependency> MissingOrPendingStepsOutcome [JsonPropertyName(\"missingOrPendingStepsOutcome\")] public MissingOrPendingStepsOutcome MissingOrPendingStepsOutcome { get; set; } Property Value MissingOrPendingStepsOutcome ObsoleteBehavior [JsonPropertyName(\"obsoleteBehavior\")] public ObsoleteBehavior ObsoleteBehavior { get; set; } Property Value ObsoleteBehavior StopAtFirstError [JsonPropertyName(\"stopAtFirstError\")] public bool StopAtFirstError { get; set; } Property Value bool"
  },
  "api/Reqnroll.Configuration.JsonConfig.StepAssemblyElement.html": {
    "href": "api/Reqnroll.Configuration.JsonConfig.StepAssemblyElement.html",
    "title": "Class StepAssemblyElement | Unofficial Reqnroll Documentation",
    "summary": "Class StepAssemblyElement Namespace Reqnroll.Configuration.JsonConfig Assembly Reqnroll.dll public class StepAssemblyElement Inheritance object StepAssemblyElement Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Assembly [JsonPropertyName(\"assembly\")] public string Assembly { get; set; } Property Value string"
  },
  "api/Reqnroll.Configuration.JsonConfig.TraceElement.html": {
    "href": "api/Reqnroll.Configuration.JsonConfig.TraceElement.html",
    "title": "Class TraceElement | Unofficial Reqnroll Documentation",
    "summary": "Class TraceElement Namespace Reqnroll.Configuration.JsonConfig Assembly Reqnroll.dll public class TraceElement Inheritance object TraceElement Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ColoredOutput [JsonPropertyName(\"ColoredOutput\")] public bool ColoredOutput { get; set; } Property Value bool MinTracedDuration [JsonPropertyName(\"minTracedDuration\")] public TimeSpan MinTracedDuration { get; set; } Property Value TimeSpan StepDefinitionSkeletonStyle [JsonPropertyName(\"stepDefinitionSkeletonStyle\")] public StepDefinitionSkeletonStyle StepDefinitionSkeletonStyle { get; set; } Property Value StepDefinitionSkeletonStyle TraceSuccessfulSteps [JsonPropertyName(\"traceSuccessfulSteps\")] public bool TraceSuccessfulSteps { get; set; } Property Value bool TraceTimings [JsonPropertyName(\"traceTimings\")] public bool TraceTimings { get; set; } Property Value bool"
  },
  "api/Reqnroll.Configuration.JsonConfig.UnitTestProviderElement.html": {
    "href": "api/Reqnroll.Configuration.JsonConfig.UnitTestProviderElement.html",
    "title": "Class UnitTestProviderElement | Unofficial Reqnroll Documentation",
    "summary": "Class UnitTestProviderElement Namespace Reqnroll.Configuration.JsonConfig Assembly Reqnroll.dll public class UnitTestProviderElement Inheritance object UnitTestProviderElement Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Name [JsonPropertyName(\"name\")] public string Name { get; set; } Property Value string"
  },
  "api/Reqnroll.Configuration.JsonConfig.html": {
    "href": "api/Reqnroll.Configuration.JsonConfig.html",
    "title": "Namespace Reqnroll.Configuration.JsonConfig | Unofficial Reqnroll Documentation",
    "summary": "Namespace Reqnroll.Configuration.JsonConfig Classes BindingCultureElement Dependency GeneratorElement JsonConfig JsonConfigurationLoader LanguageElement PluginElement RuntimeElement StepAssemblyElement TraceElement UnitTestProviderElement"
  },
  "api/Reqnroll.Configuration.JsonStringRuntimeConfigurationProvider.html": {
    "href": "api/Reqnroll.Configuration.JsonStringRuntimeConfigurationProvider.html",
    "title": "Class JsonStringRuntimeConfigurationProvider | Unofficial Reqnroll Documentation",
    "summary": "Class JsonStringRuntimeConfigurationProvider Namespace Reqnroll.Configuration Assembly Reqnroll.dll public class JsonStringRuntimeConfigurationProvider : IRuntimeConfigurationProvider Inheritance object JsonStringRuntimeConfigurationProvider Implements IRuntimeConfigurationProvider Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors JsonStringRuntimeConfigurationProvider(string) public JsonStringRuntimeConfigurationProvider(string jsonConfigFileContent) Parameters jsonConfigFileContent string Methods LoadConfiguration(ReqnrollConfiguration) public ReqnrollConfiguration LoadConfiguration(ReqnrollConfiguration reqnrollConfiguration) Parameters reqnrollConfiguration ReqnrollConfiguration Returns ReqnrollConfiguration"
  },
  "api/Reqnroll.Configuration.MissingOrPendingStepsOutcome.html": {
    "href": "api/Reqnroll.Configuration.MissingOrPendingStepsOutcome.html",
    "title": "Enum MissingOrPendingStepsOutcome | Unofficial Reqnroll Documentation",
    "summary": "Enum MissingOrPendingStepsOutcome Namespace Reqnroll.Configuration Assembly Reqnroll.dll public enum MissingOrPendingStepsOutcome Fields Error = 3 Ignore = 2 Inconclusive = 1 Pending = 0"
  },
  "api/Reqnroll.Configuration.ObsoleteBehavior.html": {
    "href": "api/Reqnroll.Configuration.ObsoleteBehavior.html",
    "title": "Enum ObsoleteBehavior | Unofficial Reqnroll Documentation",
    "summary": "Enum ObsoleteBehavior Namespace Reqnroll.Configuration Assembly Reqnroll.dll Describes possibilities what to do when a test is marked with ObsoleteAttribute The default is Warn public enum ObsoleteBehavior Fields Error = 3 None = 0 Pending = 2 Warn = 1"
  },
  "api/Reqnroll.Configuration.ReqnrollConfiguration.html": {
    "href": "api/Reqnroll.Configuration.ReqnrollConfiguration.html",
    "title": "Class ReqnrollConfiguration | Unofficial Reqnroll Documentation",
    "summary": "Class ReqnrollConfiguration Namespace Reqnroll.Configuration Assembly Reqnroll.dll public class ReqnrollConfiguration Inheritance object ReqnrollConfiguration Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ReqnrollConfiguration(ConfigSource, DependencyConfigurationCollection, DependencyConfigurationCollection, CultureInfo, CultureInfo, bool, MissingOrPendingStepsOutcome, bool, bool, TimeSpan, StepDefinitionSkeletonStyle, List<string>, bool, bool, string[], ObsoleteBehavior, bool) public ReqnrollConfiguration(ConfigSource configSource, DependencyConfigurationCollection customDependencies, DependencyConfigurationCollection generatorCustomDependencies, CultureInfo featureLanguage, CultureInfo bindingCulture, bool stopAtFirstError, MissingOrPendingStepsOutcome missingOrPendingStepsOutcome, bool traceSuccessfulSteps, bool traceTimings, TimeSpan minTracedDuration, StepDefinitionSkeletonStyle stepDefinitionSkeletonStyle, List<string> additionalStepAssemblies, bool allowDebugGeneratedFiles, bool allowRowTests, string[] addNonParallelizableMarkerForTags, ObsoleteBehavior obsoleteBehavior, bool coloredOutput) Parameters configSource ConfigSource customDependencies DependencyConfigurationCollection generatorCustomDependencies DependencyConfigurationCollection featureLanguage CultureInfo bindingCulture CultureInfo stopAtFirstError bool missingOrPendingStepsOutcome MissingOrPendingStepsOutcome traceSuccessfulSteps bool traceTimings bool minTracedDuration TimeSpan stepDefinitionSkeletonStyle StepDefinitionSkeletonStyle additionalStepAssemblies List<string> allowDebugGeneratedFiles bool allowRowTests bool addNonParallelizableMarkerForTags string[] obsoleteBehavior ObsoleteBehavior coloredOutput bool Properties AddNonParallelizableMarkerForTags public string[] AddNonParallelizableMarkerForTags { get; set; } Property Value string[] AdditionalStepAssemblies public List<string> AdditionalStepAssemblies { get; set; } Property Value List<string> AllowDebugGeneratedFiles public bool AllowDebugGeneratedFiles { get; set; } Property Value bool AllowRowTests public bool AllowRowTests { get; set; } Property Value bool BindingCulture public CultureInfo BindingCulture { get; set; } Property Value CultureInfo ColoredOutput public bool ColoredOutput { get; set; } Property Value bool ConfigSource public ConfigSource ConfigSource { get; set; } Property Value ConfigSource ConfigSourceText public string ConfigSourceText { get; set; } Property Value string CustomDependencies public DependencyConfigurationCollection CustomDependencies { get; set; } Property Value DependencyConfigurationCollection FeatureLanguage public CultureInfo FeatureLanguage { get; set; } Property Value CultureInfo GeneratorCustomDependencies public DependencyConfigurationCollection GeneratorCustomDependencies { get; set; } Property Value DependencyConfigurationCollection MinTracedDuration public TimeSpan MinTracedDuration { get; set; } Property Value TimeSpan MissingOrPendingStepsOutcome public MissingOrPendingStepsOutcome MissingOrPendingStepsOutcome { get; set; } Property Value MissingOrPendingStepsOutcome ObsoleteBehavior public ObsoleteBehavior ObsoleteBehavior { get; set; } Property Value ObsoleteBehavior StepDefinitionSkeletonStyle public StepDefinitionSkeletonStyle StepDefinitionSkeletonStyle { get; set; } Property Value StepDefinitionSkeletonStyle StopAtFirstError public bool StopAtFirstError { get; set; } Property Value bool TraceSuccessfulSteps public bool TraceSuccessfulSteps { get; set; } Property Value bool TraceTimings public bool TraceTimings { get; set; } Property Value bool Methods Equals(ReqnrollConfiguration) protected bool Equals(ReqnrollConfiguration other) Parameters other ReqnrollConfiguration Returns bool Equals(object) public override bool Equals(object obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int"
  },
  "api/Reqnroll.Configuration.ReqnrollJsonLocator.html": {
    "href": "api/Reqnroll.Configuration.ReqnrollJsonLocator.html",
    "title": "Class ReqnrollJsonLocator | Unofficial Reqnroll Documentation",
    "summary": "Class ReqnrollJsonLocator Namespace Reqnroll.Configuration Assembly Reqnroll.dll public class ReqnrollJsonLocator : IReqnrollJsonLocator Inheritance object ReqnrollJsonLocator Implements IReqnrollJsonLocator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields CompatibilityJsonConfigurationFileName public const string CompatibilityJsonConfigurationFileName = \"specflow.json\" Field Value string JsonConfigurationFileName public const string JsonConfigurationFileName = \"reqnroll.json\" Field Value string Methods GetReqnrollJsonFilePath() public string GetReqnrollJsonFilePath() Returns string"
  },
  "api/Reqnroll.Configuration.html": {
    "href": "api/Reqnroll.Configuration.html",
    "title": "Namespace Reqnroll.Configuration | Unofficial Reqnroll Documentation",
    "summary": "Namespace Reqnroll.Configuration Classes ConfigDefaults ConfigurationLoader DefaultRuntimeConfigurationProvider DependencyConfiguration DependencyConfigurationCollection JsonStringRuntimeConfigurationProvider ReqnrollConfiguration ReqnrollJsonLocator Interfaces IConfigurationLoader IReqnrollConfigurationHolder IReqnrollJsonLocator IRuntimeConfigurationProvider Enums ConfigSource MissingOrPendingStepsOutcome ObsoleteBehavior Describes possibilities what to do when a test is marked with ObsoleteAttribute The default is Warn"
  },
  "api/Reqnroll.CultureInfoScope.html": {
    "href": "api/Reqnroll.CultureInfoScope.html",
    "title": "Struct CultureInfoScope | Unofficial Reqnroll Documentation",
    "summary": "Struct CultureInfoScope Namespace Reqnroll Assembly Reqnroll.dll public readonly struct CultureInfoScope : IDisposable Implements IDisposable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors CultureInfoScope(FeatureContext) public CultureInfoScope(FeatureContext featureContext) Parameters featureContext FeatureContext Methods Dispose() public void Dispose()"
  },
  "api/Reqnroll.DataTable.html": {
    "href": "api/Reqnroll.DataTable.html",
    "title": "Class DataTable | Unofficial Reqnroll Documentation",
    "summary": "Class DataTable Namespace Reqnroll Assembly Reqnroll.dll Represents a Gherkin Data Table. [TypeConverter(typeof(DataTable.DataTableConverter))] public class DataTable : Table Inheritance object Table DataTable Inherited Members Table.Header Table.Rows Table.RowCount Table.ContainsColumn(string) Table.AddRow(IDictionary<string, string>) Table.AddRow(params string[]) Table.RenameColumn(string, string) Table.ToString() Table.ToString(bool, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods FindInSetExtensionMethods.FindAllInSet<T>(Table, IEnumerable<T>) FindInSetExtensionMethods.FindInSet<T>(Table, IEnumerable<T>) ProjectionExtensionMethods.ToProjectionOfInstance<T>(Table, T) ProjectionExtensionMethods.ToProjectionOfSet<T>(Table, IEnumerable<T>) ProjectionExtensionMethods.ToProjection<T>(Table) InstanceComparisonExtensionMethods.CompareToInstance<T>(Table, T) InstanceComparisonExtensionMethods.IsEquivalentToInstance<T>(Table, T) SetComparisonExtensionMethods.CompareToSet<T>(Table, IEnumerable<T>, bool) TableHelperExtensionMethods.CreateInstance<T>(Table) TableHelperExtensionMethods.CreateInstance<T>(Table, InstanceCreationOptions) TableHelperExtensionMethods.CreateInstance<T>(Table, Func<T>) TableHelperExtensionMethods.CreateInstance<T>(Table, Func<T>, InstanceCreationOptions) TableHelperExtensionMethods.CreateSet<T>(Table) TableHelperExtensionMethods.CreateSet<T>(Table, InstanceCreationOptions) TableHelperExtensionMethods.CreateSet<T>(Table, Func<DataTableRow, T>) TableHelperExtensionMethods.CreateSet<T>(Table, Func<DataTableRow, T>, InstanceCreationOptions) TableHelperExtensionMethods.CreateSet<T>(Table, Func<T>) TableHelperExtensionMethods.CreateSet<T>(Table, Func<T>, InstanceCreationOptions) TableHelperExtensionMethods.FillInstance(Table, object) TableHelperExtensionMethods.FillInstance(Table, object, InstanceCreationOptions) Constructors DataTable(Table) protected DataTable(Table copyFrom) Parameters copyFrom Table DataTable(params string[]) public DataTable(params string[] header) Parameters header string[] DataTable(string[], string[][]) protected DataTable(string[] header, string[][] dataRows) Parameters header string[] dataRows string[][] Methods FromTable(Table) public static DataTable FromTable(Table table) Parameters table Table Returns DataTable"
  },
  "api/Reqnroll.DataTableRow.html": {
    "href": "api/Reqnroll.DataTableRow.html",
    "title": "Class DataTableRow | Unofficial Reqnroll Documentation",
    "summary": "Class DataTableRow Namespace Reqnroll Assembly Reqnroll.dll [Serializable] public class DataTableRow : IDictionary<string, string>, ICollection<KeyValuePair<string, string>>, IEnumerable<KeyValuePair<string, string>>, IEnumerable Inheritance object DataTableRow Implements IDictionary<string, string> ICollection<KeyValuePair<string, string>> IEnumerable<KeyValuePair<string, string>> IEnumerable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods RowExtensionMethods.CreateInstance<T>(DataTableRow) RowExtensionMethods.CreateInstance<T>(DataTableRow, Func<T>) RowExtensionMethods.GetBoolean(DataTableRow, string) RowExtensionMethods.GetChar(DataTableRow, string) RowExtensionMethods.GetDateTime(DataTableRow, string) RowExtensionMethods.GetDecimal(DataTableRow, string) RowExtensionMethods.GetDiscreteEnum<T>(DataTableRow, string) RowExtensionMethods.GetDiscreteEnum<T>(DataTableRow, string, T) RowExtensionMethods.GetDouble(DataTableRow, string) RowExtensionMethods.GetEnumValue<TEnum>(DataTableRow, string) RowExtensionMethods.GetEnum<T>(DataTableRow, string) RowExtensionMethods.GetGuid(DataTableRow, string) RowExtensionMethods.GetInt32(DataTableRow, string) RowExtensionMethods.GetInt64(DataTableRow, string) RowExtensionMethods.GetSingle(DataTableRow, string) RowExtensionMethods.GetString(DataTableRow, string) TableHelpers.Id(DataTableRow) TableHelpers.Value(DataTableRow) ProjectionExtensionMethods.ToProjection<T>(IEnumerable<T>, Table) Properties Count public int Count { get; } Property Value int this[int] public string this[int index] { get; } Parameters index int Property Value string this[string] public string this[string header] { get; set; } Parameters header string Property Value string Keys public ICollection<string> Keys { get; } Property Value ICollection<string> Values public ICollection<string> Values { get; } Property Value ICollection<string> Methods ContainsKey(string) public bool ContainsKey(string key) Parameters key string Returns bool GetEnumerator() public IEnumerator<KeyValuePair<string, string>> GetEnumerator() Returns IEnumerator<KeyValuePair<string, string>> TryGetValue(string, out string) public bool TryGetValue(string key, out string value) Parameters key string value string Returns bool"
  },
  "api/Reqnroll.DataTableRows.html": {
    "href": "api/Reqnroll.DataTableRows.html",
    "title": "Class DataTableRows | Unofficial Reqnroll Documentation",
    "summary": "Class DataTableRows Namespace Reqnroll Assembly Reqnroll.dll [Serializable] public class DataTableRows : IEnumerable<DataTableRow>, IEnumerable Inheritance object DataTableRows Implements IEnumerable<DataTableRow> IEnumerable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ProjectionExtensionMethods.ToProjection<T>(IEnumerable<T>, Table) Properties Count public int Count { get; } Property Value int this[int] public DataTableRow this[int index] { get; } Parameters index int Property Value DataTableRow Methods GetEnumerator() public IEnumerator<DataTableRow> GetEnumerator() Returns IEnumerator<DataTableRow>"
  },
  "api/Reqnroll.DefaultTestRunContext.html": {
    "href": "api/Reqnroll.DefaultTestRunContext.html",
    "title": "Class DefaultTestRunContext | Unofficial Reqnroll Documentation",
    "summary": "Class DefaultTestRunContext Namespace Reqnroll Assembly Reqnroll.dll public class DefaultTestRunContext : ReqnrollContext, IDictionary<string, object>, ICollection<KeyValuePair<string, object>>, IReadOnlyDictionary<string, object>, IReadOnlyCollection<KeyValuePair<string, object>>, IEnumerable<KeyValuePair<string, object>>, IDictionary, ICollection, IEnumerable, IDeserializationCallback, ISerializable, IDisposable, ITestRunContext, IReqnrollContext Inheritance object Dictionary<string, object> ReqnrollContext DefaultTestRunContext Implements IDictionary<string, object> ICollection<KeyValuePair<string, object>> IReadOnlyDictionary<string, object> IReadOnlyCollection<KeyValuePair<string, object>> IEnumerable<KeyValuePair<string, object>> IDictionary ICollection IEnumerable IDeserializationCallback ISerializable IDisposable ITestRunContext IReqnrollContext Inherited Members ReqnrollContext.TestError ReqnrollContext.Dispose() ReqnrollContext.TryGetValue<TValue>(out TValue) ReqnrollContext.TryGetValue<TValue>(string, out TValue) ReqnrollContext.Set<T>(T) ReqnrollContext.Set<T>(T, string) ReqnrollContext.Set<T>(Func<T>) ReqnrollContext.Get<T>() ReqnrollContext.Get<T>(string) Dictionary<string, object>.Add(string, object) Dictionary<string, object>.Clear() Dictionary<string, object>.ContainsKey(string) Dictionary<string, object>.ContainsValue(object) Dictionary<string, object>.GetEnumerator() Dictionary<string, object>.GetObjectData(SerializationInfo, StreamingContext) Dictionary<string, object>.OnDeserialization(object) Dictionary<string, object>.Remove(string) Dictionary<string, object>.TryGetValue(string, out object) Dictionary<string, object>.Comparer Dictionary<string, object>.Count Dictionary<string, object>.this[string] Dictionary<string, object>.Keys Dictionary<string, object>.Values object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ProjectionExtensionMethods.ToProjection<T>(IEnumerable<T>, Table) Constructors DefaultTestRunContext(IObjectContainer, ITestRunSettingsProvider) public DefaultTestRunContext(IObjectContainer testRunContainer, ITestRunSettingsProvider testRunSettingsProvider) Parameters testRunContainer IObjectContainer testRunSettingsProvider ITestRunSettingsProvider Properties TestDirectory public string TestDirectory { get; } Property Value string TestRunContainer public IObjectContainer TestRunContainer { get; } Property Value IObjectContainer"
  },
  "api/Reqnroll.EnvironmentAccess.EnvironmentWrapper.html": {
    "href": "api/Reqnroll.EnvironmentAccess.EnvironmentWrapper.html",
    "title": "Class EnvironmentWrapper | Unofficial Reqnroll Documentation",
    "summary": "Class EnvironmentWrapper Namespace Reqnroll.EnvironmentAccess Assembly Reqnroll.dll public class EnvironmentWrapper : IEnvironmentWrapper Inheritance object EnvironmentWrapper Implements IEnvironmentWrapper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetCurrentDirectory() public string GetCurrentDirectory() Returns string GetEnvironmentVariable(string) public IResult<string> GetEnvironmentVariable(string name) Parameters name string Returns IResult<string> IsEnvironmentVariableSet(string) public bool IsEnvironmentVariableSet(string name) Parameters name string Returns bool ResolveEnvironmentVariables(string) public IResult<string> ResolveEnvironmentVariables(string source) Parameters source string Returns IResult<string> SetEnvironmentVariable(string, string) public void SetEnvironmentVariable(string name, string value) Parameters name string value string"
  },
  "api/Reqnroll.EnvironmentAccess.IEnvironmentWrapper.html": {
    "href": "api/Reqnroll.EnvironmentAccess.IEnvironmentWrapper.html",
    "title": "Interface IEnvironmentWrapper | Unofficial Reqnroll Documentation",
    "summary": "Interface IEnvironmentWrapper Namespace Reqnroll.EnvironmentAccess Assembly Reqnroll.dll public interface IEnvironmentWrapper Methods GetCurrentDirectory() string GetCurrentDirectory() Returns string GetEnvironmentVariable(string) IResult<string> GetEnvironmentVariable(string name) Parameters name string Returns IResult<string> IsEnvironmentVariableSet(string) bool IsEnvironmentVariableSet(string name) Parameters name string Returns bool ResolveEnvironmentVariables(string) IResult<string> ResolveEnvironmentVariables(string source) Parameters source string Returns IResult<string> SetEnvironmentVariable(string, string) void SetEnvironmentVariable(string name, string value) Parameters name string value string"
  },
  "api/Reqnroll.EnvironmentAccess.html": {
    "href": "api/Reqnroll.EnvironmentAccess.html",
    "title": "Namespace Reqnroll.EnvironmentAccess | Unofficial Reqnroll Documentation",
    "summary": "Namespace Reqnroll.EnvironmentAccess Classes EnvironmentWrapper Interfaces IEnvironmentWrapper"
  },
  "api/Reqnroll.EnvironmentVariableNames.html": {
    "href": "api/Reqnroll.EnvironmentVariableNames.html",
    "title": "Class EnvironmentVariableNames | Unofficial Reqnroll Documentation",
    "summary": "Class EnvironmentVariableNames Namespace Reqnroll Assembly Reqnroll.dll public class EnvironmentVariableNames Inheritance object EnvironmentVariableNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields NCrunch public const string NCrunch = \"NCrunch\" Field Value string ReqnrollDisableParallelExecution public const string ReqnrollDisableParallelExecution = \"REQNROLL_DISABLE_PARALLEL\" Field Value string"
  },
  "api/Reqnroll.ErrorHandling.IErrorProvider.html": {
    "href": "api/Reqnroll.ErrorHandling.IErrorProvider.html",
    "title": "Interface IErrorProvider | Unofficial Reqnroll Documentation",
    "summary": "Interface IErrorProvider Namespace Reqnroll.ErrorHandling Assembly Reqnroll.dll public interface IErrorProvider Methods GetAmbiguousBecauseParamCheckMatchError(List<BindingMatch>, StepInstance) Exception GetAmbiguousBecauseParamCheckMatchError(List<BindingMatch> matches, StepInstance stepInstance) Parameters matches List<BindingMatch> stepInstance StepInstance Returns Exception GetAmbiguousMatchError(List<BindingMatch>, StepInstance) Exception GetAmbiguousMatchError(List<BindingMatch> matches, StepInstance stepInstance) Parameters matches List<BindingMatch> stepInstance StepInstance Returns Exception GetCallError(IBindingMethod, Exception) Exception GetCallError(IBindingMethod method, Exception ex) Parameters method IBindingMethod ex Exception Returns Exception GetInvalidBindingRegistryError(IEnumerable<BindingError>) Exception GetInvalidBindingRegistryError(IEnumerable<BindingError> errors) Parameters errors IEnumerable<BindingError> Returns Exception GetInvalidStepDefinitionError(IStepDefinitionBinding) Exception GetInvalidStepDefinitionError(IStepDefinitionBinding stepDefinitionBinding) Parameters stepDefinitionBinding IStepDefinitionBinding Returns Exception GetMethodText(IBindingMethod) string GetMethodText(IBindingMethod method) Parameters method IBindingMethod Returns string GetMissingStepDefinitionError() MissingStepDefinitionException GetMissingStepDefinitionError() Returns MissingStepDefinitionException GetNoMatchBecauseOfScopeFilterError(List<BindingMatch>, StepInstance) Exception GetNoMatchBecauseOfScopeFilterError(List<BindingMatch> matches, StepInstance stepInstance) Parameters matches List<BindingMatch> stepInstance StepInstance Returns Exception GetObsoleteStepError(BindingObsoletion) Exception GetObsoleteStepError(BindingObsoletion bindingObsoletion) Parameters bindingObsoletion BindingObsoletion Returns Exception GetParameterCountError(BindingMatch, int) Exception GetParameterCountError(BindingMatch match, int expectedParameterCount) Parameters match BindingMatch expectedParameterCount int Returns Exception GetPendingStepDefinitionError() PendingStepException GetPendingStepDefinitionError() Returns PendingStepException GetTooManyBindingParamError(int) Exception GetTooManyBindingParamError(int maxParam) Parameters maxParam int Returns Exception ThrowPendingError(ScenarioExecutionStatus, string) void ThrowPendingError(ScenarioExecutionStatus testStatus, string message) Parameters testStatus ScenarioExecutionStatus message string"
  },
  "api/Reqnroll.ErrorHandling.html": {
    "href": "api/Reqnroll.ErrorHandling.html",
    "title": "Namespace Reqnroll.ErrorHandling | Unofficial Reqnroll Documentation",
    "summary": "Namespace Reqnroll.ErrorHandling Interfaces IErrorProvider"
  },
  "api/Reqnroll.Events.AttachmentAddedEvent.html": {
    "href": "api/Reqnroll.Events.AttachmentAddedEvent.html",
    "title": "Class AttachmentAddedEvent | Unofficial Reqnroll Documentation",
    "summary": "Class AttachmentAddedEvent Namespace Reqnroll.Events Assembly Reqnroll.dll public class AttachmentAddedEvent : ExecutionEvent, IExecutionEvent, IExecutionOutputEvent Inheritance object ExecutionEvent AttachmentAddedEvent Implements IExecutionEvent IExecutionOutputEvent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AttachmentAddedEvent(string) public AttachmentAddedEvent(string filePath) Parameters filePath string Properties FilePath public string FilePath { get; } Property Value string"
  },
  "api/Reqnroll.Events.ExecutionEvent.html": {
    "href": "api/Reqnroll.Events.ExecutionEvent.html",
    "title": "Class ExecutionEvent | Unofficial Reqnroll Documentation",
    "summary": "Class ExecutionEvent Namespace Reqnroll.Events Assembly Reqnroll.dll public class ExecutionEvent : IExecutionEvent Inheritance object ExecutionEvent Implements IExecutionEvent Derived AttachmentAddedEvent FeatureFinishedEvent FeatureStartedEvent HookBindingFinishedEvent HookBindingStartedEvent HookFinishedEvent HookStartedEvent OutputAddedEvent ScenarioFinishedEvent ScenarioSkippedEvent ScenarioStartedEvent StepBindingFinishedEvent StepBindingStartedEvent StepFinishedEvent StepSkippedEvent StepStartedEvent TestRunFinishedEvent TestRunStartedEvent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Reqnroll.Events.FeatureFinishedEvent.html": {
    "href": "api/Reqnroll.Events.FeatureFinishedEvent.html",
    "title": "Class FeatureFinishedEvent | Unofficial Reqnroll Documentation",
    "summary": "Class FeatureFinishedEvent Namespace Reqnroll.Events Assembly Reqnroll.dll public class FeatureFinishedEvent : ExecutionEvent, IExecutionEvent Inheritance object ExecutionEvent FeatureFinishedEvent Implements IExecutionEvent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors FeatureFinishedEvent(IFeatureContext) public FeatureFinishedEvent(IFeatureContext featureContext) Parameters featureContext IFeatureContext Properties FeatureContext public IFeatureContext FeatureContext { get; } Property Value IFeatureContext"
  },
  "api/Reqnroll.Events.FeatureStartedEvent.html": {
    "href": "api/Reqnroll.Events.FeatureStartedEvent.html",
    "title": "Class FeatureStartedEvent | Unofficial Reqnroll Documentation",
    "summary": "Class FeatureStartedEvent Namespace Reqnroll.Events Assembly Reqnroll.dll public class FeatureStartedEvent : ExecutionEvent, IExecutionEvent Inheritance object ExecutionEvent FeatureStartedEvent Implements IExecutionEvent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors FeatureStartedEvent(IFeatureContext) public FeatureStartedEvent(IFeatureContext featureContext) Parameters featureContext IFeatureContext Properties FeatureContext public IFeatureContext FeatureContext { get; } Property Value IFeatureContext"
  },
  "api/Reqnroll.Events.HookBindingFinishedEvent.html": {
    "href": "api/Reqnroll.Events.HookBindingFinishedEvent.html",
    "title": "Class HookBindingFinishedEvent | Unofficial Reqnroll Documentation",
    "summary": "Class HookBindingFinishedEvent Namespace Reqnroll.Events Assembly Reqnroll.dll public class HookBindingFinishedEvent : ExecutionEvent, IExecutionEvent Inheritance object ExecutionEvent HookBindingFinishedEvent Implements IExecutionEvent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors HookBindingFinishedEvent(IHookBinding, TimeSpan) public HookBindingFinishedEvent(IHookBinding hookBinding, TimeSpan duration) Parameters hookBinding IHookBinding duration TimeSpan Properties Duration public TimeSpan Duration { get; } Property Value TimeSpan HookBinding public IHookBinding HookBinding { get; } Property Value IHookBinding"
  },
  "api/Reqnroll.Events.HookBindingStartedEvent.html": {
    "href": "api/Reqnroll.Events.HookBindingStartedEvent.html",
    "title": "Class HookBindingStartedEvent | Unofficial Reqnroll Documentation",
    "summary": "Class HookBindingStartedEvent Namespace Reqnroll.Events Assembly Reqnroll.dll public class HookBindingStartedEvent : ExecutionEvent, IExecutionEvent Inheritance object ExecutionEvent HookBindingStartedEvent Implements IExecutionEvent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors HookBindingStartedEvent(IHookBinding) public HookBindingStartedEvent(IHookBinding hookBinding) Parameters hookBinding IHookBinding Properties HookBinding public IHookBinding HookBinding { get; } Property Value IHookBinding"
  },
  "api/Reqnroll.Events.HookFinishedEvent.html": {
    "href": "api/Reqnroll.Events.HookFinishedEvent.html",
    "title": "Class HookFinishedEvent | Unofficial Reqnroll Documentation",
    "summary": "Class HookFinishedEvent Namespace Reqnroll.Events Assembly Reqnroll.dll public class HookFinishedEvent : ExecutionEvent, IExecutionEvent Inheritance object ExecutionEvent HookFinishedEvent Implements IExecutionEvent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors HookFinishedEvent(HookType, IFeatureContext, IScenarioContext, IScenarioStepContext, Exception) public HookFinishedEvent(HookType hookType, IFeatureContext featureContext, IScenarioContext scenarioContext, IScenarioStepContext stepContext, Exception hookException) Parameters hookType HookType featureContext IFeatureContext scenarioContext IScenarioContext stepContext IScenarioStepContext hookException Exception Properties FeatureContext public IFeatureContext FeatureContext { get; } Property Value IFeatureContext HookException public Exception HookException { get; } Property Value Exception HookType public HookType HookType { get; } Property Value HookType ScenarioContext public IScenarioContext ScenarioContext { get; } Property Value IScenarioContext StepContext public IScenarioStepContext StepContext { get; } Property Value IScenarioStepContext"
  },
  "api/Reqnroll.Events.HookStartedEvent.html": {
    "href": "api/Reqnroll.Events.HookStartedEvent.html",
    "title": "Class HookStartedEvent | Unofficial Reqnroll Documentation",
    "summary": "Class HookStartedEvent Namespace Reqnroll.Events Assembly Reqnroll.dll public class HookStartedEvent : ExecutionEvent, IExecutionEvent Inheritance object ExecutionEvent HookStartedEvent Implements IExecutionEvent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors HookStartedEvent(HookType, IFeatureContext, IScenarioContext, IScenarioStepContext) public HookStartedEvent(HookType hookType, IFeatureContext featureContext, IScenarioContext scenarioContext, IScenarioStepContext stepContext) Parameters hookType HookType featureContext IFeatureContext scenarioContext IScenarioContext stepContext IScenarioStepContext Properties FeatureContext public IFeatureContext FeatureContext { get; } Property Value IFeatureContext HookType public HookType HookType { get; } Property Value HookType ScenarioContext public IScenarioContext ScenarioContext { get; } Property Value IScenarioContext StepContext public IScenarioStepContext StepContext { get; } Property Value IScenarioStepContext"
  },
  "api/Reqnroll.Events.IExecutionEvent.html": {
    "href": "api/Reqnroll.Events.IExecutionEvent.html",
    "title": "Interface IExecutionEvent | Unofficial Reqnroll Documentation",
    "summary": "Interface IExecutionEvent Namespace Reqnroll.Events Assembly Reqnroll.dll public interface IExecutionEvent"
  },
  "api/Reqnroll.Events.IExecutionEventListener.html": {
    "href": "api/Reqnroll.Events.IExecutionEventListener.html",
    "title": "Interface IExecutionEventListener | Unofficial Reqnroll Documentation",
    "summary": "Interface IExecutionEventListener Namespace Reqnroll.Events Assembly Reqnroll.dll public interface IExecutionEventListener Methods OnEvent(IExecutionEvent) void OnEvent(IExecutionEvent executionEvent) Parameters executionEvent IExecutionEvent"
  },
  "api/Reqnroll.Events.IExecutionOutputEvent.html": {
    "href": "api/Reqnroll.Events.IExecutionOutputEvent.html",
    "title": "Interface IExecutionOutputEvent | Unofficial Reqnroll Documentation",
    "summary": "Interface IExecutionOutputEvent Namespace Reqnroll.Events Assembly Reqnroll.dll public interface IExecutionOutputEvent"
  },
  "api/Reqnroll.Events.ITestThreadExecutionEventPublisher.html": {
    "href": "api/Reqnroll.Events.ITestThreadExecutionEventPublisher.html",
    "title": "Interface ITestThreadExecutionEventPublisher | Unofficial Reqnroll Documentation",
    "summary": "Interface ITestThreadExecutionEventPublisher Namespace Reqnroll.Events Assembly Reqnroll.dll public interface ITestThreadExecutionEventPublisher Methods AddHandler<TEvent>(Action<TEvent>) void AddHandler<TEvent>(Action<TEvent> handler) where TEvent : IExecutionEvent Parameters handler Action<TEvent> Type Parameters TEvent AddListener(IExecutionEventListener) void AddListener(IExecutionEventListener listener) Parameters listener IExecutionEventListener PublishEvent(IExecutionEvent) void PublishEvent(IExecutionEvent executionEvent) Parameters executionEvent IExecutionEvent"
  },
  "api/Reqnroll.Events.OutputAddedEvent.html": {
    "href": "api/Reqnroll.Events.OutputAddedEvent.html",
    "title": "Class OutputAddedEvent | Unofficial Reqnroll Documentation",
    "summary": "Class OutputAddedEvent Namespace Reqnroll.Events Assembly Reqnroll.dll public class OutputAddedEvent : ExecutionEvent, IExecutionEvent, IExecutionOutputEvent Inheritance object ExecutionEvent OutputAddedEvent Implements IExecutionEvent IExecutionOutputEvent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors OutputAddedEvent(string) public OutputAddedEvent(string text) Parameters text string Properties Text public string Text { get; } Property Value string"
  },
  "api/Reqnroll.Events.ScenarioFinishedEvent.html": {
    "href": "api/Reqnroll.Events.ScenarioFinishedEvent.html",
    "title": "Class ScenarioFinishedEvent | Unofficial Reqnroll Documentation",
    "summary": "Class ScenarioFinishedEvent Namespace Reqnroll.Events Assembly Reqnroll.dll public class ScenarioFinishedEvent : ExecutionEvent, IExecutionEvent Inheritance object ExecutionEvent ScenarioFinishedEvent Implements IExecutionEvent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ScenarioFinishedEvent(IFeatureContext, IScenarioContext) public ScenarioFinishedEvent(IFeatureContext featureContext, IScenarioContext scenarioContext) Parameters featureContext IFeatureContext scenarioContext IScenarioContext Properties FeatureContext public IFeatureContext FeatureContext { get; } Property Value IFeatureContext ScenarioContext public IScenarioContext ScenarioContext { get; } Property Value IScenarioContext"
  },
  "api/Reqnroll.Events.ScenarioSkippedEvent.html": {
    "href": "api/Reqnroll.Events.ScenarioSkippedEvent.html",
    "title": "Class ScenarioSkippedEvent | Unofficial Reqnroll Documentation",
    "summary": "Class ScenarioSkippedEvent Namespace Reqnroll.Events Assembly Reqnroll.dll public class ScenarioSkippedEvent : ExecutionEvent, IExecutionEvent Inheritance object ExecutionEvent ScenarioSkippedEvent Implements IExecutionEvent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Reqnroll.Events.ScenarioStartedEvent.html": {
    "href": "api/Reqnroll.Events.ScenarioStartedEvent.html",
    "title": "Class ScenarioStartedEvent | Unofficial Reqnroll Documentation",
    "summary": "Class ScenarioStartedEvent Namespace Reqnroll.Events Assembly Reqnroll.dll public class ScenarioStartedEvent : ExecutionEvent, IExecutionEvent Inheritance object ExecutionEvent ScenarioStartedEvent Implements IExecutionEvent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ScenarioStartedEvent(IFeatureContext, IScenarioContext) public ScenarioStartedEvent(IFeatureContext featureContext, IScenarioContext scenarioContext) Parameters featureContext IFeatureContext scenarioContext IScenarioContext Properties FeatureContext public IFeatureContext FeatureContext { get; } Property Value IFeatureContext ScenarioContext public IScenarioContext ScenarioContext { get; } Property Value IScenarioContext"
  },
  "api/Reqnroll.Events.StepBindingFinishedEvent.html": {
    "href": "api/Reqnroll.Events.StepBindingFinishedEvent.html",
    "title": "Class StepBindingFinishedEvent | Unofficial Reqnroll Documentation",
    "summary": "Class StepBindingFinishedEvent Namespace Reqnroll.Events Assembly Reqnroll.dll public class StepBindingFinishedEvent : ExecutionEvent, IExecutionEvent Inheritance object ExecutionEvent StepBindingFinishedEvent Implements IExecutionEvent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors StepBindingFinishedEvent(IStepDefinitionBinding, TimeSpan) public StepBindingFinishedEvent(IStepDefinitionBinding stepDefinitionBinding, TimeSpan duration) Parameters stepDefinitionBinding IStepDefinitionBinding duration TimeSpan Properties Duration public TimeSpan Duration { get; } Property Value TimeSpan StepDefinitionBinding public IStepDefinitionBinding StepDefinitionBinding { get; } Property Value IStepDefinitionBinding"
  },
  "api/Reqnroll.Events.StepBindingStartedEvent.html": {
    "href": "api/Reqnroll.Events.StepBindingStartedEvent.html",
    "title": "Class StepBindingStartedEvent | Unofficial Reqnroll Documentation",
    "summary": "Class StepBindingStartedEvent Namespace Reqnroll.Events Assembly Reqnroll.dll public class StepBindingStartedEvent : ExecutionEvent, IExecutionEvent Inheritance object ExecutionEvent StepBindingStartedEvent Implements IExecutionEvent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors StepBindingStartedEvent(IStepDefinitionBinding) public StepBindingStartedEvent(IStepDefinitionBinding stepDefinitionBinding) Parameters stepDefinitionBinding IStepDefinitionBinding Properties StepDefinitionBinding public IStepDefinitionBinding StepDefinitionBinding { get; } Property Value IStepDefinitionBinding"
  },
  "api/Reqnroll.Events.StepFinishedEvent.html": {
    "href": "api/Reqnroll.Events.StepFinishedEvent.html",
    "title": "Class StepFinishedEvent | Unofficial Reqnroll Documentation",
    "summary": "Class StepFinishedEvent Namespace Reqnroll.Events Assembly Reqnroll.dll public class StepFinishedEvent : ExecutionEvent, IExecutionEvent Inheritance object ExecutionEvent StepFinishedEvent Implements IExecutionEvent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors StepFinishedEvent(IFeatureContext, IScenarioContext, IScenarioStepContext) public StepFinishedEvent(IFeatureContext featureContext, IScenarioContext scenarioContext, IScenarioStepContext stepContext) Parameters featureContext IFeatureContext scenarioContext IScenarioContext stepContext IScenarioStepContext Properties FeatureContext public IFeatureContext FeatureContext { get; } Property Value IFeatureContext ScenarioContext public IScenarioContext ScenarioContext { get; } Property Value IScenarioContext StepContext public IScenarioStepContext StepContext { get; } Property Value IScenarioStepContext"
  },
  "api/Reqnroll.Events.StepSkippedEvent.html": {
    "href": "api/Reqnroll.Events.StepSkippedEvent.html",
    "title": "Class StepSkippedEvent | Unofficial Reqnroll Documentation",
    "summary": "Class StepSkippedEvent Namespace Reqnroll.Events Assembly Reqnroll.dll public class StepSkippedEvent : ExecutionEvent, IExecutionEvent Inheritance object ExecutionEvent StepSkippedEvent Implements IExecutionEvent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Reqnroll.Events.StepStartedEvent.html": {
    "href": "api/Reqnroll.Events.StepStartedEvent.html",
    "title": "Class StepStartedEvent | Unofficial Reqnroll Documentation",
    "summary": "Class StepStartedEvent Namespace Reqnroll.Events Assembly Reqnroll.dll public class StepStartedEvent : ExecutionEvent, IExecutionEvent Inheritance object ExecutionEvent StepStartedEvent Implements IExecutionEvent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors StepStartedEvent(IFeatureContext, IScenarioContext, IScenarioStepContext) public StepStartedEvent(IFeatureContext featureContext, IScenarioContext scenarioContext, IScenarioStepContext stepContext) Parameters featureContext IFeatureContext scenarioContext IScenarioContext stepContext IScenarioStepContext Properties FeatureContext public IFeatureContext FeatureContext { get; } Property Value IFeatureContext ScenarioContext public IScenarioContext ScenarioContext { get; } Property Value IScenarioContext StepContext public IScenarioStepContext StepContext { get; } Property Value IScenarioStepContext"
  },
  "api/Reqnroll.Events.TestRunFinishedEvent.html": {
    "href": "api/Reqnroll.Events.TestRunFinishedEvent.html",
    "title": "Class TestRunFinishedEvent | Unofficial Reqnroll Documentation",
    "summary": "Class TestRunFinishedEvent Namespace Reqnroll.Events Assembly Reqnroll.dll public class TestRunFinishedEvent : ExecutionEvent, IExecutionEvent Inheritance object ExecutionEvent TestRunFinishedEvent Implements IExecutionEvent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Reqnroll.Events.TestRunStartedEvent.html": {
    "href": "api/Reqnroll.Events.TestRunStartedEvent.html",
    "title": "Class TestRunStartedEvent | Unofficial Reqnroll Documentation",
    "summary": "Class TestRunStartedEvent Namespace Reqnroll.Events Assembly Reqnroll.dll public class TestRunStartedEvent : ExecutionEvent, IExecutionEvent Inheritance object ExecutionEvent TestRunStartedEvent Implements IExecutionEvent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Reqnroll.Events.TestThreadExecutionEventPublisher.html": {
    "href": "api/Reqnroll.Events.TestThreadExecutionEventPublisher.html",
    "title": "Class TestThreadExecutionEventPublisher | Unofficial Reqnroll Documentation",
    "summary": "Class TestThreadExecutionEventPublisher Namespace Reqnroll.Events Assembly Reqnroll.dll public class TestThreadExecutionEventPublisher : ITestThreadExecutionEventPublisher Inheritance object TestThreadExecutionEventPublisher Implements ITestThreadExecutionEventPublisher Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddHandler<TEvent>(Action<TEvent>) public void AddHandler<TEvent>(Action<TEvent> handler) where TEvent : IExecutionEvent Parameters handler Action<TEvent> Type Parameters TEvent AddListener(IExecutionEventListener) public void AddListener(IExecutionEventListener listener) Parameters listener IExecutionEventListener PublishEvent(IExecutionEvent) public void PublishEvent(IExecutionEvent executionEvent) Parameters executionEvent IExecutionEvent"
  },
  "api/Reqnroll.Events.html": {
    "href": "api/Reqnroll.Events.html",
    "title": "Namespace Reqnroll.Events | Unofficial Reqnroll Documentation",
    "summary": "Namespace Reqnroll.Events Classes AttachmentAddedEvent ExecutionEvent FeatureFinishedEvent FeatureStartedEvent HookBindingFinishedEvent HookBindingStartedEvent HookFinishedEvent HookStartedEvent OutputAddedEvent ScenarioFinishedEvent ScenarioSkippedEvent ScenarioStartedEvent StepBindingFinishedEvent StepBindingStartedEvent StepFinishedEvent StepSkippedEvent StepStartedEvent TestRunFinishedEvent TestRunStartedEvent TestThreadExecutionEventPublisher Interfaces IExecutionEvent IExecutionEventListener IExecutionOutputEvent ITestThreadExecutionEventPublisher"
  },
  "api/Reqnroll.FeatureContext.html": {
    "href": "api/Reqnroll.FeatureContext.html",
    "title": "Class FeatureContext | Unofficial Reqnroll Documentation",
    "summary": "Class FeatureContext Namespace Reqnroll Assembly Reqnroll.dll public class FeatureContext : ReqnrollContext, IDictionary<string, object>, ICollection<KeyValuePair<string, object>>, IReadOnlyDictionary<string, object>, IReadOnlyCollection<KeyValuePair<string, object>>, IEnumerable<KeyValuePair<string, object>>, IDictionary, ICollection, IEnumerable, IDeserializationCallback, ISerializable, IDisposable, IFeatureContext, IReqnrollContext Inheritance object Dictionary<string, object> ReqnrollContext FeatureContext Implements IDictionary<string, object> ICollection<KeyValuePair<string, object>> IReadOnlyDictionary<string, object> IReadOnlyCollection<KeyValuePair<string, object>> IEnumerable<KeyValuePair<string, object>> IDictionary ICollection IEnumerable IDeserializationCallback ISerializable IDisposable IFeatureContext IReqnrollContext Inherited Members ReqnrollContext.TestError ReqnrollContext.Dispose() ReqnrollContext.TryGetValue<TValue>(out TValue) ReqnrollContext.TryGetValue<TValue>(string, out TValue) ReqnrollContext.Set<T>(T) ReqnrollContext.Set<T>(T, string) ReqnrollContext.Set<T>(Func<T>) ReqnrollContext.Get<T>() ReqnrollContext.Get<T>(string) Dictionary<string, object>.Add(string, object) Dictionary<string, object>.Clear() Dictionary<string, object>.ContainsKey(string) Dictionary<string, object>.ContainsValue(object) Dictionary<string, object>.GetEnumerator() Dictionary<string, object>.GetObjectData(SerializationInfo, StreamingContext) Dictionary<string, object>.OnDeserialization(object) Dictionary<string, object>.Remove(string) Dictionary<string, object>.TryGetValue(string, out object) Dictionary<string, object>.Comparer Dictionary<string, object>.Count Dictionary<string, object>.this[string] Dictionary<string, object>.Keys Dictionary<string, object>.Values object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ProjectionExtensionMethods.ToProjection<T>(IEnumerable<T>, Table) Properties BindingCulture public CultureInfo BindingCulture { get; } Property Value CultureInfo Current [Obsolete(\"Please get the FeatureContext via Context Injection - https://go.reqnroll.net/doc-migrate-fc-current\")] public static FeatureContext Current { get; } Property Value FeatureContext FeatureContainer public IObjectContainer FeatureContainer { get; } Property Value IObjectContainer FeatureInfo public FeatureInfo FeatureInfo { get; } Property Value FeatureInfo"
  },
  "api/Reqnroll.FeatureInfo.html": {
    "href": "api/Reqnroll.FeatureInfo.html",
    "title": "Class FeatureInfo | Unofficial Reqnroll Documentation",
    "summary": "Class FeatureInfo Namespace Reqnroll Assembly Reqnroll.dll public class FeatureInfo Inheritance object FeatureInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors FeatureInfo(CultureInfo, string, string, string, ProgrammingLanguage, params string[]) public FeatureInfo(CultureInfo language, string folderPath, string title, string description, ProgrammingLanguage programmingLanguage, params string[] tags) Parameters language CultureInfo folderPath string title string description string programmingLanguage ProgrammingLanguage tags string[] FeatureInfo(CultureInfo, string, string, string, params string[]) public FeatureInfo(CultureInfo language, string folderPath, string title, string description, params string[] tags) Parameters language CultureInfo folderPath string title string description string tags string[] Properties Description public string Description { get; } Property Value string FolderPath public string FolderPath { get; } Property Value string GenerationTargetLanguage public ProgrammingLanguage GenerationTargetLanguage { get; } Property Value ProgrammingLanguage Language public CultureInfo Language { get; } Property Value CultureInfo Tags public string[] Tags { get; } Property Value string[] Title public string Title { get; } Property Value string"
  },
  "api/Reqnroll.FileAccess.BinaryFileAccessor.html": {
    "href": "api/Reqnroll.FileAccess.BinaryFileAccessor.html",
    "title": "Class BinaryFileAccessor | Unofficial Reqnroll Documentation",
    "summary": "Class BinaryFileAccessor Namespace Reqnroll.FileAccess Assembly Reqnroll.dll public class BinaryFileAccessor : IBinaryFileAccessor Inheritance object BinaryFileAccessor Implements IBinaryFileAccessor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods OpenAppendOrCreateFile(string) public IResult<Stream> OpenAppendOrCreateFile(string filePath) Parameters filePath string Returns IResult<Stream>"
  },
  "api/Reqnroll.FileAccess.IBinaryFileAccessor.html": {
    "href": "api/Reqnroll.FileAccess.IBinaryFileAccessor.html",
    "title": "Interface IBinaryFileAccessor | Unofficial Reqnroll Documentation",
    "summary": "Interface IBinaryFileAccessor Namespace Reqnroll.FileAccess Assembly Reqnroll.dll public interface IBinaryFileAccessor Methods OpenAppendOrCreateFile(string) IResult<Stream> OpenAppendOrCreateFile(string filePath) Parameters filePath string Returns IResult<Stream>"
  },
  "api/Reqnroll.FileAccess.html": {
    "href": "api/Reqnroll.FileAccess.html",
    "title": "Namespace Reqnroll.FileAccess | Unofficial Reqnroll Documentation",
    "summary": "Namespace Reqnroll.FileAccess Classes BinaryFileAccessor Interfaces IBinaryFileAccessor"
  },
  "api/Reqnroll.GivenAttribute.html": {
    "href": "api/Reqnroll.GivenAttribute.html",
    "title": "Class GivenAttribute | Unofficial Reqnroll Documentation",
    "summary": "Class GivenAttribute Namespace Reqnroll Assembly Reqnroll.dll Specifies a 'Given' step definition that matches for the provided regular expression. public class GivenAttribute : StepDefinitionBaseAttribute Inheritance object Attribute StepDefinitionBaseAttribute GivenAttribute Inherited Members StepDefinitionBaseAttribute.Types StepDefinitionBaseAttribute.Regex StepDefinitionBaseAttribute.Culture Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GivenAttribute() public GivenAttribute() GivenAttribute(string) public GivenAttribute(string regex) Parameters regex string GivenAttribute(string, string) public GivenAttribute(string regex, string culture) Parameters regex string culture string"
  },
  "api/Reqnroll.HookAttribute.html": {
    "href": "api/Reqnroll.HookAttribute.html",
    "title": "Class HookAttribute | Unofficial Reqnroll Documentation",
    "summary": "Class HookAttribute Namespace Reqnroll Assembly Reqnroll.dll [AttributeUsage(AttributeTargets.Method, AllowMultiple = true)] public abstract class HookAttribute : Attribute Inheritance object Attribute HookAttribute Derived AfterFeatureAttribute AfterScenarioAttribute AfterScenarioBlockAttribute AfterStepAttribute AfterTestRunAttribute BeforeFeatureAttribute BeforeScenarioAttribute BeforeScenarioBlockAttribute BeforeStepAttribute BeforeTestRunAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields DefaultOrder public const int DefaultOrder = 10000 Field Value int Properties Order The order in which the hook will be executed. Lower numbers go first. Orders are only applicable for hooks of the same type. Hooks with the same priority will have non-deterministic execution order. Default value is 10,000. public int Order { get; set; } Property Value int Tags public string[] Tags { get; } Property Value string[]"
  },
  "api/Reqnroll.IFeatureContext.html": {
    "href": "api/Reqnroll.IFeatureContext.html",
    "title": "Interface IFeatureContext | Unofficial Reqnroll Documentation",
    "summary": "Interface IFeatureContext Namespace Reqnroll Assembly Reqnroll.dll public interface IFeatureContext : IReqnrollContext Inherited Members IReqnrollContext.TestError Properties BindingCulture CultureInfo BindingCulture { get; } Property Value CultureInfo FeatureContainer IObjectContainer FeatureContainer { get; } Property Value IObjectContainer FeatureInfo FeatureInfo FeatureInfo { get; } Property Value FeatureInfo"
  },
  "api/Reqnroll.IReqnrollContext.html": {
    "href": "api/Reqnroll.IReqnrollContext.html",
    "title": "Interface IReqnrollContext | Unofficial Reqnroll Documentation",
    "summary": "Interface IReqnrollContext Namespace Reqnroll Assembly Reqnroll.dll public interface IReqnrollContext Properties TestError Exception TestError { get; } Property Value Exception"
  },
  "api/Reqnroll.IReqnrollOutputHelper.html": {
    "href": "api/Reqnroll.IReqnrollOutputHelper.html",
    "title": "Interface IReqnrollOutputHelper | Unofficial Reqnroll Documentation",
    "summary": "Interface IReqnrollOutputHelper Namespace Reqnroll Assembly Reqnroll.dll public interface IReqnrollOutputHelper Methods AddAttachment(string) void AddAttachment(string filePath) Parameters filePath string WriteLine(string) void WriteLine(string message) Parameters message string WriteLine(string, params object[]) void WriteLine(string format, params object[] args) Parameters format string args object[]"
  },
  "api/Reqnroll.IScenarioContext.html": {
    "href": "api/Reqnroll.IScenarioContext.html",
    "title": "Interface IScenarioContext | Unofficial Reqnroll Documentation",
    "summary": "Interface IScenarioContext Namespace Reqnroll Assembly Reqnroll.dll public interface IScenarioContext : IReqnrollContext Inherited Members IReqnrollContext.TestError Properties CurrentScenarioBlock ScenarioBlock CurrentScenarioBlock { get; } Property Value ScenarioBlock ScenarioContainer IObjectContainer ScenarioContainer { get; } Property Value IObjectContainer ScenarioExecutionStatus ScenarioExecutionStatus ScenarioExecutionStatus { get; } Property Value ScenarioExecutionStatus ScenarioInfo ScenarioInfo ScenarioInfo { get; } Property Value ScenarioInfo"
  },
  "api/Reqnroll.IScenarioStepContext.html": {
    "href": "api/Reqnroll.IScenarioStepContext.html",
    "title": "Interface IScenarioStepContext | Unofficial Reqnroll Documentation",
    "summary": "Interface IScenarioStepContext Namespace Reqnroll Assembly Reqnroll.dll public interface IScenarioStepContext : IReqnrollContext Inherited Members IReqnrollContext.TestError Properties Status ScenarioExecutionStatus Status { get; set; } Property Value ScenarioExecutionStatus StepInfo StepInfo StepInfo { get; } Property Value StepInfo"
  },
  "api/Reqnroll.ISyncTestRunner.html": {
    "href": "api/Reqnroll.ISyncTestRunner.html",
    "title": "Interface ISyncTestRunner | Unofficial Reqnroll Documentation",
    "summary": "Interface ISyncTestRunner Namespace Reqnroll Assembly Reqnroll.dll public interface ISyncTestRunner Properties FeatureContext FeatureContext FeatureContext { get; } Property Value FeatureContext ScenarioContext ScenarioContext ScenarioContext { get; } Property Value ScenarioContext TestWorkerId The ID of the parallel test worker processing the current scenario. string TestWorkerId { get; } Property Value string Methods And(string, string, Table, string) void And(string text, string multilineTextArg, Table tableArg, string keyword = null) Parameters text string multilineTextArg string tableArg Table keyword string But(string, string, Table, string) void But(string text, string multilineTextArg, Table tableArg, string keyword = null) Parameters text string multilineTextArg string tableArg Table keyword string CollectScenarioErrors() void CollectScenarioErrors() Given(string, string, Table, string) void Given(string text, string multilineTextArg, Table tableArg, string keyword = null) Parameters text string multilineTextArg string tableArg Table keyword string OnFeatureEnd() void OnFeatureEnd() OnFeatureStart(FeatureInfo) void OnFeatureStart(FeatureInfo featureInfo) Parameters featureInfo FeatureInfo OnScenarioEnd() void OnScenarioEnd() OnScenarioInitialize(ScenarioInfo) void OnScenarioInitialize(ScenarioInfo scenarioInfo) Parameters scenarioInfo ScenarioInfo OnScenarioStart() void OnScenarioStart() OnTestRunEnd() void OnTestRunEnd() OnTestRunStart() void OnTestRunStart() Pending() void Pending() SkipScenario() void SkipScenario() Then(string, string, Table, string) void Then(string text, string multilineTextArg, Table tableArg, string keyword = null) Parameters text string multilineTextArg string tableArg Table keyword string When(string, string, Table, string) void When(string text, string multilineTextArg, Table tableArg, string keyword = null) Parameters text string multilineTextArg string tableArg Table keyword string"
  },
  "api/Reqnroll.ITestRunContext.html": {
    "href": "api/Reqnroll.ITestRunContext.html",
    "title": "Interface ITestRunContext | Unofficial Reqnroll Documentation",
    "summary": "Interface ITestRunContext Namespace Reqnroll Assembly Reqnroll.dll public interface ITestRunContext : IReqnrollContext Inherited Members IReqnrollContext.TestError Properties TestDirectory string TestDirectory { get; } Property Value string TestRunContainer IObjectContainer TestRunContainer { get; } Property Value IObjectContainer"
  },
  "api/Reqnroll.ITestRunner.html": {
    "href": "api/Reqnroll.ITestRunner.html",
    "title": "Interface ITestRunner | Unofficial Reqnroll Documentation",
    "summary": "Interface ITestRunner Namespace Reqnroll Assembly Reqnroll.dll public interface ITestRunner Extension Methods TestRunnerDefaultArguments.AndAsync(ITestRunner, string) TestRunnerDefaultArguments.ButAsync(ITestRunner, string) TestRunnerDefaultArguments.GivenAsync(ITestRunner, string) TestRunnerDefaultArguments.ThenAsync(ITestRunner, string) TestRunnerDefaultArguments.WhenAsync(ITestRunner, string) Properties FeatureContext FeatureContext FeatureContext { get; } Property Value FeatureContext ScenarioContext ScenarioContext ScenarioContext { get; } Property Value ScenarioContext TestThreadContext ITestThreadContext TestThreadContext { get; } Property Value ITestThreadContext TestWorkerId The ID of the parallel test worker processing the current scenario. string TestWorkerId { get; } Property Value string Methods AndAsync(string, string, Table, string) Task AndAsync(string text, string multilineTextArg, Table tableArg, string keyword = null) Parameters text string multilineTextArg string tableArg Table keyword string Returns Task ButAsync(string, string, Table, string) Task ButAsync(string text, string multilineTextArg, Table tableArg, string keyword = null) Parameters text string multilineTextArg string tableArg Table keyword string Returns Task CollectScenarioErrorsAsync() Task CollectScenarioErrorsAsync() Returns Task GivenAsync(string, string, Table, string) Task GivenAsync(string text, string multilineTextArg, Table tableArg, string keyword = null) Parameters text string multilineTextArg string tableArg Table keyword string Returns Task InitializeTestRunner(string) [Obsolete(\"TestWorkerId is now managed by Reqnroll internally - Method will be removed in v3\")] void InitializeTestRunner(string testWorkerId) Parameters testWorkerId string OnFeatureEndAsync() Task OnFeatureEndAsync() Returns Task OnFeatureStartAsync(FeatureInfo) Task OnFeatureStartAsync(FeatureInfo featureInfo) Parameters featureInfo FeatureInfo Returns Task OnScenarioEndAsync() Task OnScenarioEndAsync() Returns Task OnScenarioInitialize(ScenarioInfo) void OnScenarioInitialize(ScenarioInfo scenarioInfo) Parameters scenarioInfo ScenarioInfo OnScenarioStartAsync() Task OnScenarioStartAsync() Returns Task OnTestRunEndAsync() Task OnTestRunEndAsync() Returns Task OnTestRunStartAsync() Task OnTestRunStartAsync() Returns Task Pending() void Pending() SkipScenario() void SkipScenario() ThenAsync(string, string, Table, string) Task ThenAsync(string text, string multilineTextArg, Table tableArg, string keyword = null) Parameters text string multilineTextArg string tableArg Table keyword string Returns Task WhenAsync(string, string, Table, string) Task WhenAsync(string text, string multilineTextArg, Table tableArg, string keyword = null) Parameters text string multilineTextArg string tableArg Table keyword string Returns Task"
  },
  "api/Reqnroll.ITestRunnerManager.html": {
    "href": "api/Reqnroll.ITestRunnerManager.html",
    "title": "Interface ITestRunnerManager | Unofficial Reqnroll Documentation",
    "summary": "Interface ITestRunnerManager Namespace Reqnroll Assembly Reqnroll.dll public interface ITestRunnerManager Properties BindingAssemblies Assembly[] BindingAssemblies { get; } Property Value Assembly[] IsMultiThreaded bool IsMultiThreaded { get; } Property Value bool TestAssembly Assembly TestAssembly { get; } Property Value Assembly Methods DisposeAsync() Task DisposeAsync() Returns Task FireTestRunEndAsync() Task FireTestRunEndAsync() Returns Task FireTestRunStartAsync() Task FireTestRunStartAsync() Returns Task GetTestRunner(FeatureInfo) ITestRunner GetTestRunner(FeatureInfo featureHint = null) Parameters featureHint FeatureInfo Returns ITestRunner Initialize(Assembly) void Initialize(Assembly testAssembly) Parameters testAssembly Assembly ReleaseTestThreadContext(ITestThreadContext) void ReleaseTestThreadContext(ITestThreadContext testThreadContext) Parameters testThreadContext ITestThreadContext"
  },
  "api/Reqnroll.ITestThreadContext.html": {
    "href": "api/Reqnroll.ITestThreadContext.html",
    "title": "Interface ITestThreadContext | Unofficial Reqnroll Documentation",
    "summary": "Interface ITestThreadContext Namespace Reqnroll Assembly Reqnroll.dll public interface ITestThreadContext : IReqnrollContext Inherited Members IReqnrollContext.TestError Properties TestThreadContainer IObjectContainer TestThreadContainer { get; } Property Value IObjectContainer"
  },
  "api/Reqnroll.Infrastructure.BindingAssemblyLoader.html": {
    "href": "api/Reqnroll.Infrastructure.BindingAssemblyLoader.html",
    "title": "Class BindingAssemblyLoader | Unofficial Reqnroll Documentation",
    "summary": "Class BindingAssemblyLoader Namespace Reqnroll.Infrastructure Assembly Reqnroll.dll public class BindingAssemblyLoader : IBindingAssemblyLoader Inheritance object BindingAssemblyLoader Implements IBindingAssemblyLoader Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Load(string) public Assembly Load(string assemblyName) Parameters assemblyName string Returns Assembly"
  },
  "api/Reqnroll.Infrastructure.BlockingSyncTestRunner.html": {
    "href": "api/Reqnroll.Infrastructure.BlockingSyncTestRunner.html",
    "title": "Class BlockingSyncTestRunner | Unofficial Reqnroll Documentation",
    "summary": "Class BlockingSyncTestRunner Namespace Reqnroll.Infrastructure Assembly Reqnroll.dll public class BlockingSyncTestRunner : ISyncTestRunner Inheritance object BlockingSyncTestRunner Implements ISyncTestRunner Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors BlockingSyncTestRunner(ITestRunner) public BlockingSyncTestRunner(ITestRunner testRunner) Parameters testRunner ITestRunner Properties FeatureContext public FeatureContext FeatureContext { get; } Property Value FeatureContext ScenarioContext public ScenarioContext ScenarioContext { get; } Property Value ScenarioContext TestWorkerId The ID of the parallel test worker processing the current scenario. public string TestWorkerId { get; } Property Value string Methods And(string, string, Table, string) public void And(string text, string multilineTextArg, Table tableArg, string keyword = null) Parameters text string multilineTextArg string tableArg Table keyword string But(string, string, Table, string) public void But(string text, string multilineTextArg, Table tableArg, string keyword = null) Parameters text string multilineTextArg string tableArg Table keyword string CollectScenarioErrors() public void CollectScenarioErrors() Given(string, string, Table, string) public void Given(string text, string multilineTextArg, Table tableArg, string keyword = null) Parameters text string multilineTextArg string tableArg Table keyword string OnFeatureEnd() public void OnFeatureEnd() OnFeatureStart(FeatureInfo) public void OnFeatureStart(FeatureInfo featureInfo) Parameters featureInfo FeatureInfo OnScenarioEnd() public void OnScenarioEnd() OnScenarioInitialize(ScenarioInfo) public void OnScenarioInitialize(ScenarioInfo scenarioInfo) Parameters scenarioInfo ScenarioInfo OnScenarioStart() public void OnScenarioStart() OnTestRunEnd() public void OnTestRunEnd() OnTestRunStart() public void OnTestRunStart() Pending() public void Pending() SkipScenario() public void SkipScenario() Then(string, string, Table, string) public void Then(string text, string multilineTextArg, Table tableArg, string keyword = null) Parameters text string multilineTextArg string tableArg Table keyword string When(string, string, Table, string) public void When(string text, string multilineTextArg, Table tableArg, string keyword = null) Parameters text string multilineTextArg string tableArg Table keyword string"
  },
  "api/Reqnroll.Infrastructure.ContainerBuilder.html": {
    "href": "api/Reqnroll.Infrastructure.ContainerBuilder.html",
    "title": "Class ContainerBuilder | Unofficial Reqnroll Documentation",
    "summary": "Class ContainerBuilder Namespace Reqnroll.Infrastructure Assembly Reqnroll.dll public class ContainerBuilder : IContainerBuilder Inheritance object ContainerBuilder Implements IContainerBuilder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ContainerBuilder(IDefaultDependencyProvider) public ContainerBuilder(IDefaultDependencyProvider defaultDependencyProvider = null) Parameters defaultDependencyProvider IDefaultDependencyProvider Fields DefaultDependencyProvider public static IDefaultDependencyProvider DefaultDependencyProvider Field Value IDefaultDependencyProvider Properties SkipLoadingProvider public bool SkipLoadingProvider { get; set; } Property Value bool Methods CreateFeatureContainer(IObjectContainer, FeatureInfo) public virtual IObjectContainer CreateFeatureContainer(IObjectContainer testThreadContainer, FeatureInfo featureInfo) Parameters testThreadContainer IObjectContainer featureInfo FeatureInfo Returns IObjectContainer CreateGlobalContainer(Assembly, IRuntimeConfigurationProvider) public virtual IObjectContainer CreateGlobalContainer(Assembly testAssembly, IRuntimeConfigurationProvider configurationProvider = null) Parameters testAssembly Assembly configurationProvider IRuntimeConfigurationProvider Returns IObjectContainer CreateScenarioContainer(IObjectContainer, ScenarioInfo) public virtual IObjectContainer CreateScenarioContainer(IObjectContainer testThreadContainer, ScenarioInfo scenarioInfo) Parameters testThreadContainer IObjectContainer scenarioInfo ScenarioInfo Returns IObjectContainer CreateTestThreadContainer(IObjectContainer) public virtual IObjectContainer CreateTestThreadContainer(IObjectContainer globalContainer) Parameters globalContainer IObjectContainer Returns IObjectContainer LoadPlugin(string, IRuntimePluginLoader, RuntimePluginEvents, UnitTestProviderConfiguration, ITraceListener, bool) protected virtual void LoadPlugin(string pluginPath, IRuntimePluginLoader pluginLoader, RuntimePluginEvents runtimePluginEvents, UnitTestProviderConfiguration unitTestProviderConfigration, ITraceListener traceListener, bool traceMissingPluginAttribute) Parameters pluginPath string pluginLoader IRuntimePluginLoader runtimePluginEvents RuntimePluginEvents unitTestProviderConfigration UnitTestProviderConfiguration traceListener ITraceListener traceMissingPluginAttribute bool LoadPlugins(IRuntimeConfigurationProvider, ObjectContainer, RuntimePluginEvents, ReqnrollConfiguration, UnitTestProviderConfiguration, Assembly) protected virtual void LoadPlugins(IRuntimeConfigurationProvider configurationProvider, ObjectContainer container, RuntimePluginEvents runtimePluginEvents, ReqnrollConfiguration reqnrollConfiguration, UnitTestProviderConfiguration unitTestProviderConfigration, Assembly testAssembly) Parameters configurationProvider IRuntimeConfigurationProvider container ObjectContainer runtimePluginEvents RuntimePluginEvents reqnrollConfiguration ReqnrollConfiguration unitTestProviderConfigration UnitTestProviderConfiguration testAssembly Assembly RegisterDefaults(ObjectContainer) protected virtual void RegisterDefaults(ObjectContainer container) Parameters container ObjectContainer"
  },
  "api/Reqnroll.Infrastructure.ContextManager.html": {
    "href": "api/Reqnroll.Infrastructure.ContextManager.html",
    "title": "Class ContextManager | Unofficial Reqnroll Documentation",
    "summary": "Class ContextManager Namespace Reqnroll.Infrastructure Assembly Reqnroll.dll public class ContextManager : IContextManager, IDisposable Inheritance object ContextManager Implements IContextManager IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ContextManager(ITestTracer, IObjectContainer, IContainerBuilder) public ContextManager(ITestTracer testTracer, IObjectContainer testThreadContainer, IContainerBuilder containerBuilder) Parameters testTracer ITestTracer testThreadContainer IObjectContainer containerBuilder IContainerBuilder Properties CurrentTopLevelStepDefinitionType Holds the StepDefinitionType of the last step that was executed from the actual feature file, excluding the types of the steps that were executed during the calling of a step public StepDefinitionType? CurrentTopLevelStepDefinitionType { get; } Property Value StepDefinitionType? FeatureContext public FeatureContext FeatureContext { get; } Property Value FeatureContext ScenarioContext public ScenarioContext ScenarioContext { get; } Property Value ScenarioContext StepContext public ScenarioStepContext StepContext { get; } Property Value ScenarioStepContext TestThreadContext public TestThreadContext TestThreadContext { get; } Property Value TestThreadContext Methods CleanupFeatureContext() public void CleanupFeatureContext() CleanupScenarioContext() public void CleanupScenarioContext() CleanupStepContext() public void CleanupStepContext() Dispose() public void Dispose() InitializeFeatureContext(FeatureInfo) public void InitializeFeatureContext(FeatureInfo featureInfo) Parameters featureInfo FeatureInfo InitializeScenarioContext(ScenarioInfo) public void InitializeScenarioContext(ScenarioInfo scenarioInfo) Parameters scenarioInfo ScenarioInfo InitializeStepContext(StepInfo) public void InitializeStepContext(StepInfo stepInfo) Parameters stepInfo StepInfo"
  },
  "api/Reqnroll.Infrastructure.DefaultDependencyProvider.html": {
    "href": "api/Reqnroll.Infrastructure.DefaultDependencyProvider.html",
    "title": "Class DefaultDependencyProvider | Unofficial Reqnroll Documentation",
    "summary": "Class DefaultDependencyProvider Namespace Reqnroll.Infrastructure Assembly Reqnroll.dll public class DefaultDependencyProvider : IDefaultDependencyProvider Inheritance object DefaultDependencyProvider Implements IDefaultDependencyProvider Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods RegisterGlobalContainerDefaults(ObjectContainer) public virtual void RegisterGlobalContainerDefaults(ObjectContainer container) Parameters container ObjectContainer RegisterScenarioContainerDefaults(ObjectContainer) public void RegisterScenarioContainerDefaults(ObjectContainer scenarioContainer) Parameters scenarioContainer ObjectContainer RegisterTestThreadContainerDefaults(ObjectContainer) public virtual void RegisterTestThreadContainerDefaults(ObjectContainer testThreadContainer) Parameters testThreadContainer ObjectContainer"
  },
  "api/Reqnroll.Infrastructure.GeneratorPluginAttribute.html": {
    "href": "api/Reqnroll.Infrastructure.GeneratorPluginAttribute.html",
    "title": "Class GeneratorPluginAttribute | Unofficial Reqnroll Documentation",
    "summary": "Class GeneratorPluginAttribute Namespace Reqnroll.Infrastructure Assembly Reqnroll.dll [AttributeUsage(AttributeTargets.Assembly, AllowMultiple = false)] public class GeneratorPluginAttribute : Attribute Inheritance object Attribute GeneratorPluginAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GeneratorPluginAttribute(Type) public GeneratorPluginAttribute(Type pluginType) Parameters pluginType Type Properties PluginType public Type PluginType { get; } Property Value Type"
  },
  "api/Reqnroll.Infrastructure.IBindingAssemblyLoader.html": {
    "href": "api/Reqnroll.Infrastructure.IBindingAssemblyLoader.html",
    "title": "Interface IBindingAssemblyLoader | Unofficial Reqnroll Documentation",
    "summary": "Interface IBindingAssemblyLoader Namespace Reqnroll.Infrastructure Assembly Reqnroll.dll public interface IBindingAssemblyLoader Methods Load(string) Assembly Load(string assemblyName) Parameters assemblyName string Returns Assembly"
  },
  "api/Reqnroll.Infrastructure.IContainerBuilder.html": {
    "href": "api/Reqnroll.Infrastructure.IContainerBuilder.html",
    "title": "Interface IContainerBuilder | Unofficial Reqnroll Documentation",
    "summary": "Interface IContainerBuilder Namespace Reqnroll.Infrastructure Assembly Reqnroll.dll public interface IContainerBuilder Methods CreateFeatureContainer(IObjectContainer, FeatureInfo) IObjectContainer CreateFeatureContainer(IObjectContainer testThreadContainer, FeatureInfo featureInfo) Parameters testThreadContainer IObjectContainer featureInfo FeatureInfo Returns IObjectContainer CreateGlobalContainer(Assembly, IRuntimeConfigurationProvider) IObjectContainer CreateGlobalContainer(Assembly testAssembly, IRuntimeConfigurationProvider configurationProvider = null) Parameters testAssembly Assembly configurationProvider IRuntimeConfigurationProvider Returns IObjectContainer CreateScenarioContainer(IObjectContainer, ScenarioInfo) IObjectContainer CreateScenarioContainer(IObjectContainer testThreadContainer, ScenarioInfo scenarioInfo) Parameters testThreadContainer IObjectContainer scenarioInfo ScenarioInfo Returns IObjectContainer CreateTestThreadContainer(IObjectContainer) IObjectContainer CreateTestThreadContainer(IObjectContainer globalContainer) Parameters globalContainer IObjectContainer Returns IObjectContainer"
  },
  "api/Reqnroll.Infrastructure.IContainerDependentObject.html": {
    "href": "api/Reqnroll.Infrastructure.IContainerDependentObject.html",
    "title": "Interface IContainerDependentObject | Unofficial Reqnroll Documentation",
    "summary": "Interface IContainerDependentObject Namespace Reqnroll.Infrastructure Assembly Reqnroll.dll public interface IContainerDependentObject Methods SetObjectContainer(IObjectContainer) void SetObjectContainer(IObjectContainer container) Parameters container IObjectContainer"
  },
  "api/Reqnroll.Infrastructure.IContextManager.html": {
    "href": "api/Reqnroll.Infrastructure.IContextManager.html",
    "title": "Interface IContextManager | Unofficial Reqnroll Documentation",
    "summary": "Interface IContextManager Namespace Reqnroll.Infrastructure Assembly Reqnroll.dll public interface IContextManager Properties CurrentTopLevelStepDefinitionType StepDefinitionType? CurrentTopLevelStepDefinitionType { get; } Property Value StepDefinitionType? FeatureContext FeatureContext FeatureContext { get; } Property Value FeatureContext ScenarioContext ScenarioContext ScenarioContext { get; } Property Value ScenarioContext StepContext ScenarioStepContext StepContext { get; } Property Value ScenarioStepContext TestThreadContext TestThreadContext TestThreadContext { get; } Property Value TestThreadContext Methods CleanupFeatureContext() void CleanupFeatureContext() CleanupScenarioContext() void CleanupScenarioContext() CleanupStepContext() void CleanupStepContext() InitializeFeatureContext(FeatureInfo) void InitializeFeatureContext(FeatureInfo featureInfo) Parameters featureInfo FeatureInfo InitializeScenarioContext(ScenarioInfo) void InitializeScenarioContext(ScenarioInfo scenarioInfo) Parameters scenarioInfo ScenarioInfo InitializeStepContext(StepInfo) void InitializeStepContext(StepInfo stepInfo) Parameters stepInfo StepInfo"
  },
  "api/Reqnroll.Infrastructure.IDefaultDependencyProvider.html": {
    "href": "api/Reqnroll.Infrastructure.IDefaultDependencyProvider.html",
    "title": "Interface IDefaultDependencyProvider | Unofficial Reqnroll Documentation",
    "summary": "Interface IDefaultDependencyProvider Namespace Reqnroll.Infrastructure Assembly Reqnroll.dll public interface IDefaultDependencyProvider Methods RegisterGlobalContainerDefaults(ObjectContainer) void RegisterGlobalContainerDefaults(ObjectContainer container) Parameters container ObjectContainer RegisterScenarioContainerDefaults(ObjectContainer) void RegisterScenarioContainerDefaults(ObjectContainer scenarioContainer) Parameters scenarioContainer ObjectContainer RegisterTestThreadContainerDefaults(ObjectContainer) void RegisterTestThreadContainerDefaults(ObjectContainer testThreadContainer) Parameters testThreadContainer ObjectContainer"
  },
  "api/Reqnroll.Infrastructure.IMatchArgumentCalculator.html": {
    "href": "api/Reqnroll.Infrastructure.IMatchArgumentCalculator.html",
    "title": "Interface IMatchArgumentCalculator | Unofficial Reqnroll Documentation",
    "summary": "Interface IMatchArgumentCalculator Namespace Reqnroll.Infrastructure Assembly Reqnroll.dll public interface IMatchArgumentCalculator Methods CalculateArguments(Match, StepInstance, IStepDefinitionBinding) object[] CalculateArguments(Match match, StepInstance stepInstance, IStepDefinitionBinding stepDefinitionBinding) Parameters match Match stepInstance StepInstance stepDefinitionBinding IStepDefinitionBinding Returns object[]"
  },
  "api/Reqnroll.Infrastructure.IObsoleteStepHandler.html": {
    "href": "api/Reqnroll.Infrastructure.IObsoleteStepHandler.html",
    "title": "Interface IObsoleteStepHandler | Unofficial Reqnroll Documentation",
    "summary": "Interface IObsoleteStepHandler Namespace Reqnroll.Infrastructure Assembly Reqnroll.dll public interface IObsoleteStepHandler Methods Handle(BindingMatch) void Handle(BindingMatch bindingMatch) Parameters bindingMatch BindingMatch"
  },
  "api/Reqnroll.Infrastructure.IReqnrollAttachmentHandler.html": {
    "href": "api/Reqnroll.Infrastructure.IReqnrollAttachmentHandler.html",
    "title": "Interface IReqnrollAttachmentHandler | Unofficial Reqnroll Documentation",
    "summary": "Interface IReqnrollAttachmentHandler Namespace Reqnroll.Infrastructure Assembly Reqnroll.dll public interface IReqnrollAttachmentHandler Methods AddAttachment(string) void AddAttachment(string filePath) Parameters filePath string"
  },
  "api/Reqnroll.Infrastructure.ISkippedStepHandler.html": {
    "href": "api/Reqnroll.Infrastructure.ISkippedStepHandler.html",
    "title": "Interface ISkippedStepHandler | Unofficial Reqnroll Documentation",
    "summary": "Interface ISkippedStepHandler Namespace Reqnroll.Infrastructure Assembly Reqnroll.dll public interface ISkippedStepHandler Methods Handle(ScenarioContext) void Handle(ScenarioContext scenarioContext) Parameters scenarioContext ScenarioContext"
  },
  "api/Reqnroll.Infrastructure.IStepDefinitionMatchService.html": {
    "href": "api/Reqnroll.Infrastructure.IStepDefinitionMatchService.html",
    "title": "Interface IStepDefinitionMatchService | Unofficial Reqnroll Documentation",
    "summary": "Interface IStepDefinitionMatchService Namespace Reqnroll.Infrastructure Assembly Reqnroll.dll public interface IStepDefinitionMatchService Properties Ready bool Ready { get; } Property Value bool Methods GetBestMatch(StepInstance, CultureInfo, out StepDefinitionAmbiguityReason, out List<BindingMatch>) BindingMatch GetBestMatch(StepInstance stepInstance, CultureInfo bindingCulture, out StepDefinitionAmbiguityReason ambiguityReason, out List<BindingMatch> candidatingMatches) Parameters stepInstance StepInstance bindingCulture CultureInfo ambiguityReason StepDefinitionAmbiguityReason candidatingMatches List<BindingMatch> Returns BindingMatch Match(IStepDefinitionBinding, StepInstance, CultureInfo, bool, bool, bool) BindingMatch Match(IStepDefinitionBinding stepDefinitionBinding, StepInstance stepInstance, CultureInfo bindingCulture, bool useRegexMatching = true, bool useParamMatching = true, bool useScopeMatching = true) Parameters stepDefinitionBinding IStepDefinitionBinding stepInstance StepInstance bindingCulture CultureInfo useRegexMatching bool useParamMatching bool useScopeMatching bool Returns BindingMatch"
  },
  "api/Reqnroll.Infrastructure.ITestAssemblyProvider.html": {
    "href": "api/Reqnroll.Infrastructure.ITestAssemblyProvider.html",
    "title": "Interface ITestAssemblyProvider | Unofficial Reqnroll Documentation",
    "summary": "Interface ITestAssemblyProvider Namespace Reqnroll.Infrastructure Assembly Reqnroll.dll public interface ITestAssemblyProvider Properties TestAssembly Assembly TestAssembly { get; } Property Value Assembly Methods RegisterTestAssembly(Assembly) void RegisterTestAssembly(Assembly testAssembly) Parameters testAssembly Assembly"
  },
  "api/Reqnroll.Infrastructure.ITestExecutionEngine.html": {
    "href": "api/Reqnroll.Infrastructure.ITestExecutionEngine.html",
    "title": "Interface ITestExecutionEngine | Unofficial Reqnroll Documentation",
    "summary": "Interface ITestExecutionEngine Namespace Reqnroll.Infrastructure Assembly Reqnroll.dll public interface ITestExecutionEngine Properties FeatureContext FeatureContext FeatureContext { get; } Property Value FeatureContext ScenarioContext ScenarioContext ScenarioContext { get; } Property Value ScenarioContext TestThreadContext ITestThreadContext TestThreadContext { get; } Property Value ITestThreadContext Methods OnAfterLastStepAsync() Task OnAfterLastStepAsync() Returns Task OnFeatureEndAsync() Task OnFeatureEndAsync() Returns Task OnFeatureStartAsync(FeatureInfo) Task OnFeatureStartAsync(FeatureInfo featureInfo) Parameters featureInfo FeatureInfo Returns Task OnScenarioEndAsync() Task OnScenarioEndAsync() Returns Task OnScenarioInitialize(ScenarioInfo) void OnScenarioInitialize(ScenarioInfo scenarioInfo) Parameters scenarioInfo ScenarioInfo OnScenarioSkipped() void OnScenarioSkipped() OnScenarioStartAsync() Task OnScenarioStartAsync() Returns Task OnTestRunEndAsync() Task OnTestRunEndAsync() Returns Task OnTestRunStartAsync() Task OnTestRunStartAsync() Returns Task Pending() void Pending() StepAsync(StepDefinitionKeyword, string, string, string, Table) Task StepAsync(StepDefinitionKeyword stepDefinitionKeyword, string keyword, string text, string multilineTextArg, Table tableArg) Parameters stepDefinitionKeyword StepDefinitionKeyword keyword string text string multilineTextArg string tableArg Table Returns Task"
  },
  "api/Reqnroll.Infrastructure.ITestObjectResolver.html": {
    "href": "api/Reqnroll.Infrastructure.ITestObjectResolver.html",
    "title": "Interface ITestObjectResolver | Unofficial Reqnroll Documentation",
    "summary": "Interface ITestObjectResolver Namespace Reqnroll.Infrastructure Assembly Reqnroll.dll Resolves user created test objects from different scopes (scenario, feature, test thread). public interface ITestObjectResolver Remarks Notes to the implementors: The test objects might be dependent on particular Reqnroll infrastructure, therefore the implemented resolution logic should support resolving the following objects (from the provided Reqnroll container): ScenarioContext, FeatureContext, TestThreadContext and IObjectContainer (to be able to resolve any other Reqnroll infrastucture). So basically the resolution of these classes has to be forwarded to the original container. If the resolved (top level) object implements IContainerDependentObject, the method SetObjectContainer(IObjectContainer) must be called, passing in the original Reqnroll container. (The Steps base class needs this.) Methods ResolveBindingInstance(Type, IObjectContainer) object ResolveBindingInstance(Type bindingType, IObjectContainer container) Parameters bindingType Type container IObjectContainer Returns object"
  },
  "api/Reqnroll.Infrastructure.ITestPendingMessageFactory.html": {
    "href": "api/Reqnroll.Infrastructure.ITestPendingMessageFactory.html",
    "title": "Interface ITestPendingMessageFactory | Unofficial Reqnroll Documentation",
    "summary": "Interface ITestPendingMessageFactory Namespace Reqnroll.Infrastructure Assembly Reqnroll.dll public interface ITestPendingMessageFactory Methods BuildFromScenarioContext(ScenarioContext) string BuildFromScenarioContext(ScenarioContext scenarioContext) Parameters scenarioContext ScenarioContext Returns string"
  },
  "api/Reqnroll.Infrastructure.ITestRunnerFactory.html": {
    "href": "api/Reqnroll.Infrastructure.ITestRunnerFactory.html",
    "title": "Interface ITestRunnerFactory | Unofficial Reqnroll Documentation",
    "summary": "Interface ITestRunnerFactory Namespace Reqnroll.Infrastructure Assembly Reqnroll.dll public interface ITestRunnerFactory Methods Create(Assembly) ITestRunner Create(Assembly testAssembly) Parameters testAssembly Assembly Returns ITestRunner"
  },
  "api/Reqnroll.Infrastructure.ITestUndefinedMessageFactory.html": {
    "href": "api/Reqnroll.Infrastructure.ITestUndefinedMessageFactory.html",
    "title": "Interface ITestUndefinedMessageFactory | Unofficial Reqnroll Documentation",
    "summary": "Interface ITestUndefinedMessageFactory Namespace Reqnroll.Infrastructure Assembly Reqnroll.dll public interface ITestUndefinedMessageFactory Methods BuildFromContext(ScenarioContext, FeatureContext) string BuildFromContext(ScenarioContext scenarioContext, FeatureContext featureContext) Parameters scenarioContext ScenarioContext featureContext FeatureContext Returns string"
  },
  "api/Reqnroll.Infrastructure.MatchArgumentCalculator.html": {
    "href": "api/Reqnroll.Infrastructure.MatchArgumentCalculator.html",
    "title": "Class MatchArgumentCalculator | Unofficial Reqnroll Documentation",
    "summary": "Class MatchArgumentCalculator Namespace Reqnroll.Infrastructure Assembly Reqnroll.dll public class MatchArgumentCalculator : IMatchArgumentCalculator Inheritance object MatchArgumentCalculator Implements IMatchArgumentCalculator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CalculateArguments(Match, StepInstance, IStepDefinitionBinding) public object[] CalculateArguments(Match match, StepInstance stepInstance, IStepDefinitionBinding stepDefinitionBinding) Parameters match Match stepInstance StepInstance stepDefinitionBinding IStepDefinitionBinding Returns object[]"
  },
  "api/Reqnroll.Infrastructure.ObsoleteStepHandler.html": {
    "href": "api/Reqnroll.Infrastructure.ObsoleteStepHandler.html",
    "title": "Class ObsoleteStepHandler | Unofficial Reqnroll Documentation",
    "summary": "Class ObsoleteStepHandler Namespace Reqnroll.Infrastructure Assembly Reqnroll.dll public class ObsoleteStepHandler : IObsoleteStepHandler Inheritance object ObsoleteStepHandler Implements IObsoleteStepHandler Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ObsoleteStepHandler(IErrorProvider, ITestTracer, ReqnrollConfiguration) public ObsoleteStepHandler(IErrorProvider errorProvider, ITestTracer testTracer, ReqnrollConfiguration reqnrollConfiguration) Parameters errorProvider IErrorProvider testTracer ITestTracer reqnrollConfiguration ReqnrollConfiguration Fields reqnrollConfiguration protected readonly ReqnrollConfiguration reqnrollConfiguration Field Value ReqnrollConfiguration Methods Handle(BindingMatch) public void Handle(BindingMatch bindingMatch) Parameters bindingMatch BindingMatch"
  },
  "api/Reqnroll.Infrastructure.ReqnrollAttachmentHandler.html": {
    "href": "api/Reqnroll.Infrastructure.ReqnrollAttachmentHandler.html",
    "title": "Class ReqnrollAttachmentHandler | Unofficial Reqnroll Documentation",
    "summary": "Class ReqnrollAttachmentHandler Namespace Reqnroll.Infrastructure Assembly Reqnroll.dll public class ReqnrollAttachmentHandler : IReqnrollAttachmentHandler Inheritance object ReqnrollAttachmentHandler Implements IReqnrollAttachmentHandler Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ReqnrollAttachmentHandler(ITraceListener) protected ReqnrollAttachmentHandler(ITraceListener traceListener) Parameters traceListener ITraceListener Methods AddAttachment(string) public virtual void AddAttachment(string filePath) Parameters filePath string"
  },
  "api/Reqnroll.Infrastructure.ReqnrollOutputHelper.html": {
    "href": "api/Reqnroll.Infrastructure.ReqnrollOutputHelper.html",
    "title": "Class ReqnrollOutputHelper | Unofficial Reqnroll Documentation",
    "summary": "Class ReqnrollOutputHelper Namespace Reqnroll.Infrastructure Assembly Reqnroll.dll public class ReqnrollOutputHelper : IReqnrollOutputHelper Inheritance object ReqnrollOutputHelper Implements IReqnrollOutputHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ReqnrollOutputHelper(ITestThreadExecutionEventPublisher, ITraceListener, IReqnrollAttachmentHandler) public ReqnrollOutputHelper(ITestThreadExecutionEventPublisher testThreadExecutionEventPublisher, ITraceListener traceListener, IReqnrollAttachmentHandler reqnrollAttachmentHandler) Parameters testThreadExecutionEventPublisher ITestThreadExecutionEventPublisher traceListener ITraceListener reqnrollAttachmentHandler IReqnrollAttachmentHandler Methods AddAttachment(string) public void AddAttachment(string filePath) Parameters filePath string WriteLine(string) public void WriteLine(string message) Parameters message string WriteLine(string, params object[]) public void WriteLine(string format, params object[] args) Parameters format string args object[]"
  },
  "api/Reqnroll.Infrastructure.StepDefinitionAmbiguityReason.html": {
    "href": "api/Reqnroll.Infrastructure.StepDefinitionAmbiguityReason.html",
    "title": "Enum StepDefinitionAmbiguityReason | Unofficial Reqnroll Documentation",
    "summary": "Enum StepDefinitionAmbiguityReason Namespace Reqnroll.Infrastructure Assembly Reqnroll.dll public enum StepDefinitionAmbiguityReason Fields AmbiguousScopes = 2 AmbiguousSteps = 1 None = 0 ParameterErrors = 3"
  },
  "api/Reqnroll.Infrastructure.StepDefinitionMatchService.html": {
    "href": "api/Reqnroll.Infrastructure.StepDefinitionMatchService.html",
    "title": "Class StepDefinitionMatchService | Unofficial Reqnroll Documentation",
    "summary": "Class StepDefinitionMatchService Namespace Reqnroll.Infrastructure Assembly Reqnroll.dll public class StepDefinitionMatchService : IStepDefinitionMatchService Inheritance object StepDefinitionMatchService Implements IStepDefinitionMatchService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors StepDefinitionMatchService(IBindingRegistry, IStepArgumentTypeConverter, IErrorProvider, IMatchArgumentCalculator) public StepDefinitionMatchService(IBindingRegistry bindingRegistry, IStepArgumentTypeConverter stepArgumentTypeConverter, IErrorProvider errorProvider, IMatchArgumentCalculator matchArgumentCalculator) Parameters bindingRegistry IBindingRegistry stepArgumentTypeConverter IStepArgumentTypeConverter errorProvider IErrorProvider matchArgumentCalculator IMatchArgumentCalculator Properties Ready public bool Ready { get; } Property Value bool Methods GetBestMatch(StepInstance, CultureInfo, out StepDefinitionAmbiguityReason, out List<BindingMatch>) public BindingMatch GetBestMatch(StepInstance stepInstance, CultureInfo bindingCulture, out StepDefinitionAmbiguityReason ambiguityReason, out List<BindingMatch> candidatingMatches) Parameters stepInstance StepInstance bindingCulture CultureInfo ambiguityReason StepDefinitionAmbiguityReason candidatingMatches List<BindingMatch> Returns BindingMatch GetCandidatingBindings(StepInstance, CultureInfo, bool, bool, bool) protected IEnumerable<BindingMatch> GetCandidatingBindings(StepInstance stepInstance, CultureInfo bindingCulture, bool useRegexMatching = true, bool useParamMatching = true, bool useScopeMatching = true) Parameters stepInstance StepInstance bindingCulture CultureInfo useRegexMatching bool useParamMatching bool useScopeMatching bool Returns IEnumerable<BindingMatch> GetCandidatingBindingsForBestMatch(StepInstance, CultureInfo) protected virtual IEnumerable<BindingMatch> GetCandidatingBindingsForBestMatch(StepInstance stepInstance, CultureInfo bindingCulture) Parameters stepInstance StepInstance bindingCulture CultureInfo Returns IEnumerable<BindingMatch> Match(IStepDefinitionBinding, StepInstance, CultureInfo, bool, bool, bool) public BindingMatch Match(IStepDefinitionBinding stepDefinitionBinding, StepInstance stepInstance, CultureInfo bindingCulture, bool useRegexMatching = true, bool useParamMatching = true, bool useScopeMatching = true) Parameters stepDefinitionBinding IStepDefinitionBinding stepInstance StepInstance bindingCulture CultureInfo useRegexMatching bool useParamMatching bool useScopeMatching bool Returns BindingMatch OnNoMatch(StepInstance, CultureInfo, out List<BindingMatch>) protected virtual StepDefinitionAmbiguityReason OnNoMatch(StepInstance stepInstance, CultureInfo bindingCulture, out List<BindingMatch> matches) Parameters stepInstance StepInstance bindingCulture CultureInfo matches List<BindingMatch> Returns StepDefinitionAmbiguityReason"
  },
  "api/Reqnroll.Infrastructure.TestAssemblyProvider.html": {
    "href": "api/Reqnroll.Infrastructure.TestAssemblyProvider.html",
    "title": "Class TestAssemblyProvider | Unofficial Reqnroll Documentation",
    "summary": "Class TestAssemblyProvider Namespace Reqnroll.Infrastructure Assembly Reqnroll.dll public class TestAssemblyProvider : ITestAssemblyProvider Inheritance object TestAssemblyProvider Implements ITestAssemblyProvider Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties TestAssembly public Assembly TestAssembly { get; } Property Value Assembly Methods RegisterTestAssembly(Assembly) public void RegisterTestAssembly(Assembly testAssembly) Parameters testAssembly Assembly"
  },
  "api/Reqnroll.Infrastructure.TestExecutionEngine.html": {
    "href": "api/Reqnroll.Infrastructure.TestExecutionEngine.html",
    "title": "Class TestExecutionEngine | Unofficial Reqnroll Documentation",
    "summary": "Class TestExecutionEngine Namespace Reqnroll.Infrastructure Assembly Reqnroll.dll public class TestExecutionEngine : ITestExecutionEngine Inheritance object TestExecutionEngine Implements ITestExecutionEngine Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TestExecutionEngine(IStepFormatter, ITestTracer, IErrorProvider, IStepArgumentTypeConverter, ReqnrollConfiguration, IBindingRegistry, IUnitTestRuntimeProvider, IContextManager, IStepDefinitionMatchService, IAsyncBindingInvoker, IObsoleteStepHandler, IAnalyticsEventProvider, IAnalyticsTransmitter, ITestRunnerManager, IRuntimePluginTestExecutionLifecycleEventEmitter, ITestThreadExecutionEventPublisher, ITestPendingMessageFactory, ITestUndefinedMessageFactory, ITestObjectResolver, ITestRunContext) public TestExecutionEngine(IStepFormatter stepFormatter, ITestTracer testTracer, IErrorProvider errorProvider, IStepArgumentTypeConverter stepArgumentTypeConverter, ReqnrollConfiguration reqnrollConfiguration, IBindingRegistry bindingRegistry, IUnitTestRuntimeProvider unitTestRuntimeProvider, IContextManager contextManager, IStepDefinitionMatchService stepDefinitionMatchService, IAsyncBindingInvoker bindingInvoker, IObsoleteStepHandler obsoleteStepHandler, IAnalyticsEventProvider analyticsEventProvider, IAnalyticsTransmitter analyticsTransmitter, ITestRunnerManager testRunnerManager, IRuntimePluginTestExecutionLifecycleEventEmitter runtimePluginTestExecutionLifecycleEventEmitter, ITestThreadExecutionEventPublisher testThreadExecutionEventPublisher, ITestPendingMessageFactory testPendingMessageFactory, ITestUndefinedMessageFactory testUndefinedMessageFactory, ITestObjectResolver testObjectResolver, ITestRunContext testRunContext) Parameters stepFormatter IStepFormatter testTracer ITestTracer errorProvider IErrorProvider stepArgumentTypeConverter IStepArgumentTypeConverter reqnrollConfiguration ReqnrollConfiguration bindingRegistry IBindingRegistry unitTestRuntimeProvider IUnitTestRuntimeProvider contextManager IContextManager stepDefinitionMatchService IStepDefinitionMatchService bindingInvoker IAsyncBindingInvoker obsoleteStepHandler IObsoleteStepHandler analyticsEventProvider IAnalyticsEventProvider analyticsTransmitter IAnalyticsTransmitter testRunnerManager ITestRunnerManager runtimePluginTestExecutionLifecycleEventEmitter IRuntimePluginTestExecutionLifecycleEventEmitter testThreadExecutionEventPublisher ITestThreadExecutionEventPublisher testPendingMessageFactory ITestPendingMessageFactory testUndefinedMessageFactory ITestUndefinedMessageFactory testObjectResolver ITestObjectResolver testRunContext ITestRunContext Properties FeatureContext public FeatureContext FeatureContext { get; } Property Value FeatureContext ScenarioContext public ScenarioContext ScenarioContext { get; } Property Value ScenarioContext TestRunContext public ITestRunContext TestRunContext { get; } Property Value ITestRunContext TestThreadContext public ITestThreadContext TestThreadContext { get; } Property Value ITestThreadContext Methods ExecuteStepMatchAsync(BindingMatch, object[], DurationHolder) protected virtual Task ExecuteStepMatchAsync(BindingMatch match, object[] arguments, DurationHolder durationHolder) Parameters match BindingMatch arguments object[] durationHolder DurationHolder Returns Task FireScenarioEventsAsync(HookType) protected virtual Task FireScenarioEventsAsync(HookType bindingEvent) Parameters bindingEvent HookType Returns Task GetStepMatch(StepInstance) protected virtual BindingMatch GetStepMatch(StepInstance stepInstance) Parameters stepInstance StepInstance Returns BindingMatch InvokeHookAsync(IAsyncBindingInvoker, IHookBinding, HookType) public virtual Task InvokeHookAsync(IAsyncBindingInvoker invoker, IHookBinding hookBinding, HookType hookType) Parameters invoker IAsyncBindingInvoker hookBinding IHookBinding hookType HookType Returns Task OnAfterLastStepAsync() public virtual Task OnAfterLastStepAsync() Returns Task OnBlockEndAsync(ScenarioBlock) protected virtual Task OnBlockEndAsync(ScenarioBlock block) Parameters block ScenarioBlock Returns Task OnBlockStartAsync(ScenarioBlock) protected virtual Task OnBlockStartAsync(ScenarioBlock block) Parameters block ScenarioBlock Returns Task OnFeatureEndAsync() public virtual Task OnFeatureEndAsync() Returns Task OnFeatureStartAsync(FeatureInfo) public virtual Task OnFeatureStartAsync(FeatureInfo featureInfo) Parameters featureInfo FeatureInfo Returns Task OnScenarioEndAsync() public virtual Task OnScenarioEndAsync() Returns Task OnScenarioInitialize(ScenarioInfo) public virtual void OnScenarioInitialize(ScenarioInfo scenarioInfo) Parameters scenarioInfo ScenarioInfo OnScenarioSkipped() public virtual void OnScenarioSkipped() OnScenarioStartAsync() public virtual Task OnScenarioStartAsync() Returns Task OnSkipStep() protected virtual void OnSkipStep() OnStepEndAsync() protected virtual Task OnStepEndAsync() Returns Task OnStepStartAsync() protected virtual Task OnStepStartAsync() Returns Task OnTestRunEndAsync() public virtual Task OnTestRunEndAsync() Returns Task OnTestRunStartAsync() public virtual Task OnTestRunStartAsync() Returns Task Pending() public virtual void Pending() StepAsync(StepDefinitionKeyword, string, string, string, Table) public virtual Task StepAsync(StepDefinitionKeyword stepDefinitionKeyword, string keyword, string text, string multilineTextArg, Table tableArg) Parameters stepDefinitionKeyword StepDefinitionKeyword keyword string text string multilineTextArg string tableArg Table Returns Task"
  },
  "api/Reqnroll.Infrastructure.TestObjectResolver.html": {
    "href": "api/Reqnroll.Infrastructure.TestObjectResolver.html",
    "title": "Class TestObjectResolver | Unofficial Reqnroll Documentation",
    "summary": "Class TestObjectResolver Namespace Reqnroll.Infrastructure Assembly Reqnroll.dll public class TestObjectResolver : ITestObjectResolver Inheritance object TestObjectResolver Implements ITestObjectResolver Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ResolveBindingInstance(Type, IObjectContainer) public object ResolveBindingInstance(Type bindingType, IObjectContainer container) Parameters bindingType Type container IObjectContainer Returns object"
  },
  "api/Reqnroll.Infrastructure.TestPendingMessageFactory.html": {
    "href": "api/Reqnroll.Infrastructure.TestPendingMessageFactory.html",
    "title": "Class TestPendingMessageFactory | Unofficial Reqnroll Documentation",
    "summary": "Class TestPendingMessageFactory Namespace Reqnroll.Infrastructure Assembly Reqnroll.dll public class TestPendingMessageFactory : ITestPendingMessageFactory Inheritance object TestPendingMessageFactory Implements ITestPendingMessageFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TestPendingMessageFactory(IErrorProvider) public TestPendingMessageFactory(IErrorProvider errorProvider) Parameters errorProvider IErrorProvider Methods BuildFromScenarioContext(ScenarioContext) public string BuildFromScenarioContext(ScenarioContext scenarioContext) Parameters scenarioContext ScenarioContext Returns string"
  },
  "api/Reqnroll.Infrastructure.TestUndefinedMessageFactory.html": {
    "href": "api/Reqnroll.Infrastructure.TestUndefinedMessageFactory.html",
    "title": "Class TestUndefinedMessageFactory | Unofficial Reqnroll Documentation",
    "summary": "Class TestUndefinedMessageFactory Namespace Reqnroll.Infrastructure Assembly Reqnroll.dll public class TestUndefinedMessageFactory : ITestUndefinedMessageFactory Inheritance object TestUndefinedMessageFactory Implements ITestUndefinedMessageFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TestUndefinedMessageFactory(IStepDefinitionSkeletonProvider, IErrorProvider, ReqnrollConfiguration) public TestUndefinedMessageFactory(IStepDefinitionSkeletonProvider stepDefinitionSkeletonProvider, IErrorProvider errorProvider, ReqnrollConfiguration reqnrollConfiguration) Parameters stepDefinitionSkeletonProvider IStepDefinitionSkeletonProvider errorProvider IErrorProvider reqnrollConfiguration ReqnrollConfiguration Methods BuildFromContext(ScenarioContext, FeatureContext) public string BuildFromContext(ScenarioContext scenarioContext, FeatureContext featureContext) Parameters scenarioContext ScenarioContext featureContext FeatureContext Returns string"
  },
  "api/Reqnroll.Infrastructure.html": {
    "href": "api/Reqnroll.Infrastructure.html",
    "title": "Namespace Reqnroll.Infrastructure | Unofficial Reqnroll Documentation",
    "summary": "Namespace Reqnroll.Infrastructure Classes BindingAssemblyLoader BlockingSyncTestRunner ContainerBuilder ContextManager DefaultDependencyProvider GeneratorPluginAttribute MatchArgumentCalculator ObsoleteStepHandler ReqnrollAttachmentHandler ReqnrollOutputHelper StepDefinitionMatchService TestAssemblyProvider TestExecutionEngine TestObjectResolver TestPendingMessageFactory TestUndefinedMessageFactory Interfaces IBindingAssemblyLoader IContainerBuilder IContainerDependentObject IContextManager IDefaultDependencyProvider IMatchArgumentCalculator IObsoleteStepHandler IReqnrollAttachmentHandler ISkippedStepHandler IStepDefinitionMatchService ITestAssemblyProvider ITestExecutionEngine ITestObjectResolver Resolves user created test objects from different scopes (scenario, feature, test thread). ITestPendingMessageFactory ITestRunnerFactory ITestUndefinedMessageFactory Enums StepDefinitionAmbiguityReason"
  },
  "api/Reqnroll.InstanceComparisonExtensionMethods.html": {
    "href": "api/Reqnroll.InstanceComparisonExtensionMethods.html",
    "title": "Class InstanceComparisonExtensionMethods | Unofficial Reqnroll Documentation",
    "summary": "Class InstanceComparisonExtensionMethods Namespace Reqnroll Assembly Reqnroll.dll public static class InstanceComparisonExtensionMethods Inheritance object InstanceComparisonExtensionMethods Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CompareToInstance<T>(Table, T) public static void CompareToInstance<T>(this Table table, T instance) Parameters table Table instance T Type Parameters T IsEquivalentToInstance<T>(Table, T) Indicates whether the table is equivalent to the specified instance by comparing the values of all columns against the properties of the instance. Will return false after finding the first difference. public static bool IsEquivalentToInstance<T>(this Table table, T instance) Parameters table Table instance T Returns bool Type Parameters T"
  },
  "api/Reqnroll.MissingStepDefinitionException.html": {
    "href": "api/Reqnroll.MissingStepDefinitionException.html",
    "title": "Class MissingStepDefinitionException | Unofficial Reqnroll Documentation",
    "summary": "Class MissingStepDefinitionException Namespace Reqnroll Assembly Reqnroll.dll [Serializable] public class MissingStepDefinitionException : ReqnrollException, ISerializable Inheritance object Exception ReqnrollException MissingStepDefinitionException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MissingStepDefinitionException() public MissingStepDefinitionException() MissingStepDefinitionException(SerializationInfo, StreamingContext) protected MissingStepDefinitionException(SerializationInfo info, StreamingContext context) Parameters info SerializationInfo context StreamingContext"
  },
  "api/Reqnroll.Parser.ReqnrollGherkinDialectProvider.html": {
    "href": "api/Reqnroll.Parser.ReqnrollGherkinDialectProvider.html",
    "title": "Class ReqnrollGherkinDialectProvider | Unofficial Reqnroll Documentation",
    "summary": "Class ReqnrollGherkinDialectProvider Namespace Reqnroll.Parser Assembly Reqnroll.dll public class ReqnrollGherkinDialectProvider : GherkinDialectProvider, IGherkinDialectProvider Inheritance object GherkinDialectProvider ReqnrollGherkinDialectProvider Implements IGherkinDialectProvider Inherited Members GherkinDialectProvider.TryGetDialect(string, Location, out GherkinDialect) GherkinDialectProvider.LoadLanguageSettings() GherkinDialectProvider.ParseJsonContent(string) GherkinDialectProvider.TryGetDialect(string, Dictionary<string, GherkinLanguageSetting>, Location, out GherkinDialect) GherkinDialectProvider.CreateGherkinDialect(string, GherkinLanguageSetting) GherkinDialectProvider.GetFactoryDefault() GherkinDialectProvider.DefaultDialect object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ReqnrollGherkinDialectProvider(string) public ReqnrollGherkinDialectProvider(string defaultLanguage) Parameters defaultLanguage string Methods GetDialect(string, Location) public override GherkinDialect GetDialect(string language, Location location) Parameters language string location Location Returns GherkinDialect"
  },
  "api/Reqnroll.Parser.html": {
    "href": "api/Reqnroll.Parser.html",
    "title": "Namespace Reqnroll.Parser | Unofficial Reqnroll Documentation",
    "summary": "Namespace Reqnroll.Parser Classes ReqnrollGherkinDialectProvider"
  },
  "api/Reqnroll.PendingStepException.html": {
    "href": "api/Reqnroll.PendingStepException.html",
    "title": "Class PendingStepException | Unofficial Reqnroll Documentation",
    "summary": "Class PendingStepException Namespace Reqnroll Assembly Reqnroll.dll [Serializable] public class PendingStepException : ReqnrollException, ISerializable Inheritance object Exception ReqnrollException PendingStepException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PendingStepException() public PendingStepException() PendingStepException(SerializationInfo, StreamingContext) protected PendingStepException(SerializationInfo info, StreamingContext context) Parameters info SerializationInfo context StreamingContext PendingStepException(string) public PendingStepException(string message) Parameters message string"
  },
  "api/Reqnroll.PlatformCompatibility.PlatformHelper.html": {
    "href": "api/Reqnroll.PlatformCompatibility.PlatformHelper.html",
    "title": "Class PlatformHelper | Unofficial Reqnroll Documentation",
    "summary": "Class PlatformHelper Namespace Reqnroll.PlatformCompatibility Assembly Reqnroll.dll public static class PlatformHelper Inheritance object PlatformHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods RegisterPluginAssemblyLoader(IObjectContainer) public static void RegisterPluginAssemblyLoader(IObjectContainer container) Parameters container IObjectContainer"
  },
  "api/Reqnroll.PlatformCompatibility.PlatformInformation.html": {
    "href": "api/Reqnroll.PlatformCompatibility.PlatformInformation.html",
    "title": "Class PlatformInformation | Unofficial Reqnroll Documentation",
    "summary": "Class PlatformInformation Namespace Reqnroll.PlatformCompatibility Assembly Reqnroll.dll public class PlatformInformation Inheritance object PlatformInformation Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties DotNetFrameworkDescription public static string DotNetFrameworkDescription { get; } Property Value string DotNetFrameworkMainDescription public static string DotNetFrameworkMainDescription { get; } Property Value string DotNetFullVersion public static string DotNetFullVersion { get; } Property Value string IsDotNetFramework public static bool IsDotNetFramework { get; } Property Value bool ProcessArchitecture public static Architecture ProcessArchitecture { get; } Property Value Architecture"
  },
  "api/Reqnroll.PlatformCompatibility.html": {
    "href": "api/Reqnroll.PlatformCompatibility.html",
    "title": "Namespace Reqnroll.PlatformCompatibility | Unofficial Reqnroll Documentation",
    "summary": "Namespace Reqnroll.PlatformCompatibility Classes PlatformHelper PlatformInformation"
  },
  "api/Reqnroll.Plugins.AssemblyResolverBase.html": {
    "href": "api/Reqnroll.Plugins.AssemblyResolverBase.html",
    "title": "Class AssemblyResolverBase | Unofficial Reqnroll Documentation",
    "summary": "Class AssemblyResolverBase Namespace Reqnroll.Plugins Assembly Reqnroll.dll public abstract class AssemblyResolverBase Inheritance object AssemblyResolverBase Derived DotNetCorePluginAssemblyResolver DotNetFrameworkPluginAssemblyResolver Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AssemblyResolverBase(string) protected AssemblyResolverBase(string relativePath) Parameters relativePath string Methods GetAssembly() public Assembly GetAssembly() Returns Assembly Initialize(string) protected abstract Assembly Initialize(string path) Parameters path string Returns Assembly LoadAssemblyFromPath(string) protected abstract Assembly LoadAssemblyFromPath(string assemblyPath) Parameters assemblyPath string Returns Assembly SetupDependencyContext(string, Assembly, bool) protected void SetupDependencyContext(string path, Assembly assembly, bool throwOnError) Parameters path string assembly Assembly throwOnError bool TryResolveAssembly(AssemblyName) protected Assembly TryResolveAssembly(AssemblyName name) Parameters name AssemblyName Returns Assembly"
  },
  "api/Reqnroll.Plugins.ConfigurationDefaultsEventArgs.html": {
    "href": "api/Reqnroll.Plugins.ConfigurationDefaultsEventArgs.html",
    "title": "Class ConfigurationDefaultsEventArgs | Unofficial Reqnroll Documentation",
    "summary": "Class ConfigurationDefaultsEventArgs Namespace Reqnroll.Plugins Assembly Reqnroll.dll public class ConfigurationDefaultsEventArgs : EventArgs Inheritance object EventArgs ConfigurationDefaultsEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ConfigurationDefaultsEventArgs(ReqnrollConfiguration) public ConfigurationDefaultsEventArgs(ReqnrollConfiguration reqnrollConfiguration) Parameters reqnrollConfiguration ReqnrollConfiguration Properties ReqnrollConfiguration public ReqnrollConfiguration ReqnrollConfiguration { get; } Property Value ReqnrollConfiguration"
  },
  "api/Reqnroll.Plugins.CustomizeFeatureDependenciesEventArgs.html": {
    "href": "api/Reqnroll.Plugins.CustomizeFeatureDependenciesEventArgs.html",
    "title": "Class CustomizeFeatureDependenciesEventArgs | Unofficial Reqnroll Documentation",
    "summary": "Class CustomizeFeatureDependenciesEventArgs Namespace Reqnroll.Plugins Assembly Reqnroll.dll public class CustomizeFeatureDependenciesEventArgs : ObjectContainerEventArgs Inheritance object EventArgs ObjectContainerEventArgs CustomizeFeatureDependenciesEventArgs Inherited Members ObjectContainerEventArgs.ObjectContainer EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CustomizeFeatureDependenciesEventArgs(ObjectContainer) public CustomizeFeatureDependenciesEventArgs(ObjectContainer objectContainer) Parameters objectContainer ObjectContainer"
  },
  "api/Reqnroll.Plugins.CustomizeGlobalDependenciesEventArgs.html": {
    "href": "api/Reqnroll.Plugins.CustomizeGlobalDependenciesEventArgs.html",
    "title": "Class CustomizeGlobalDependenciesEventArgs | Unofficial Reqnroll Documentation",
    "summary": "Class CustomizeGlobalDependenciesEventArgs Namespace Reqnroll.Plugins Assembly Reqnroll.dll public class CustomizeGlobalDependenciesEventArgs : ObjectContainerEventArgs Inheritance object EventArgs ObjectContainerEventArgs CustomizeGlobalDependenciesEventArgs Inherited Members ObjectContainerEventArgs.ObjectContainer EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CustomizeGlobalDependenciesEventArgs(ObjectContainer, ReqnrollConfiguration) public CustomizeGlobalDependenciesEventArgs(ObjectContainer objectContainer, ReqnrollConfiguration reqnrollConfiguration) Parameters objectContainer ObjectContainer reqnrollConfiguration ReqnrollConfiguration Properties ReqnrollConfiguration public ReqnrollConfiguration ReqnrollConfiguration { get; } Property Value ReqnrollConfiguration"
  },
  "api/Reqnroll.Plugins.CustomizeScenarioDependenciesEventArgs.html": {
    "href": "api/Reqnroll.Plugins.CustomizeScenarioDependenciesEventArgs.html",
    "title": "Class CustomizeScenarioDependenciesEventArgs | Unofficial Reqnroll Documentation",
    "summary": "Class CustomizeScenarioDependenciesEventArgs Namespace Reqnroll.Plugins Assembly Reqnroll.dll public class CustomizeScenarioDependenciesEventArgs : ObjectContainerEventArgs Inheritance object EventArgs ObjectContainerEventArgs CustomizeScenarioDependenciesEventArgs Inherited Members ObjectContainerEventArgs.ObjectContainer EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CustomizeScenarioDependenciesEventArgs(ObjectContainer) public CustomizeScenarioDependenciesEventArgs(ObjectContainer objectContainer) Parameters objectContainer ObjectContainer"
  },
  "api/Reqnroll.Plugins.CustomizeTestThreadDependenciesEventArgs.html": {
    "href": "api/Reqnroll.Plugins.CustomizeTestThreadDependenciesEventArgs.html",
    "title": "Class CustomizeTestThreadDependenciesEventArgs | Unofficial Reqnroll Documentation",
    "summary": "Class CustomizeTestThreadDependenciesEventArgs Namespace Reqnroll.Plugins Assembly Reqnroll.dll public class CustomizeTestThreadDependenciesEventArgs : ObjectContainerEventArgs Inheritance object EventArgs ObjectContainerEventArgs CustomizeTestThreadDependenciesEventArgs Inherited Members ObjectContainerEventArgs.ObjectContainer EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CustomizeTestThreadDependenciesEventArgs(ObjectContainer) public CustomizeTestThreadDependenciesEventArgs(ObjectContainer objectContainer) Parameters objectContainer ObjectContainer"
  },
  "api/Reqnroll.Plugins.DotNetCorePluginAssemblyLoader.html": {
    "href": "api/Reqnroll.Plugins.DotNetCorePluginAssemblyLoader.html",
    "title": "Class DotNetCorePluginAssemblyLoader | Unofficial Reqnroll Documentation",
    "summary": "Class DotNetCorePluginAssemblyLoader Namespace Reqnroll.Plugins Assembly Reqnroll.dll This class is used for .NET Core based frameworks (.NET 6+) only. For .NET Framework DotNetFrameworkPluginAssemblyLoader is used instead. See PlatformHelper. public class DotNetCorePluginAssemblyLoader : IPluginAssemblyLoader Inheritance object DotNetCorePluginAssemblyLoader Implements IPluginAssemblyLoader Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods LoadAssembly(string) public Assembly LoadAssembly(string assemblyPath) Parameters assemblyPath string Returns Assembly"
  },
  "api/Reqnroll.Plugins.DotNetCorePluginAssemblyResolver.html": {
    "href": "api/Reqnroll.Plugins.DotNetCorePluginAssemblyResolver.html",
    "title": "Class DotNetCorePluginAssemblyResolver | Unofficial Reqnroll Documentation",
    "summary": "Class DotNetCorePluginAssemblyResolver Namespace Reqnroll.Plugins Assembly Reqnroll.dll This class is used for .NET Core based frameworks (.NET 6+) only. See PlatformHelper. public sealed class DotNetCorePluginAssemblyResolver : AssemblyResolverBase Inheritance object AssemblyResolverBase DotNetCorePluginAssemblyResolver Inherited Members AssemblyResolverBase.GetAssembly() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors DotNetCorePluginAssemblyResolver(string) This class is used for .NET Core based frameworks (.NET 6+) only. See PlatformHelper. public DotNetCorePluginAssemblyResolver(string path) Parameters path string Methods Initialize(string) protected override Assembly Initialize(string path) Parameters path string Returns Assembly Load(string) public static Assembly Load(string path) Parameters path string Returns Assembly LoadAssemblyFromPath(string) protected override Assembly LoadAssemblyFromPath(string assemblyPath) Parameters assemblyPath string Returns Assembly"
  },
  "api/Reqnroll.Plugins.DotNetFrameworkPluginAssemblyLoader.html": {
    "href": "api/Reqnroll.Plugins.DotNetFrameworkPluginAssemblyLoader.html",
    "title": "Class DotNetFrameworkPluginAssemblyLoader | Unofficial Reqnroll Documentation",
    "summary": "Class DotNetFrameworkPluginAssemblyLoader Namespace Reqnroll.Plugins Assembly Reqnroll.dll This class is used for .NET Framework v4.* only. For .NET +6 DotNetCorePluginAssemblyLoader is used instead. See PlatformHelper. public class DotNetFrameworkPluginAssemblyLoader : IPluginAssemblyLoader Inheritance object DotNetFrameworkPluginAssemblyLoader Implements IPluginAssemblyLoader Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods LoadAssembly(string) public Assembly LoadAssembly(string assemblyPath) Parameters assemblyPath string Returns Assembly"
  },
  "api/Reqnroll.Plugins.DotNetFrameworkPluginAssemblyResolver.html": {
    "href": "api/Reqnroll.Plugins.DotNetFrameworkPluginAssemblyResolver.html",
    "title": "Class DotNetFrameworkPluginAssemblyResolver | Unofficial Reqnroll Documentation",
    "summary": "Class DotNetFrameworkPluginAssemblyResolver Namespace Reqnroll.Plugins Assembly Reqnroll.dll This class is used for .NET Framework 4.* only. See PlatformHelper. public sealed class DotNetFrameworkPluginAssemblyResolver : AssemblyResolverBase Inheritance object AssemblyResolverBase DotNetFrameworkPluginAssemblyResolver Inherited Members AssemblyResolverBase.GetAssembly() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors DotNetFrameworkPluginAssemblyResolver(string) This class is used for .NET Framework 4.* only. See PlatformHelper. public DotNetFrameworkPluginAssemblyResolver(string path) Parameters path string Methods Initialize(string) protected override Assembly Initialize(string path) Parameters path string Returns Assembly Load(string) public static Assembly Load(string path) Parameters path string Returns Assembly LoadAssemblyFromPath(string) protected override Assembly LoadAssemblyFromPath(string assemblyPath) Parameters assemblyPath string Returns Assembly"
  },
  "api/Reqnroll.Plugins.IPluginAssemblyLoader.html": {
    "href": "api/Reqnroll.Plugins.IPluginAssemblyLoader.html",
    "title": "Interface IPluginAssemblyLoader | Unofficial Reqnroll Documentation",
    "summary": "Interface IPluginAssemblyLoader Namespace Reqnroll.Plugins Assembly Reqnroll.dll public interface IPluginAssemblyLoader Methods LoadAssembly(string) Assembly LoadAssembly(string assemblyPath) Parameters assemblyPath string Returns Assembly"
  },
  "api/Reqnroll.Plugins.IReqnrollPath.html": {
    "href": "api/Reqnroll.Plugins.IReqnrollPath.html",
    "title": "Interface IReqnrollPath | Unofficial Reqnroll Documentation",
    "summary": "Interface IReqnrollPath Namespace Reqnroll.Plugins Assembly Reqnroll.dll public interface IReqnrollPath Methods GetPathToReqnrollDll() string GetPathToReqnrollDll() Returns string"
  },
  "api/Reqnroll.Plugins.IRuntimePlugin.html": {
    "href": "api/Reqnroll.Plugins.IRuntimePlugin.html",
    "title": "Interface IRuntimePlugin | Unofficial Reqnroll Documentation",
    "summary": "Interface IRuntimePlugin Namespace Reqnroll.Plugins Assembly Reqnroll.dll public interface IRuntimePlugin Methods Initialize(RuntimePluginEvents, RuntimePluginParameters, UnitTestProviderConfiguration) void Initialize(RuntimePluginEvents runtimePluginEvents, RuntimePluginParameters runtimePluginParameters, UnitTestProviderConfiguration unitTestProviderConfiguration) Parameters runtimePluginEvents RuntimePluginEvents runtimePluginParameters RuntimePluginParameters unitTestProviderConfiguration UnitTestProviderConfiguration"
  },
  "api/Reqnroll.Plugins.IRuntimePluginLoader.html": {
    "href": "api/Reqnroll.Plugins.IRuntimePluginLoader.html",
    "title": "Interface IRuntimePluginLoader | Unofficial Reqnroll Documentation",
    "summary": "Interface IRuntimePluginLoader Namespace Reqnroll.Plugins Assembly Reqnroll.dll public interface IRuntimePluginLoader Methods LoadPlugin(string, ITraceListener, bool) IRuntimePlugin LoadPlugin(string pluginAssemblyName, ITraceListener traceListener, bool traceMissingPluginAttribute) Parameters pluginAssemblyName string traceListener ITraceListener traceMissingPluginAttribute bool Returns IRuntimePlugin"
  },
  "api/Reqnroll.Plugins.IRuntimePluginLocationMerger.html": {
    "href": "api/Reqnroll.Plugins.IRuntimePluginLocationMerger.html",
    "title": "Interface IRuntimePluginLocationMerger | Unofficial Reqnroll Documentation",
    "summary": "Interface IRuntimePluginLocationMerger Namespace Reqnroll.Plugins Assembly Reqnroll.dll public interface IRuntimePluginLocationMerger Methods Merge(IReadOnlyList<string>) IReadOnlyList<string> Merge(IReadOnlyList<string> pluginPaths) Parameters pluginPaths IReadOnlyList<string> Returns IReadOnlyList<string>"
  },
  "api/Reqnroll.Plugins.IRuntimePluginLocator.html": {
    "href": "api/Reqnroll.Plugins.IRuntimePluginLocator.html",
    "title": "Interface IRuntimePluginLocator | Unofficial Reqnroll Documentation",
    "summary": "Interface IRuntimePluginLocator Namespace Reqnroll.Plugins Assembly Reqnroll.dll public interface IRuntimePluginLocator Methods GetAllRuntimePlugins() IReadOnlyList<string> GetAllRuntimePlugins() Returns IReadOnlyList<string>"
  },
  "api/Reqnroll.Plugins.IRuntimePluginTestExecutionLifecycleEventEmitter.html": {
    "href": "api/Reqnroll.Plugins.IRuntimePluginTestExecutionLifecycleEventEmitter.html",
    "title": "Interface IRuntimePluginTestExecutionLifecycleEventEmitter | Unofficial Reqnroll Documentation",
    "summary": "Interface IRuntimePluginTestExecutionLifecycleEventEmitter Namespace Reqnroll.Plugins Assembly Reqnroll.dll public interface IRuntimePluginTestExecutionLifecycleEventEmitter Methods RaiseExecutionLifecycleEvent(HookType, IObjectContainer) void RaiseExecutionLifecycleEvent(HookType hookType, IObjectContainer container) Parameters hookType HookType container IObjectContainer"
  },
  "api/Reqnroll.Plugins.ObjectContainerEventArgs.html": {
    "href": "api/Reqnroll.Plugins.ObjectContainerEventArgs.html",
    "title": "Class ObjectContainerEventArgs | Unofficial Reqnroll Documentation",
    "summary": "Class ObjectContainerEventArgs Namespace Reqnroll.Plugins Assembly Reqnroll.dll public abstract class ObjectContainerEventArgs : EventArgs Inheritance object EventArgs ObjectContainerEventArgs Derived CustomizeFeatureDependenciesEventArgs CustomizeGlobalDependenciesEventArgs CustomizeScenarioDependenciesEventArgs CustomizeTestThreadDependenciesEventArgs RegisterGlobalDependenciesEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ObjectContainerEventArgs(ObjectContainer) protected ObjectContainerEventArgs(ObjectContainer objectContainer) Parameters objectContainer ObjectContainer Properties ObjectContainer public ObjectContainer ObjectContainer { get; } Property Value ObjectContainer"
  },
  "api/Reqnroll.Plugins.PluginDescriptor.html": {
    "href": "api/Reqnroll.Plugins.PluginDescriptor.html",
    "title": "Class PluginDescriptor | Unofficial Reqnroll Documentation",
    "summary": "Class PluginDescriptor Namespace Reqnroll.Plugins Assembly Reqnroll.dll public class PluginDescriptor Inheritance object PluginDescriptor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PluginDescriptor(string, string, PluginType, string) public PluginDescriptor(string name, string path, PluginType type, string parameters) Parameters name string path string type PluginType parameters string Properties Name public string Name { get; } Property Value string Parameters public string Parameters { get; } Property Value string Path public string Path { get; } Property Value string Type public PluginType Type { get; } Property Value PluginType"
  },
  "api/Reqnroll.Plugins.PluginType.html": {
    "href": "api/Reqnroll.Plugins.PluginType.html",
    "title": "Enum PluginType | Unofficial Reqnroll Documentation",
    "summary": "Enum PluginType Namespace Reqnroll.Plugins Assembly Reqnroll.dll [Flags] public enum PluginType Fields Generator = 1 GeneratorAndRuntime = Generator | Runtime Runtime = 2"
  },
  "api/Reqnroll.Plugins.RegisterGlobalDependenciesEventArgs.html": {
    "href": "api/Reqnroll.Plugins.RegisterGlobalDependenciesEventArgs.html",
    "title": "Class RegisterGlobalDependenciesEventArgs | Unofficial Reqnroll Documentation",
    "summary": "Class RegisterGlobalDependenciesEventArgs Namespace Reqnroll.Plugins Assembly Reqnroll.dll public class RegisterGlobalDependenciesEventArgs : ObjectContainerEventArgs Inheritance object EventArgs ObjectContainerEventArgs RegisterGlobalDependenciesEventArgs Inherited Members ObjectContainerEventArgs.ObjectContainer EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RegisterGlobalDependenciesEventArgs(ObjectContainer) public RegisterGlobalDependenciesEventArgs(ObjectContainer objectContainer) Parameters objectContainer ObjectContainer"
  },
  "api/Reqnroll.Plugins.ReqnrollPath.html": {
    "href": "api/Reqnroll.Plugins.ReqnrollPath.html",
    "title": "Class ReqnrollPath | Unofficial Reqnroll Documentation",
    "summary": "Class ReqnrollPath Namespace Reqnroll.Plugins Assembly Reqnroll.dll public class ReqnrollPath : IReqnrollPath Inheritance object ReqnrollPath Implements IReqnrollPath Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetPathToReqnrollDll() public string GetPathToReqnrollDll() Returns string"
  },
  "api/Reqnroll.Plugins.RuntimePluginAfterFeatureEventArgs.html": {
    "href": "api/Reqnroll.Plugins.RuntimePluginAfterFeatureEventArgs.html",
    "title": "Class RuntimePluginAfterFeatureEventArgs | Unofficial Reqnroll Documentation",
    "summary": "Class RuntimePluginAfterFeatureEventArgs Namespace Reqnroll.Plugins Assembly Reqnroll.dll public class RuntimePluginAfterFeatureEventArgs : RuntimePluginTestExecutionLifecycleEventArgs Inheritance object EventArgs RuntimePluginTestExecutionLifecycleEventArgs RuntimePluginAfterFeatureEventArgs Inherited Members RuntimePluginTestExecutionLifecycleEventArgs.ObjectContainer EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RuntimePluginAfterFeatureEventArgs(IObjectContainer) public RuntimePluginAfterFeatureEventArgs(IObjectContainer objectContainer) Parameters objectContainer IObjectContainer"
  },
  "api/Reqnroll.Plugins.RuntimePluginAfterScenarioEventArgs.html": {
    "href": "api/Reqnroll.Plugins.RuntimePluginAfterScenarioEventArgs.html",
    "title": "Class RuntimePluginAfterScenarioEventArgs | Unofficial Reqnroll Documentation",
    "summary": "Class RuntimePluginAfterScenarioEventArgs Namespace Reqnroll.Plugins Assembly Reqnroll.dll public class RuntimePluginAfterScenarioEventArgs : RuntimePluginTestExecutionLifecycleEventArgs Inheritance object EventArgs RuntimePluginTestExecutionLifecycleEventArgs RuntimePluginAfterScenarioEventArgs Inherited Members RuntimePluginTestExecutionLifecycleEventArgs.ObjectContainer EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RuntimePluginAfterScenarioEventArgs(IObjectContainer) public RuntimePluginAfterScenarioEventArgs(IObjectContainer objectContainer) Parameters objectContainer IObjectContainer"
  },
  "api/Reqnroll.Plugins.RuntimePluginAfterStepEventArgs.html": {
    "href": "api/Reqnroll.Plugins.RuntimePluginAfterStepEventArgs.html",
    "title": "Class RuntimePluginAfterStepEventArgs | Unofficial Reqnroll Documentation",
    "summary": "Class RuntimePluginAfterStepEventArgs Namespace Reqnroll.Plugins Assembly Reqnroll.dll public class RuntimePluginAfterStepEventArgs : RuntimePluginTestExecutionLifecycleEventArgs Inheritance object EventArgs RuntimePluginTestExecutionLifecycleEventArgs RuntimePluginAfterStepEventArgs Inherited Members RuntimePluginTestExecutionLifecycleEventArgs.ObjectContainer EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RuntimePluginAfterStepEventArgs(IObjectContainer) public RuntimePluginAfterStepEventArgs(IObjectContainer objectContainer) Parameters objectContainer IObjectContainer"
  },
  "api/Reqnroll.Plugins.RuntimePluginAfterTestRunEventArgs.html": {
    "href": "api/Reqnroll.Plugins.RuntimePluginAfterTestRunEventArgs.html",
    "title": "Class RuntimePluginAfterTestRunEventArgs | Unofficial Reqnroll Documentation",
    "summary": "Class RuntimePluginAfterTestRunEventArgs Namespace Reqnroll.Plugins Assembly Reqnroll.dll public class RuntimePluginAfterTestRunEventArgs : RuntimePluginTestExecutionLifecycleEventArgs Inheritance object EventArgs RuntimePluginTestExecutionLifecycleEventArgs RuntimePluginAfterTestRunEventArgs Inherited Members RuntimePluginTestExecutionLifecycleEventArgs.ObjectContainer EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RuntimePluginAfterTestRunEventArgs(IObjectContainer) public RuntimePluginAfterTestRunEventArgs(IObjectContainer objectContainer) Parameters objectContainer IObjectContainer"
  },
  "api/Reqnroll.Plugins.RuntimePluginAttribute.html": {
    "href": "api/Reqnroll.Plugins.RuntimePluginAttribute.html",
    "title": "Class RuntimePluginAttribute | Unofficial Reqnroll Documentation",
    "summary": "Class RuntimePluginAttribute Namespace Reqnroll.Plugins Assembly Reqnroll.dll [AttributeUsage(AttributeTargets.Assembly, AllowMultiple = false)] public class RuntimePluginAttribute : Attribute Inheritance object Attribute RuntimePluginAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RuntimePluginAttribute(Type) public RuntimePluginAttribute(Type pluginType) Parameters pluginType Type Properties PluginType public Type PluginType { get; } Property Value Type"
  },
  "api/Reqnroll.Plugins.RuntimePluginBeforeFeatureEventArgs.html": {
    "href": "api/Reqnroll.Plugins.RuntimePluginBeforeFeatureEventArgs.html",
    "title": "Class RuntimePluginBeforeFeatureEventArgs | Unofficial Reqnroll Documentation",
    "summary": "Class RuntimePluginBeforeFeatureEventArgs Namespace Reqnroll.Plugins Assembly Reqnroll.dll public class RuntimePluginBeforeFeatureEventArgs : RuntimePluginTestExecutionLifecycleEventArgs Inheritance object EventArgs RuntimePluginTestExecutionLifecycleEventArgs RuntimePluginBeforeFeatureEventArgs Inherited Members RuntimePluginTestExecutionLifecycleEventArgs.ObjectContainer EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RuntimePluginBeforeFeatureEventArgs(IObjectContainer) public RuntimePluginBeforeFeatureEventArgs(IObjectContainer objectContainer) Parameters objectContainer IObjectContainer"
  },
  "api/Reqnroll.Plugins.RuntimePluginBeforeScenarioEventArgs.html": {
    "href": "api/Reqnroll.Plugins.RuntimePluginBeforeScenarioEventArgs.html",
    "title": "Class RuntimePluginBeforeScenarioEventArgs | Unofficial Reqnroll Documentation",
    "summary": "Class RuntimePluginBeforeScenarioEventArgs Namespace Reqnroll.Plugins Assembly Reqnroll.dll public class RuntimePluginBeforeScenarioEventArgs : RuntimePluginTestExecutionLifecycleEventArgs Inheritance object EventArgs RuntimePluginTestExecutionLifecycleEventArgs RuntimePluginBeforeScenarioEventArgs Inherited Members RuntimePluginTestExecutionLifecycleEventArgs.ObjectContainer EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RuntimePluginBeforeScenarioEventArgs(IObjectContainer) public RuntimePluginBeforeScenarioEventArgs(IObjectContainer objectContainer) Parameters objectContainer IObjectContainer"
  },
  "api/Reqnroll.Plugins.RuntimePluginBeforeStepEventArgs.html": {
    "href": "api/Reqnroll.Plugins.RuntimePluginBeforeStepEventArgs.html",
    "title": "Class RuntimePluginBeforeStepEventArgs | Unofficial Reqnroll Documentation",
    "summary": "Class RuntimePluginBeforeStepEventArgs Namespace Reqnroll.Plugins Assembly Reqnroll.dll public class RuntimePluginBeforeStepEventArgs : RuntimePluginTestExecutionLifecycleEventArgs Inheritance object EventArgs RuntimePluginTestExecutionLifecycleEventArgs RuntimePluginBeforeStepEventArgs Inherited Members RuntimePluginTestExecutionLifecycleEventArgs.ObjectContainer EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RuntimePluginBeforeStepEventArgs(IObjectContainer) public RuntimePluginBeforeStepEventArgs(IObjectContainer objectContainer) Parameters objectContainer IObjectContainer"
  },
  "api/Reqnroll.Plugins.RuntimePluginBeforeTestRunEventArgs.html": {
    "href": "api/Reqnroll.Plugins.RuntimePluginBeforeTestRunEventArgs.html",
    "title": "Class RuntimePluginBeforeTestRunEventArgs | Unofficial Reqnroll Documentation",
    "summary": "Class RuntimePluginBeforeTestRunEventArgs Namespace Reqnroll.Plugins Assembly Reqnroll.dll public class RuntimePluginBeforeTestRunEventArgs : RuntimePluginTestExecutionLifecycleEventArgs Inheritance object EventArgs RuntimePluginTestExecutionLifecycleEventArgs RuntimePluginBeforeTestRunEventArgs Inherited Members RuntimePluginTestExecutionLifecycleEventArgs.ObjectContainer EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RuntimePluginBeforeTestRunEventArgs(IObjectContainer) public RuntimePluginBeforeTestRunEventArgs(IObjectContainer objectContainer) Parameters objectContainer IObjectContainer"
  },
  "api/Reqnroll.Plugins.RuntimePluginEvents.html": {
    "href": "api/Reqnroll.Plugins.RuntimePluginEvents.html",
    "title": "Class RuntimePluginEvents | Unofficial Reqnroll Documentation",
    "summary": "Class RuntimePluginEvents Namespace Reqnroll.Plugins Assembly Reqnroll.dll public class RuntimePluginEvents Inheritance object RuntimePluginEvents Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods RaiseConfigurationDefaults(ReqnrollConfiguration) public void RaiseConfigurationDefaults(ReqnrollConfiguration reqnrollConfiguration) Parameters reqnrollConfiguration ReqnrollConfiguration RaiseCustomizeFeatureDependencies(ObjectContainer) public void RaiseCustomizeFeatureDependencies(ObjectContainer featureContainer) Parameters featureContainer ObjectContainer RaiseCustomizeGlobalDependencies(ObjectContainer, ReqnrollConfiguration) public void RaiseCustomizeGlobalDependencies(ObjectContainer container, ReqnrollConfiguration reqnrollConfiguration) Parameters container ObjectContainer reqnrollConfiguration ReqnrollConfiguration RaiseCustomizeScenarioDependencies(ObjectContainer) public void RaiseCustomizeScenarioDependencies(ObjectContainer scenarioContainer) Parameters scenarioContainer ObjectContainer RaiseCustomizeTestThreadDependencies(ObjectContainer) public void RaiseCustomizeTestThreadDependencies(ObjectContainer testThreadContainer) Parameters testThreadContainer ObjectContainer RaiseRegisterGlobalDependencies(ObjectContainer) public void RaiseRegisterGlobalDependencies(ObjectContainer objectContainer) Parameters objectContainer ObjectContainer Events ConfigurationDefaults public event EventHandler<ConfigurationDefaultsEventArgs> ConfigurationDefaults Event Type EventHandler<ConfigurationDefaultsEventArgs> CustomizeFeatureDependencies public event EventHandler<CustomizeFeatureDependenciesEventArgs> CustomizeFeatureDependencies Event Type EventHandler<CustomizeFeatureDependenciesEventArgs> CustomizeGlobalDependencies public event EventHandler<CustomizeGlobalDependenciesEventArgs> CustomizeGlobalDependencies Event Type EventHandler<CustomizeGlobalDependenciesEventArgs> CustomizeScenarioDependencies public event EventHandler<CustomizeScenarioDependenciesEventArgs> CustomizeScenarioDependencies Event Type EventHandler<CustomizeScenarioDependenciesEventArgs> CustomizeTestThreadDependencies public event EventHandler<CustomizeTestThreadDependenciesEventArgs> CustomizeTestThreadDependencies Event Type EventHandler<CustomizeTestThreadDependenciesEventArgs> RegisterGlobalDependencies public event EventHandler<RegisterGlobalDependenciesEventArgs> RegisterGlobalDependencies Event Type EventHandler<RegisterGlobalDependenciesEventArgs>"
  },
  "api/Reqnroll.Plugins.RuntimePluginLoader.html": {
    "href": "api/Reqnroll.Plugins.RuntimePluginLoader.html",
    "title": "Class RuntimePluginLoader | Unofficial Reqnroll Documentation",
    "summary": "Class RuntimePluginLoader Namespace Reqnroll.Plugins Assembly Reqnroll.dll public class RuntimePluginLoader : IRuntimePluginLoader Inheritance object RuntimePluginLoader Implements IRuntimePluginLoader Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RuntimePluginLoader(IPluginAssemblyLoader) public RuntimePluginLoader(IPluginAssemblyLoader _pluginAssemblyLoader) Parameters _pluginAssemblyLoader IPluginAssemblyLoader Methods LoadPlugin(string, ITraceListener, bool) public IRuntimePlugin LoadPlugin(string pluginAssemblyPath, ITraceListener traceListener, bool traceMissingPluginAttribute) Parameters pluginAssemblyPath string traceListener ITraceListener traceMissingPluginAttribute bool Returns IRuntimePlugin"
  },
  "api/Reqnroll.Plugins.RuntimePluginLocationMerger.html": {
    "href": "api/Reqnroll.Plugins.RuntimePluginLocationMerger.html",
    "title": "Class RuntimePluginLocationMerger | Unofficial Reqnroll Documentation",
    "summary": "Class RuntimePluginLocationMerger Namespace Reqnroll.Plugins Assembly Reqnroll.dll public class RuntimePluginLocationMerger : IRuntimePluginLocationMerger Inheritance object RuntimePluginLocationMerger Implements IRuntimePluginLocationMerger Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Merge(IReadOnlyList<string>) public IReadOnlyList<string> Merge(IReadOnlyList<string> pluginPaths) Parameters pluginPaths IReadOnlyList<string> Returns IReadOnlyList<string>"
  },
  "api/Reqnroll.Plugins.RuntimePluginParameters.html": {
    "href": "api/Reqnroll.Plugins.RuntimePluginParameters.html",
    "title": "Class RuntimePluginParameters | Unofficial Reqnroll Documentation",
    "summary": "Class RuntimePluginParameters Namespace Reqnroll.Plugins Assembly Reqnroll.dll public class RuntimePluginParameters Inheritance object RuntimePluginParameters Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Parameters public string Parameters { get; set; } Property Value string"
  },
  "api/Reqnroll.Plugins.RuntimePluginTestExecutionLifecycleEventArgs.html": {
    "href": "api/Reqnroll.Plugins.RuntimePluginTestExecutionLifecycleEventArgs.html",
    "title": "Class RuntimePluginTestExecutionLifecycleEventArgs | Unofficial Reqnroll Documentation",
    "summary": "Class RuntimePluginTestExecutionLifecycleEventArgs Namespace Reqnroll.Plugins Assembly Reqnroll.dll public abstract class RuntimePluginTestExecutionLifecycleEventArgs : EventArgs Inheritance object EventArgs RuntimePluginTestExecutionLifecycleEventArgs Derived RuntimePluginAfterFeatureEventArgs RuntimePluginAfterScenarioEventArgs RuntimePluginAfterStepEventArgs RuntimePluginAfterTestRunEventArgs RuntimePluginBeforeFeatureEventArgs RuntimePluginBeforeScenarioEventArgs RuntimePluginBeforeStepEventArgs RuntimePluginBeforeTestRunEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RuntimePluginTestExecutionLifecycleEventArgs(IObjectContainer) protected RuntimePluginTestExecutionLifecycleEventArgs(IObjectContainer objectContainer) Parameters objectContainer IObjectContainer Properties ObjectContainer public IObjectContainer ObjectContainer { get; } Property Value IObjectContainer"
  },
  "api/Reqnroll.Plugins.RuntimePluginTestExecutionLifecycleEventEmitter.html": {
    "href": "api/Reqnroll.Plugins.RuntimePluginTestExecutionLifecycleEventEmitter.html",
    "title": "Class RuntimePluginTestExecutionLifecycleEventEmitter | Unofficial Reqnroll Documentation",
    "summary": "Class RuntimePluginTestExecutionLifecycleEventEmitter Namespace Reqnroll.Plugins Assembly Reqnroll.dll public class RuntimePluginTestExecutionLifecycleEventEmitter : IRuntimePluginTestExecutionLifecycleEventEmitter Inheritance object RuntimePluginTestExecutionLifecycleEventEmitter Implements IRuntimePluginTestExecutionLifecycleEventEmitter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RuntimePluginTestExecutionLifecycleEventEmitter(RuntimePluginTestExecutionLifecycleEvents) public RuntimePluginTestExecutionLifecycleEventEmitter(RuntimePluginTestExecutionLifecycleEvents events) Parameters events RuntimePluginTestExecutionLifecycleEvents Methods RaiseExecutionLifecycleEvent(HookType, IObjectContainer) public void RaiseExecutionLifecycleEvent(HookType hookType, IObjectContainer container) Parameters hookType HookType container IObjectContainer"
  },
  "api/Reqnroll.Plugins.RuntimePluginTestExecutionLifecycleEvents.html": {
    "href": "api/Reqnroll.Plugins.RuntimePluginTestExecutionLifecycleEvents.html",
    "title": "Class RuntimePluginTestExecutionLifecycleEvents | Unofficial Reqnroll Documentation",
    "summary": "Class RuntimePluginTestExecutionLifecycleEvents Namespace Reqnroll.Plugins Assembly Reqnroll.dll public class RuntimePluginTestExecutionLifecycleEvents Inheritance object RuntimePluginTestExecutionLifecycleEvents Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods RaiseAfterFeature(IObjectContainer) public void RaiseAfterFeature(IObjectContainer objectContainer) Parameters objectContainer IObjectContainer RaiseAfterScenario(IObjectContainer) public void RaiseAfterScenario(IObjectContainer objectContainer) Parameters objectContainer IObjectContainer RaiseAfterStep(IObjectContainer) public void RaiseAfterStep(IObjectContainer objectContainer) Parameters objectContainer IObjectContainer RaiseAfterTestRun(IObjectContainer) public void RaiseAfterTestRun(IObjectContainer objectContainer) Parameters objectContainer IObjectContainer RaiseBeforeFeature(IObjectContainer) public void RaiseBeforeFeature(IObjectContainer objectContainer) Parameters objectContainer IObjectContainer RaiseBeforeScenario(IObjectContainer) public void RaiseBeforeScenario(IObjectContainer objectContainer) Parameters objectContainer IObjectContainer RaiseBeforeStep(IObjectContainer) public void RaiseBeforeStep(IObjectContainer objectContainer) Parameters objectContainer IObjectContainer RaiseBeforeTestRun(IObjectContainer) public void RaiseBeforeTestRun(IObjectContainer objectContainer) Parameters objectContainer IObjectContainer Events AfterFeature public event EventHandler<RuntimePluginAfterFeatureEventArgs> AfterFeature Event Type EventHandler<RuntimePluginAfterFeatureEventArgs> AfterScenario public event EventHandler<RuntimePluginAfterScenarioEventArgs> AfterScenario Event Type EventHandler<RuntimePluginAfterScenarioEventArgs> AfterStep public event EventHandler<RuntimePluginAfterStepEventArgs> AfterStep Event Type EventHandler<RuntimePluginAfterStepEventArgs> AfterTestRun public event EventHandler<RuntimePluginAfterTestRunEventArgs> AfterTestRun Event Type EventHandler<RuntimePluginAfterTestRunEventArgs> BeforeFeature public event EventHandler<RuntimePluginBeforeFeatureEventArgs> BeforeFeature Event Type EventHandler<RuntimePluginBeforeFeatureEventArgs> BeforeScenario public event EventHandler<RuntimePluginBeforeScenarioEventArgs> BeforeScenario Event Type EventHandler<RuntimePluginBeforeScenarioEventArgs> BeforeStep public event EventHandler<RuntimePluginBeforeStepEventArgs> BeforeStep Event Type EventHandler<RuntimePluginBeforeStepEventArgs> BeforeTestRun public event EventHandler<RuntimePluginBeforeTestRunEventArgs> BeforeTestRun Event Type EventHandler<RuntimePluginBeforeTestRunEventArgs>"
  },
  "api/Reqnroll.Plugins.html": {
    "href": "api/Reqnroll.Plugins.html",
    "title": "Namespace Reqnroll.Plugins | Unofficial Reqnroll Documentation",
    "summary": "Namespace Reqnroll.Plugins Classes AssemblyResolverBase ConfigurationDefaultsEventArgs CustomizeFeatureDependenciesEventArgs CustomizeGlobalDependenciesEventArgs CustomizeScenarioDependenciesEventArgs CustomizeTestThreadDependenciesEventArgs DotNetCorePluginAssemblyLoader This class is used for .NET Core based frameworks (.NET 6+) only. For .NET Framework DotNetFrameworkPluginAssemblyLoader is used instead. See PlatformHelper. DotNetCorePluginAssemblyResolver This class is used for .NET Core based frameworks (.NET 6+) only. See PlatformHelper. DotNetFrameworkPluginAssemblyLoader This class is used for .NET Framework v4.* only. For .NET +6 DotNetCorePluginAssemblyLoader is used instead. See PlatformHelper. DotNetFrameworkPluginAssemblyResolver This class is used for .NET Framework 4.* only. See PlatformHelper. ObjectContainerEventArgs PluginDescriptor RegisterGlobalDependenciesEventArgs ReqnrollPath RuntimePluginAfterFeatureEventArgs RuntimePluginAfterScenarioEventArgs RuntimePluginAfterStepEventArgs RuntimePluginAfterTestRunEventArgs RuntimePluginAttribute RuntimePluginBeforeFeatureEventArgs RuntimePluginBeforeScenarioEventArgs RuntimePluginBeforeStepEventArgs RuntimePluginBeforeTestRunEventArgs RuntimePluginEvents RuntimePluginLoader RuntimePluginLocationMerger RuntimePluginParameters RuntimePluginTestExecutionLifecycleEventArgs RuntimePluginTestExecutionLifecycleEventEmitter RuntimePluginTestExecutionLifecycleEvents Interfaces IPluginAssemblyLoader IReqnrollPath IRuntimePlugin IRuntimePluginLoader IRuntimePluginLocationMerger IRuntimePluginLocator IRuntimePluginTestExecutionLifecycleEventEmitter Enums PluginType"
  },
  "api/Reqnroll.ProgrammingLanguage.html": {
    "href": "api/Reqnroll.ProgrammingLanguage.html",
    "title": "Enum ProgrammingLanguage | Unofficial Reqnroll Documentation",
    "summary": "Enum ProgrammingLanguage Namespace Reqnroll Assembly Reqnroll.dll public enum ProgrammingLanguage Fields CSharp = 1 FSharp = 3 Other = 0 VB = 2"
  },
  "api/Reqnroll.ReqnrollContext.html": {
    "href": "api/Reqnroll.ReqnrollContext.html",
    "title": "Class ReqnrollContext | Unofficial Reqnroll Documentation",
    "summary": "Class ReqnrollContext Namespace Reqnroll Assembly Reqnroll.dll public abstract class ReqnrollContext : Dictionary<string, object>, IDictionary<string, object>, ICollection<KeyValuePair<string, object>>, IReadOnlyDictionary<string, object>, IReadOnlyCollection<KeyValuePair<string, object>>, IEnumerable<KeyValuePair<string, object>>, IDictionary, ICollection, IEnumerable, IDeserializationCallback, ISerializable, IDisposable Inheritance object Dictionary<string, object> ReqnrollContext Implements IDictionary<string, object> ICollection<KeyValuePair<string, object>> IReadOnlyDictionary<string, object> IReadOnlyCollection<KeyValuePair<string, object>> IEnumerable<KeyValuePair<string, object>> IDictionary ICollection IEnumerable IDeserializationCallback ISerializable IDisposable Derived DefaultTestRunContext FeatureContext ScenarioContext ScenarioStepContext TestThreadContext Inherited Members Dictionary<string, object>.Add(string, object) Dictionary<string, object>.Clear() Dictionary<string, object>.ContainsKey(string) Dictionary<string, object>.ContainsValue(object) Dictionary<string, object>.GetEnumerator() Dictionary<string, object>.GetObjectData(SerializationInfo, StreamingContext) Dictionary<string, object>.OnDeserialization(object) Dictionary<string, object>.Remove(string) Dictionary<string, object>.TryGetValue(string, out object) Dictionary<string, object>.Comparer Dictionary<string, object>.Count Dictionary<string, object>.this[string] Dictionary<string, object>.Keys Dictionary<string, object>.Values object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ProjectionExtensionMethods.ToProjection<T>(IEnumerable<T>, Table) Properties TestError public Exception TestError { get; } Property Value Exception Methods Dispose() protected virtual void Dispose() Get<T>() public T Get<T>() Returns T Type Parameters T Get<T>(string) public T Get<T>(string key) Parameters key string Returns T Type Parameters T Set<T>(Func<T>) public void Set<T>(Func<T> func) Parameters func Func<T> Type Parameters T Set<T>(T) public void Set<T>(T data) Parameters data T Type Parameters T Set<T>(T, string) public void Set<T>(T data, string key) Parameters data T key string Type Parameters T TryGetValue<TValue>(string, out TValue) public bool TryGetValue<TValue>(string key, out TValue value) Parameters key string value TValue Returns bool Type Parameters TValue TryGetValue<TValue>(out TValue) public bool TryGetValue<TValue>(out TValue value) Parameters value TValue Returns bool Type Parameters TValue"
  },
  "api/Reqnroll.ReqnrollException.html": {
    "href": "api/Reqnroll.ReqnrollException.html",
    "title": "Class ReqnrollException | Unofficial Reqnroll Documentation",
    "summary": "Class ReqnrollException Namespace Reqnroll Assembly Reqnroll.dll [Serializable] public class ReqnrollException : Exception, ISerializable Inheritance object Exception ReqnrollException Implements ISerializable Derived BindingException MissingStepDefinitionException PendingStepException Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ReqnrollException() public ReqnrollException() ReqnrollException(SerializationInfo, StreamingContext) protected ReqnrollException(SerializationInfo info, StreamingContext context) Parameters info SerializationInfo context StreamingContext ReqnrollException(string) public ReqnrollException(string message) Parameters message string ReqnrollException(string, Exception) public ReqnrollException(string message, Exception inner) Parameters message string inner Exception"
  },
  "api/Reqnroll.ScenarioBlock.html": {
    "href": "api/Reqnroll.ScenarioBlock.html",
    "title": "Enum ScenarioBlock | Unofficial Reqnroll Documentation",
    "summary": "Enum ScenarioBlock Namespace Reqnroll Assembly Reqnroll.dll public enum ScenarioBlock Fields Given = 1 None = 0 Then = 3 When = 2"
  },
  "api/Reqnroll.ScenarioContext.html": {
    "href": "api/Reqnroll.ScenarioContext.html",
    "title": "Class ScenarioContext | Unofficial Reqnroll Documentation",
    "summary": "Class ScenarioContext Namespace Reqnroll Assembly Reqnroll.dll public class ScenarioContext : ReqnrollContext, IDictionary<string, object>, ICollection<KeyValuePair<string, object>>, IReadOnlyDictionary<string, object>, IReadOnlyCollection<KeyValuePair<string, object>>, IEnumerable<KeyValuePair<string, object>>, IDictionary, ICollection, IEnumerable, IDeserializationCallback, ISerializable, IDisposable, IScenarioContext, IReqnrollContext Inheritance object Dictionary<string, object> ReqnrollContext ScenarioContext Implements IDictionary<string, object> ICollection<KeyValuePair<string, object>> IReadOnlyDictionary<string, object> IReadOnlyCollection<KeyValuePair<string, object>> IEnumerable<KeyValuePair<string, object>> IDictionary ICollection IEnumerable IDeserializationCallback ISerializable IDisposable IScenarioContext IReqnrollContext Inherited Members ReqnrollContext.TestError ReqnrollContext.Dispose() ReqnrollContext.TryGetValue<TValue>(out TValue) ReqnrollContext.TryGetValue<TValue>(string, out TValue) ReqnrollContext.Set<T>(T) ReqnrollContext.Set<T>(T, string) ReqnrollContext.Set<T>(Func<T>) ReqnrollContext.Get<T>() ReqnrollContext.Get<T>(string) Dictionary<string, object>.Add(string, object) Dictionary<string, object>.Clear() Dictionary<string, object>.ContainsKey(string) Dictionary<string, object>.ContainsValue(object) Dictionary<string, object>.GetEnumerator() Dictionary<string, object>.GetObjectData(SerializationInfo, StreamingContext) Dictionary<string, object>.OnDeserialization(object) Dictionary<string, object>.Remove(string) Dictionary<string, object>.TryGetValue(string, out object) Dictionary<string, object>.Comparer Dictionary<string, object>.Count Dictionary<string, object>.this[string] Dictionary<string, object>.Keys Dictionary<string, object>.Values object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ProjectionExtensionMethods.ToProjection<T>(IEnumerable<T>, Table) Properties Current [Obsolete(\"Please get the ScenarioContext via Context Injection - https://go.reqnroll.net/doc-migrate-sc-current\")] public static ScenarioContext Current { get; } Property Value ScenarioContext CurrentScenarioBlock public ScenarioBlock CurrentScenarioBlock { get; } Property Value ScenarioBlock ScenarioContainer public IObjectContainer ScenarioContainer { get; } Property Value IObjectContainer ScenarioExecutionStatus public ScenarioExecutionStatus ScenarioExecutionStatus { get; } Property Value ScenarioExecutionStatus ScenarioInfo public ScenarioInfo ScenarioInfo { get; } Property Value ScenarioInfo StepContext public ScenarioStepContext StepContext { get; } Property Value ScenarioStepContext Methods GetBindingInstance(Type) Called by Reqnroll infrastructure when an instance of a binding class is needed. public object GetBindingInstance(Type bindingType) Parameters bindingType Type The type of the binding class. Returns object The binding class instance Remarks The binding classes are the classes with the [Binding] attribute, that might contain step definitions, hooks or step argument transformations. The method is called when any binding method needs to be called. Pending() public void Pending() StepIsPending() public static void StepIsPending()"
  },
  "api/Reqnroll.ScenarioExecutionStatus.html": {
    "href": "api/Reqnroll.ScenarioExecutionStatus.html",
    "title": "Enum ScenarioExecutionStatus | Unofficial Reqnroll Documentation",
    "summary": "Enum ScenarioExecutionStatus Namespace Reqnroll Assembly Reqnroll.dll public enum ScenarioExecutionStatus Fields BindingError = 3 OK = 0 Skipped = 5 StepDefinitionPending = 1 TestError = 4 UndefinedStep = 2"
  },
  "api/Reqnroll.ScenarioInfo.html": {
    "href": "api/Reqnroll.ScenarioInfo.html",
    "title": "Class ScenarioInfo | Unofficial Reqnroll Documentation",
    "summary": "Class ScenarioInfo Namespace Reqnroll Assembly Reqnroll.dll Contains information about the scenario currently being executed. public class ScenarioInfo Inheritance object ScenarioInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ScenarioInfo(string, string, string[], IOrderedDictionary, string[]) public ScenarioInfo(string title, string description, string[] tags, IOrderedDictionary arguments, string[] inheritedTags = null) Parameters title string description string tags string[] arguments IOrderedDictionary inheritedTags string[] Properties Arguments The arguments used to execute a scenario outline example. public IOrderedDictionary Arguments { get; } Property Value IOrderedDictionary CombinedTags Contains direct tags and tags inherited from the feature and the rule. public string[] CombinedTags { get; } Property Value string[] Description The description of the scenario. public string Description { get; } Property Value string ScenarioAndFeatureTags [Obsolete(\"Deprecated. Use 'CombinedTags' instead.\", false)] public string[] ScenarioAndFeatureTags { get; } Property Value string[] Tags Direct tags of the scenario, including tags of the examples block. public string[] Tags { get; } Property Value string[] Title The title (name) of the scenario. public string Title { get; } Property Value string"
  },
  "api/Reqnroll.ScenarioStepContext.html": {
    "href": "api/Reqnroll.ScenarioStepContext.html",
    "title": "Class ScenarioStepContext | Unofficial Reqnroll Documentation",
    "summary": "Class ScenarioStepContext Namespace Reqnroll Assembly Reqnroll.dll public class ScenarioStepContext : ReqnrollContext, IDictionary<string, object>, ICollection<KeyValuePair<string, object>>, IReadOnlyDictionary<string, object>, IReadOnlyCollection<KeyValuePair<string, object>>, IEnumerable<KeyValuePair<string, object>>, IDictionary, ICollection, IEnumerable, IDeserializationCallback, ISerializable, IDisposable, IScenarioStepContext, IReqnrollContext Inheritance object Dictionary<string, object> ReqnrollContext ScenarioStepContext Implements IDictionary<string, object> ICollection<KeyValuePair<string, object>> IReadOnlyDictionary<string, object> IReadOnlyCollection<KeyValuePair<string, object>> IEnumerable<KeyValuePair<string, object>> IDictionary ICollection IEnumerable IDeserializationCallback ISerializable IDisposable IScenarioStepContext IReqnrollContext Inherited Members ReqnrollContext.TestError ReqnrollContext.Dispose() ReqnrollContext.TryGetValue<TValue>(out TValue) ReqnrollContext.TryGetValue<TValue>(string, out TValue) ReqnrollContext.Set<T>(T) ReqnrollContext.Set<T>(T, string) ReqnrollContext.Set<T>(Func<T>) ReqnrollContext.Get<T>() ReqnrollContext.Get<T>(string) Dictionary<string, object>.Add(string, object) Dictionary<string, object>.Clear() Dictionary<string, object>.ContainsKey(string) Dictionary<string, object>.ContainsValue(object) Dictionary<string, object>.GetEnumerator() Dictionary<string, object>.GetObjectData(SerializationInfo, StreamingContext) Dictionary<string, object>.OnDeserialization(object) Dictionary<string, object>.Remove(string) Dictionary<string, object>.TryGetValue(string, out object) Dictionary<string, object>.Comparer Dictionary<string, object>.Count Dictionary<string, object>.this[string] Dictionary<string, object>.Keys Dictionary<string, object>.Values object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ProjectionExtensionMethods.ToProjection<T>(IEnumerable<T>, Table) Properties Current public static ScenarioStepContext Current { get; } Property Value ScenarioStepContext Status public ScenarioExecutionStatus Status { get; set; } Property Value ScenarioExecutionStatus StepInfo public StepInfo StepInfo { get; } Property Value StepInfo"
  },
  "api/Reqnroll.ScopeAttribute.html": {
    "href": "api/Reqnroll.ScopeAttribute.html",
    "title": "Class ScopeAttribute | Unofficial Reqnroll Documentation",
    "summary": "Class ScopeAttribute Namespace Reqnroll Assembly Reqnroll.dll Restricts the binding attributes (step definition, hook, etc.) to be applied only in a specific scope. [AttributeUsage(AttributeTargets.Class|AttributeTargets.Method, AllowMultiple = true)] public class ScopeAttribute : Attribute Inheritance object Attribute ScopeAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Feature public string Feature { get; set; } Property Value string Scenario public string Scenario { get; set; } Property Value string Tag public string Tag { get; set; } Property Value string"
  },
  "api/Reqnroll.SetComparisonExtensionMethods.html": {
    "href": "api/Reqnroll.SetComparisonExtensionMethods.html",
    "title": "Class SetComparisonExtensionMethods | Unofficial Reqnroll Documentation",
    "summary": "Class SetComparisonExtensionMethods Namespace Reqnroll Assembly Reqnroll.dll public static class SetComparisonExtensionMethods Inheritance object SetComparisonExtensionMethods Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CompareToSet<T>(Table, IEnumerable<T>, bool) public static void CompareToSet<T>(this Table table, IEnumerable<T> set, bool sequentialEquality = false) Parameters table Table set IEnumerable<T> sequentialEquality bool Type Parameters T"
  },
  "api/Reqnroll.StepArgumentTransformationAttribute.html": {
    "href": "api/Reqnroll.StepArgumentTransformationAttribute.html",
    "title": "Class StepArgumentTransformationAttribute | Unofficial Reqnroll Documentation",
    "summary": "Class StepArgumentTransformationAttribute Namespace Reqnroll Assembly Reqnroll.dll Specifies the method to be used as a custom step definition parameter conversion. [AttributeUsage(AttributeTargets.Method, AllowMultiple = true)] public class StepArgumentTransformationAttribute : Attribute Inheritance object Attribute StepArgumentTransformationAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors StepArgumentTransformationAttribute() public StepArgumentTransformationAttribute() StepArgumentTransformationAttribute(string, int) public StepArgumentTransformationAttribute(string regex, int order = 10000) Parameters regex string order int Fields DefaultOrder public const int DefaultOrder = 10000 Field Value int Properties Name The custom parameter type name to be used in Cucumber Expressions public string Name { get; set; } Property Value string Order Specifies the deterministic order for step argument transformations. Lower numbers have higher priority. Default value is 10000. public int Order { get; set; } Property Value int Regex The regular expression that have to match the step argument. The entire argument is passed to the method if omitted. public string Regex { get; set; } Property Value string"
  },
  "api/Reqnroll.StepDefinitionAttribute.html": {
    "href": "api/Reqnroll.StepDefinitionAttribute.html",
    "title": "Class StepDefinitionAttribute | Unofficial Reqnroll Documentation",
    "summary": "Class StepDefinitionAttribute Namespace Reqnroll Assembly Reqnroll.dll Specifies a step definition that matches for the provided regular expression and any step kinds (given, when, then). public class StepDefinitionAttribute : StepDefinitionBaseAttribute Inheritance object Attribute StepDefinitionBaseAttribute StepDefinitionAttribute Inherited Members StepDefinitionBaseAttribute.Types StepDefinitionBaseAttribute.Regex StepDefinitionBaseAttribute.Culture Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors StepDefinitionAttribute() public StepDefinitionAttribute() StepDefinitionAttribute(string) public StepDefinitionAttribute(string regex) Parameters regex string StepDefinitionAttribute(string, string) public StepDefinitionAttribute(string regex, string culture) Parameters regex string culture string"
  },
  "api/Reqnroll.StepDefinitionBaseAttribute.html": {
    "href": "api/Reqnroll.StepDefinitionBaseAttribute.html",
    "title": "Class StepDefinitionBaseAttribute | Unofficial Reqnroll Documentation",
    "summary": "Class StepDefinitionBaseAttribute Namespace Reqnroll Assembly Reqnroll.dll [AttributeUsage(AttributeTargets.Method, AllowMultiple = true)] public abstract class StepDefinitionBaseAttribute : Attribute Inheritance object Attribute StepDefinitionBaseAttribute Derived GivenAttribute StepDefinitionAttribute ThenAttribute WhenAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors StepDefinitionBaseAttribute(string, StepDefinitionType[]) protected StepDefinitionBaseAttribute(string regex, StepDefinitionType[] types) Parameters regex string types StepDefinitionType[] Properties Culture additional information in which culture the step is written it does not affect the matching of the step it is only for tooling support needed public string Culture { get; set; } Property Value string Regex public string Regex { get; set; } Property Value string Types public StepDefinitionType[] Types { get; } Property Value StepDefinitionType[]"
  },
  "api/Reqnroll.StepInfo.html": {
    "href": "api/Reqnroll.StepInfo.html",
    "title": "Class StepInfo | Unofficial Reqnroll Documentation",
    "summary": "Class StepInfo Namespace Reqnroll Assembly Reqnroll.dll public class StepInfo Inheritance object StepInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors StepInfo(StepDefinitionType, string, Table, string) public StepInfo(StepDefinitionType stepDefinitionType, string text, Table table, string multilineText) Parameters stepDefinitionType StepDefinitionType text string table Table multilineText string Properties BindingMatch public BindingMatch BindingMatch { get; set; } Property Value BindingMatch MultilineText public string MultilineText { get; } Property Value string StepDefinitionType public StepDefinitionType StepDefinitionType { get; } Property Value StepDefinitionType StepInstance public StepInstance StepInstance { get; set; } Property Value StepInstance Table public Table Table { get; } Property Value Table Text public string Text { get; } Property Value string"
  },
  "api/Reqnroll.Steps.html": {
    "href": "api/Reqnroll.Steps.html",
    "title": "Class Steps | Unofficial Reqnroll Documentation",
    "summary": "Class Steps Namespace Reqnroll Assembly Reqnroll.dll public abstract class Steps : IContainerDependentObject Inheritance object Steps Implements IContainerDependentObject Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties FeatureContext public FeatureContext FeatureContext { get; } Property Value FeatureContext ScenarioContext public ScenarioContext ScenarioContext { get; } Property Value ScenarioContext StepContext public ScenarioStepContext StepContext { get; } Property Value ScenarioStepContext SyncTestRunner protected ISyncTestRunner SyncTestRunner { get; } Property Value ISyncTestRunner TestRunner protected ITestRunner TestRunner { get; } Property Value ITestRunner TestThreadContext public TestThreadContext TestThreadContext { get; } Property Value TestThreadContext Methods AssertInitialized() protected void AssertInitialized()"
  },
  "api/Reqnroll.Table.html": {
    "href": "api/Reqnroll.Table.html",
    "title": "Class Table | Unofficial Reqnroll Documentation",
    "summary": "Class Table Namespace Reqnroll Assembly Reqnroll.dll An alias for the DataTable class for backwards compatibility. [Serializable] public class Table Inheritance object Table Derived DataTable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods FindInSetExtensionMethods.FindAllInSet<T>(Table, IEnumerable<T>) FindInSetExtensionMethods.FindInSet<T>(Table, IEnumerable<T>) ProjectionExtensionMethods.ToProjectionOfInstance<T>(Table, T) ProjectionExtensionMethods.ToProjectionOfSet<T>(Table, IEnumerable<T>) ProjectionExtensionMethods.ToProjection<T>(Table) InstanceComparisonExtensionMethods.CompareToInstance<T>(Table, T) InstanceComparisonExtensionMethods.IsEquivalentToInstance<T>(Table, T) SetComparisonExtensionMethods.CompareToSet<T>(Table, IEnumerable<T>, bool) TableHelperExtensionMethods.CreateInstance<T>(Table) TableHelperExtensionMethods.CreateInstance<T>(Table, InstanceCreationOptions) TableHelperExtensionMethods.CreateInstance<T>(Table, Func<T>) TableHelperExtensionMethods.CreateInstance<T>(Table, Func<T>, InstanceCreationOptions) TableHelperExtensionMethods.CreateSet<T>(Table) TableHelperExtensionMethods.CreateSet<T>(Table, InstanceCreationOptions) TableHelperExtensionMethods.CreateSet<T>(Table, Func<DataTableRow, T>) TableHelperExtensionMethods.CreateSet<T>(Table, Func<DataTableRow, T>, InstanceCreationOptions) TableHelperExtensionMethods.CreateSet<T>(Table, Func<T>) TableHelperExtensionMethods.CreateSet<T>(Table, Func<T>, InstanceCreationOptions) TableHelperExtensionMethods.FillInstance(Table, object) TableHelperExtensionMethods.FillInstance(Table, object, InstanceCreationOptions) Constructors Table(Table) protected Table(Table copyFrom) Parameters copyFrom Table Table(params string[]) public Table(params string[] header) Parameters header string[] Table(string[], string[][]) protected Table(string[] header, string[][] dataRows) Parameters header string[] dataRows string[][] Properties Header public ICollection<string> Header { get; } Property Value ICollection<string> RowCount public int RowCount { get; } Property Value int Rows public DataTableRows Rows { get; } Property Value DataTableRows Methods AddRow(IDictionary<string, string>) public void AddRow(IDictionary<string, string> values) Parameters values IDictionary<string, string> AddRow(params string[]) public void AddRow(params string[] cells) Parameters cells string[] ContainsColumn(string) public bool ContainsColumn(string column) Parameters column string Returns bool RenameColumn(string, string) public void RenameColumn(string oldColumn, string newColumn) Parameters oldColumn string newColumn string ToString() public override string ToString() Returns string ToString(bool, bool) public string ToString(bool headersOnly, bool withNewline = true) Parameters headersOnly bool withNewline bool Returns string"
  },
  "api/Reqnroll.TableHelperExtensionMethods.html": {
    "href": "api/Reqnroll.TableHelperExtensionMethods.html",
    "title": "Class TableHelperExtensionMethods | Unofficial Reqnroll Documentation",
    "summary": "Class TableHelperExtensionMethods Namespace Reqnroll Assembly Reqnroll.dll public static class TableHelperExtensionMethods Inheritance object TableHelperExtensionMethods Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CreateInstance<T>(Table) public static T CreateInstance<T>(this Table table) Parameters table Table Returns T Type Parameters T CreateInstance<T>(Table, InstanceCreationOptions) public static T CreateInstance<T>(this Table table, InstanceCreationOptions creationOptions) Parameters table Table creationOptions InstanceCreationOptions Returns T Type Parameters T CreateInstance<T>(Table, Func<T>) public static T CreateInstance<T>(this Table table, Func<T> methodToCreateTheInstance) Parameters table Table methodToCreateTheInstance Func<T> Returns T Type Parameters T CreateInstance<T>(Table, Func<T>, InstanceCreationOptions) public static T CreateInstance<T>(this Table table, Func<T> methodToCreateTheInstance, InstanceCreationOptions creationOptions) Parameters table Table methodToCreateTheInstance Func<T> creationOptions InstanceCreationOptions Returns T Type Parameters T CreateSet<T>(Table) public static IEnumerable<T> CreateSet<T>(this Table table) Parameters table Table Returns IEnumerable<T> Type Parameters T CreateSet<T>(Table, InstanceCreationOptions) public static IEnumerable<T> CreateSet<T>(this Table table, InstanceCreationOptions creationOptions) Parameters table Table creationOptions InstanceCreationOptions Returns IEnumerable<T> Type Parameters T CreateSet<T>(Table, Func<DataTableRow, T>) public static IEnumerable<T> CreateSet<T>(this Table table, Func<DataTableRow, T> methodToCreateEachInstance) Parameters table Table methodToCreateEachInstance Func<DataTableRow, T> Returns IEnumerable<T> Type Parameters T CreateSet<T>(Table, Func<DataTableRow, T>, InstanceCreationOptions) public static IEnumerable<T> CreateSet<T>(this Table table, Func<DataTableRow, T> methodToCreateEachInstance, InstanceCreationOptions creationOptions) Parameters table Table methodToCreateEachInstance Func<DataTableRow, T> creationOptions InstanceCreationOptions Returns IEnumerable<T> Type Parameters T CreateSet<T>(Table, Func<T>) public static IEnumerable<T> CreateSet<T>(this Table table, Func<T> methodToCreateEachInstance) Parameters table Table methodToCreateEachInstance Func<T> Returns IEnumerable<T> Type Parameters T CreateSet<T>(Table, Func<T>, InstanceCreationOptions) public static IEnumerable<T> CreateSet<T>(this Table table, Func<T> methodToCreateEachInstance, InstanceCreationOptions creationOptions) Parameters table Table methodToCreateEachInstance Func<T> creationOptions InstanceCreationOptions Returns IEnumerable<T> Type Parameters T FillInstance(Table, object) public static void FillInstance(this Table table, object instance) Parameters table Table instance object FillInstance(Table, object, InstanceCreationOptions) public static void FillInstance(this Table table, object instance, InstanceCreationOptions creationOptions) Parameters table Table instance object creationOptions InstanceCreationOptions"
  },
  "api/Reqnroll.TableHelpers.html": {
    "href": "api/Reqnroll.TableHelpers.html",
    "title": "Class TableHelpers | Unofficial Reqnroll Documentation",
    "summary": "Class TableHelpers Namespace Reqnroll Assembly Reqnroll.dll public static class TableHelpers Inheritance object TableHelpers Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Id(DataTableRow) public static string Id(this DataTableRow row) Parameters row DataTableRow Returns string Value(DataTableRow) public static string Value(this DataTableRow row) Parameters row DataTableRow Returns string"
  },
  "api/Reqnroll.TagHelper.html": {
    "href": "api/Reqnroll.TagHelper.html",
    "title": "Class TagHelper | Unofficial Reqnroll Documentation",
    "summary": "Class TagHelper Namespace Reqnroll Assembly Reqnroll.dll Provides helper methods around tags. public static class TagHelper Inheritance object TagHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CombineTags(string[]?, string[]?) Combines feature tags and rule tags in a way that both can be null or empty. Duplicates are removed. public static string[]? CombineTags(string[]? featureTags, string[]? ruleTags) Parameters featureTags string[] ruleTags string[] Returns string[] ContainsIgnoreTag(string[]?) Checks whether the supplied tags contain the ignore tag public static bool ContainsIgnoreTag(string[]? tags) Parameters tags string[] The tags to check. Returns bool A boolean that indicates whether or not the ignore tag is present."
  },
  "api/Reqnroll.TestFramework.DefaultTestRunSettingsProvider.html": {
    "href": "api/Reqnroll.TestFramework.DefaultTestRunSettingsProvider.html",
    "title": "Class DefaultTestRunSettingsProvider | Unofficial Reqnroll Documentation",
    "summary": "Class DefaultTestRunSettingsProvider Namespace Reqnroll.TestFramework Assembly Reqnroll.dll public class DefaultTestRunSettingsProvider : ITestRunSettingsProvider Inheritance object DefaultTestRunSettingsProvider Implements ITestRunSettingsProvider Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DefaultTestRunSettingsProvider(IEnvironmentWrapper) public DefaultTestRunSettingsProvider(IEnvironmentWrapper environmentWrapper) Parameters environmentWrapper IEnvironmentWrapper Methods GetTestDirectory() public string GetTestDirectory() Returns string"
  },
  "api/Reqnroll.TestFramework.ITestRunSettingsProvider.html": {
    "href": "api/Reqnroll.TestFramework.ITestRunSettingsProvider.html",
    "title": "Interface ITestRunSettingsProvider | Unofficial Reqnroll Documentation",
    "summary": "Interface ITestRunSettingsProvider Namespace Reqnroll.TestFramework Assembly Reqnroll.dll public interface ITestRunSettingsProvider Methods GetTestDirectory() string GetTestDirectory() Returns string"
  },
  "api/Reqnroll.TestFramework.html": {
    "href": "api/Reqnroll.TestFramework.html",
    "title": "Namespace Reqnroll.TestFramework | Unofficial Reqnroll Documentation",
    "summary": "Namespace Reqnroll.TestFramework Classes DefaultTestRunSettingsProvider Interfaces ITestRunSettingsProvider"
  },
  "api/Reqnroll.TestRunner.html": {
    "href": "api/Reqnroll.TestRunner.html",
    "title": "Class TestRunner | Unofficial Reqnroll Documentation",
    "summary": "Class TestRunner Namespace Reqnroll Assembly Reqnroll.dll public class TestRunner : ITestRunner Inheritance object TestRunner Implements ITestRunner Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods TestRunnerDefaultArguments.AndAsync(ITestRunner, string) TestRunnerDefaultArguments.ButAsync(ITestRunner, string) TestRunnerDefaultArguments.GivenAsync(ITestRunner, string) TestRunnerDefaultArguments.ThenAsync(ITestRunner, string) TestRunnerDefaultArguments.WhenAsync(ITestRunner, string) Constructors TestRunner(ITestExecutionEngine) public TestRunner(ITestExecutionEngine executionEngine) Parameters executionEngine ITestExecutionEngine Properties FeatureContext public FeatureContext FeatureContext { get; } Property Value FeatureContext ScenarioContext public ScenarioContext ScenarioContext { get; } Property Value ScenarioContext TestThreadContext public ITestThreadContext TestThreadContext { get; } Property Value ITestThreadContext TestWorkerId The ID of the parallel test worker processing the current scenario. public string TestWorkerId { get; } Property Value string Methods AndAsync(string, string, Table, string) public Task AndAsync(string text, string multilineTextArg, Table tableArg, string keyword = null) Parameters text string multilineTextArg string tableArg Table keyword string Returns Task ButAsync(string, string, Table, string) public Task ButAsync(string text, string multilineTextArg, Table tableArg, string keyword = null) Parameters text string multilineTextArg string tableArg Table keyword string Returns Task CollectScenarioErrorsAsync() public Task CollectScenarioErrorsAsync() Returns Task GivenAsync(string, string, Table, string) public Task GivenAsync(string text, string multilineTextArg, Table tableArg, string keyword = null) Parameters text string multilineTextArg string tableArg Table keyword string Returns Task InitializeTestRunner(string) [Obsolete(\"TestWorkerId is now managed by Reqnroll internally - Method will be removed in v3\")] public void InitializeTestRunner(string testWorkerId) Parameters testWorkerId string OnFeatureEndAsync() public Task OnFeatureEndAsync() Returns Task OnFeatureStartAsync(FeatureInfo) public Task OnFeatureStartAsync(FeatureInfo featureInfo) Parameters featureInfo FeatureInfo Returns Task OnScenarioEndAsync() public Task OnScenarioEndAsync() Returns Task OnScenarioInitialize(ScenarioInfo) public void OnScenarioInitialize(ScenarioInfo scenarioInfo) Parameters scenarioInfo ScenarioInfo OnScenarioStartAsync() public Task OnScenarioStartAsync() Returns Task OnTestRunEndAsync() public Task OnTestRunEndAsync() Returns Task OnTestRunStartAsync() public Task OnTestRunStartAsync() Returns Task Pending() public void Pending() SkipScenario() public void SkipScenario() ThenAsync(string, string, Table, string) public Task ThenAsync(string text, string multilineTextArg, Table tableArg, string keyword = null) Parameters text string multilineTextArg string tableArg Table keyword string Returns Task WhenAsync(string, string, Table, string) public Task WhenAsync(string text, string multilineTextArg, Table tableArg, string keyword = null) Parameters text string multilineTextArg string tableArg Table keyword string Returns Task"
  },
  "api/Reqnroll.TestRunnerDefaultArguments.html": {
    "href": "api/Reqnroll.TestRunnerDefaultArguments.html",
    "title": "Class TestRunnerDefaultArguments | Unofficial Reqnroll Documentation",
    "summary": "Class TestRunnerDefaultArguments Namespace Reqnroll Assembly Reqnroll.dll public static class TestRunnerDefaultArguments Inheritance object TestRunnerDefaultArguments Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AndAsync(ITestRunner, string) public static Task AndAsync(this ITestRunner testRunner, string text) Parameters testRunner ITestRunner text string Returns Task ButAsync(ITestRunner, string) public static Task ButAsync(this ITestRunner testRunner, string text) Parameters testRunner ITestRunner text string Returns Task GivenAsync(ITestRunner, string) public static Task GivenAsync(this ITestRunner testRunner, string text) Parameters testRunner ITestRunner text string Returns Task ThenAsync(ITestRunner, string) public static Task ThenAsync(this ITestRunner testRunner, string text) Parameters testRunner ITestRunner text string Returns Task WhenAsync(ITestRunner, string) public static Task WhenAsync(this ITestRunner testRunner, string text) Parameters testRunner ITestRunner text string Returns Task"
  },
  "api/Reqnroll.TestRunnerManager.html": {
    "href": "api/Reqnroll.TestRunnerManager.html",
    "title": "Class TestRunnerManager | Unofficial Reqnroll Documentation",
    "summary": "Class TestRunnerManager Namespace Reqnroll Assembly Reqnroll.dll public class TestRunnerManager : ITestRunnerManager Inheritance object TestRunnerManager Implements ITestRunnerManager Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TestRunnerManager(IObjectContainer, IContainerBuilder, ReqnrollConfiguration, IRuntimeBindingRegistryBuilder, ITestTracer) public TestRunnerManager(IObjectContainer globalContainer, IContainerBuilder containerBuilder, ReqnrollConfiguration reqnrollConfiguration, IRuntimeBindingRegistryBuilder bindingRegistryBuilder, ITestTracer testTracer) Parameters globalContainer IObjectContainer containerBuilder IContainerBuilder reqnrollConfiguration ReqnrollConfiguration bindingRegistryBuilder IRuntimeBindingRegistryBuilder testTracer ITestTracer Fields _bindingRegistryBuilder protected readonly IRuntimeBindingRegistryBuilder _bindingRegistryBuilder Field Value IRuntimeBindingRegistryBuilder _containerBuilder protected readonly IContainerBuilder _containerBuilder Field Value IContainerBuilder _globalContainer protected readonly IObjectContainer _globalContainer Field Value IObjectContainer _reqnrollConfiguration protected readonly ReqnrollConfiguration _reqnrollConfiguration Field Value ReqnrollConfiguration _testTracer protected readonly ITestTracer _testTracer Field Value ITestTracer Properties BindingAssemblies public Assembly[] BindingAssemblies { get; } Property Value Assembly[] IsMultiThreaded public bool IsMultiThreaded { get; } Property Value bool IsTestRunInitialized public bool IsTestRunInitialized { get; } Property Value bool TestAssembly public Assembly TestAssembly { get; } Property Value Assembly Methods BuildBindingRegistry(IEnumerable<Assembly>) protected virtual void BuildBindingRegistry(IEnumerable<Assembly> bindingAssemblies) Parameters bindingAssemblies IEnumerable<Assembly> DisposeAsync() public virtual Task DisposeAsync() Returns Task FireTestRunEndAsync() public Task FireTestRunEndAsync() Returns Task FireTestRunStartAsync() public Task FireTestRunStartAsync() Returns Task GetOrCreateTestRunner(FeatureInfo) public virtual ITestRunner GetOrCreateTestRunner(FeatureInfo featureHint = null) Parameters featureHint FeatureInfo Returns ITestRunner GetOrCreateTestRunnerInstance(FeatureInfo) protected virtual ITestRunner GetOrCreateTestRunnerInstance(FeatureInfo featureHint = null) Parameters featureHint FeatureInfo Returns ITestRunner GetTestRunner(FeatureInfo) public virtual ITestRunner GetTestRunner(FeatureInfo featureHint = null) Parameters featureHint FeatureInfo Returns ITestRunner GetTestRunnerForAssembly(Assembly, IContainerBuilder, FeatureInfo) Provides a test runner for the specified or current assembly with optionally a custom container builder and a feature hint. When a feature hint is provided the test runner manager will attempt to return the same test runner that was used for that feature before. public static ITestRunner GetTestRunnerForAssembly(Assembly testAssembly = null, IContainerBuilder containerBuilder = null, FeatureInfo featureHint = null) Parameters testAssembly Assembly The test assembly. If omitted or invoked with null, the calling assembly is used. containerBuilder IContainerBuilder The container builder to be used to set up Reqnroll dependencies. If omitted or invoked with null, the default container builder is used. featureHint FeatureInfo If specified, it is used as a hint for the test runner manager to choose the test runner that has been used for the feature before, if possible. Returns ITestRunner A test runner that can be used to interact with Reqnroll. GetTestRunnerManager(Assembly, IContainerBuilder, bool) public static ITestRunnerManager GetTestRunnerManager(Assembly testAssembly = null, IContainerBuilder containerBuilder = null, bool createIfMissing = true) Parameters testAssembly Assembly containerBuilder IContainerBuilder createIfMissing bool Returns ITestRunnerManager Initialize(Assembly) public void Initialize(Assembly assignedTestAssembly) Parameters assignedTestAssembly Assembly InitializeBindingRegistry(ITestRunner) protected virtual void InitializeBindingRegistry(ITestRunner testRunner) Parameters testRunner ITestRunner OnDomainUnloadAsync() protected virtual Task OnDomainUnloadAsync() Returns Task OnTestRunEndAsync(Assembly, IContainerBuilder) public static Task OnTestRunEndAsync(Assembly testAssembly = null, IContainerBuilder containerBuilder = null) Parameters testAssembly Assembly containerBuilder IContainerBuilder Returns Task OnTestRunStartAsync(Assembly, IContainerBuilder) public static Task OnTestRunStartAsync(Assembly testAssembly = null, IContainerBuilder containerBuilder = null) Parameters testAssembly Assembly containerBuilder IContainerBuilder Returns Task ReleaseTestRunner(ITestRunner) public static void ReleaseTestRunner(ITestRunner testRunner) Parameters testRunner ITestRunner ReleaseTestThreadContext(ITestThreadContext) public virtual void ReleaseTestThreadContext(ITestThreadContext testThreadContext) Parameters testThreadContext ITestThreadContext"
  },
  "api/Reqnroll.TestThreadContext.html": {
    "href": "api/Reqnroll.TestThreadContext.html",
    "title": "Class TestThreadContext | Unofficial Reqnroll Documentation",
    "summary": "Class TestThreadContext Namespace Reqnroll Assembly Reqnroll.dll public class TestThreadContext : ReqnrollContext, IDictionary<string, object>, ICollection<KeyValuePair<string, object>>, IReadOnlyDictionary<string, object>, IReadOnlyCollection<KeyValuePair<string, object>>, IEnumerable<KeyValuePair<string, object>>, IDictionary, ICollection, IEnumerable, IDeserializationCallback, ISerializable, IDisposable, ITestThreadContext, IReqnrollContext Inheritance object Dictionary<string, object> ReqnrollContext TestThreadContext Implements IDictionary<string, object> ICollection<KeyValuePair<string, object>> IReadOnlyDictionary<string, object> IReadOnlyCollection<KeyValuePair<string, object>> IEnumerable<KeyValuePair<string, object>> IDictionary ICollection IEnumerable IDeserializationCallback ISerializable IDisposable ITestThreadContext IReqnrollContext Inherited Members ReqnrollContext.TestError ReqnrollContext.TryGetValue<TValue>(out TValue) ReqnrollContext.TryGetValue<TValue>(string, out TValue) ReqnrollContext.Set<T>(T) ReqnrollContext.Set<T>(T, string) ReqnrollContext.Set<T>(Func<T>) ReqnrollContext.Get<T>() ReqnrollContext.Get<T>(string) Dictionary<string, object>.Add(string, object) Dictionary<string, object>.Clear() Dictionary<string, object>.ContainsKey(string) Dictionary<string, object>.ContainsValue(object) Dictionary<string, object>.GetEnumerator() Dictionary<string, object>.GetObjectData(SerializationInfo, StreamingContext) Dictionary<string, object>.OnDeserialization(object) Dictionary<string, object>.Remove(string) Dictionary<string, object>.TryGetValue(string, out object) Dictionary<string, object>.Comparer Dictionary<string, object>.Count Dictionary<string, object>.this[string] Dictionary<string, object>.Keys Dictionary<string, object>.Values object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ProjectionExtensionMethods.ToProjection<T>(IEnumerable<T>, Table) Constructors TestThreadContext(IObjectContainer) public TestThreadContext(IObjectContainer testThreadContainer) Parameters testThreadContainer IObjectContainer Properties TestThreadContainer public IObjectContainer TestThreadContainer { get; } Property Value IObjectContainer Methods Dispose() protected override void Dispose() Events Disposing public event Action<TestThreadContext> Disposing Event Type Action<TestThreadContext>"
  },
  "api/Reqnroll.ThenAttribute.html": {
    "href": "api/Reqnroll.ThenAttribute.html",
    "title": "Class ThenAttribute | Unofficial Reqnroll Documentation",
    "summary": "Class ThenAttribute Namespace Reqnroll Assembly Reqnroll.dll Specifies a 'Then' step definition that matches for the provided regular expression. public class ThenAttribute : StepDefinitionBaseAttribute Inheritance object Attribute StepDefinitionBaseAttribute ThenAttribute Inherited Members StepDefinitionBaseAttribute.Types StepDefinitionBaseAttribute.Regex StepDefinitionBaseAttribute.Culture Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ThenAttribute() public ThenAttribute() ThenAttribute(string) public ThenAttribute(string regex) Parameters regex string ThenAttribute(string, string) public ThenAttribute(string regex, string culture) Parameters regex string culture string"
  },
  "api/Reqnroll.Time.IClock.html": {
    "href": "api/Reqnroll.Time.IClock.html",
    "title": "Interface IClock | Unofficial Reqnroll Documentation",
    "summary": "Interface IClock Namespace Reqnroll.Time Assembly Reqnroll.dll public interface IClock Methods GetNowDateAndTime() DateTime GetNowDateAndTime() Returns DateTime GetToday() DateTime GetToday() Returns DateTime"
  },
  "api/Reqnroll.Time.UtcDateTimeClock.html": {
    "href": "api/Reqnroll.Time.UtcDateTimeClock.html",
    "title": "Class UtcDateTimeClock | Unofficial Reqnroll Documentation",
    "summary": "Class UtcDateTimeClock Namespace Reqnroll.Time Assembly Reqnroll.dll public class UtcDateTimeClock : IClock Inheritance object UtcDateTimeClock Implements IClock Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetNowDateAndTime() public DateTime GetNowDateAndTime() Returns DateTime GetToday() public DateTime GetToday() Returns DateTime"
  },
  "api/Reqnroll.Time.html": {
    "href": "api/Reqnroll.Time.html",
    "title": "Namespace Reqnroll.Time | Unofficial Reqnroll Documentation",
    "summary": "Namespace Reqnroll.Time Classes UtcDateTimeClock Interfaces IClock"
  },
  "api/Reqnroll.Tracing.AnsiColor.AnsiColor.html": {
    "href": "api/Reqnroll.Tracing.AnsiColor.AnsiColor.html",
    "title": "Struct AnsiColor | Unofficial Reqnroll Documentation",
    "summary": "Struct AnsiColor Namespace Reqnroll.Tracing.AnsiColor Assembly Reqnroll.dll public readonly struct AnsiColor Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors AnsiColor(params AnsiColor[]) public AnsiColor(params AnsiColor[] codes) Parameters codes AnsiColor[] AnsiColor(TerminalControlSequences) public AnsiColor(TerminalControlSequences controlSequence) Parameters controlSequence TerminalControlSequences AnsiColor(TerminalControlSequences, Terminal256ColorCodes) public AnsiColor(TerminalControlSequences controlSequence, Terminal256ColorCodes colorCode256) Parameters controlSequence TerminalControlSequences colorCode256 Terminal256ColorCodes AnsiColor(TerminalControlSequences, TerminalRgbColor) public AnsiColor(TerminalControlSequences controlSequence, TerminalRgbColor rgbColor) Parameters controlSequence TerminalControlSequences rgbColor TerminalRgbColor Fields Bold public static AnsiColor Bold Field Value AnsiColor ColorCode256 public readonly Terminal256ColorCodes ColorCode256 Field Value Terminal256ColorCodes ControlSequence public readonly TerminalControlSequences ControlSequence Field Value TerminalControlSequences Italic public static AnsiColor Italic Field Value AnsiColor Reset public static AnsiColor Reset Field Value AnsiColor ResetSequence public readonly TerminalControlSequences ResetSequence Field Value TerminalControlSequences RgbColorCode public readonly TerminalRgbColor RgbColorCode Field Value TerminalRgbColor Strike public static AnsiColor Strike Field Value AnsiColor Underline public static AnsiColor Underline Field Value AnsiColor Properties Codes public AnsiColor[]? Codes { get; } Property Value AnsiColor[] Methods Background(Terminal256ColorCodes) public static AnsiColor Background(Terminal256ColorCodes color) Parameters color Terminal256ColorCodes Returns AnsiColor Background(TerminalRgbColor) public static AnsiColor Background(TerminalRgbColor color) Parameters color TerminalRgbColor Returns AnsiColor Background(int, int, int) public static AnsiColor Background(int r, int g, int b) Parameters r int g int b int Returns AnsiColor Colorize(string?) public string Colorize(string? text) Parameters text string Returns string ColorizeText(string?, AnsiColor) public static string? ColorizeText(string? text, AnsiColor code) Parameters text string code AnsiColor Returns string Composite(params AnsiColor[]) public static AnsiColor Composite(params AnsiColor[] codes) Parameters codes AnsiColor[] Returns AnsiColor Foreground(Terminal256ColorCodes) public static AnsiColor Foreground(Terminal256ColorCodes color) Parameters color Terminal256ColorCodes Returns AnsiColor Foreground(TerminalRgbColor) public static AnsiColor Foreground(TerminalRgbColor color) Parameters color TerminalRgbColor Returns AnsiColor Foreground(int, int, int) public static AnsiColor Foreground(int r, int g, int b) Parameters r int g int b int Returns AnsiColor ToEscapeParameters(StringBuilder) public void ToEscapeParameters(StringBuilder sb) Parameters sb StringBuilder ToEscapeSequence() public string ToEscapeSequence() Returns string ToEscapeSequence(StringBuilder) public void ToEscapeSequence(StringBuilder sb) Parameters sb StringBuilder ToResetSequence() public string ToResetSequence() Returns string ToResetSequence(StringBuilder) public void ToResetSequence(StringBuilder sb) Parameters sb StringBuilder ToString() public override string ToString() Returns string ToString(StringBuilder) public void ToString(StringBuilder sb) Parameters sb StringBuilder"
  },
  "api/Reqnroll.Tracing.AnsiColor.InvalidColorException.html": {
    "href": "api/Reqnroll.Tracing.AnsiColor.InvalidColorException.html",
    "title": "Class InvalidColorException | Unofficial Reqnroll Documentation",
    "summary": "Class InvalidColorException Namespace Reqnroll.Tracing.AnsiColor Assembly Reqnroll.dll public class InvalidColorException : Exception, ISerializable Inheritance object Exception InvalidColorException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors InvalidColorException(string?) public InvalidColorException(string? message) Parameters message string"
  },
  "api/Reqnroll.Tracing.AnsiColor.Terminal256ColorCodes.html": {
    "href": "api/Reqnroll.Tracing.AnsiColor.Terminal256ColorCodes.html",
    "title": "Enum Terminal256ColorCodes | Unofficial Reqnroll Documentation",
    "summary": "Enum Terminal256ColorCodes Namespace Reqnroll.Tracing.AnsiColor Assembly Reqnroll.dll public enum Terminal256ColorCodes Extension Methods Terminal256ColorCodesExtensions.ToColorParameter(Terminal256ColorCodes) Fields AquaC14 = 14 Aquamarine1C122 = 122 Aquamarine1C86 = 86 Aquamarine3C79 = 79 BlackC0 = 0 Blue1C21 = 21 Blue3C19 = 19 Blue3C20 = 20 BlueC12 = 12 BlueVioletC57 = 57 CadetBlueC72 = 72 CadetBlueC73 = 73 Chartreuse1C118 = 118 Chartreuse2C112 = 112 Chartreuse2C82 = 82 Chartreuse3C70 = 70 Chartreuse3C76 = 76 Chartreuse4C64 = 64 CornflowerBlueC69 = 69 Cornsilk1C230 = 230 Cyan1C51 = 51 Cyan2C50 = 50 Cyan3C43 = 43 DarkBlueC18 = 18 DarkCyanC36 = 36 DarkGoldenrodC136 = 136 DarkGreenC22 = 22 DarkKhakiC143 = 143 DarkMagentaC90 = 90 DarkMagentaC91 = 91 DarkOliveGreen1C191 = 191 DarkOliveGreen1C192 = 192 DarkOliveGreen2C155 = 155 DarkOliveGreen3C107 = 107 DarkOliveGreen3C113 = 113 DarkOliveGreen3C149 = 149 DarkOrange3C130 = 130 DarkOrange3C166 = 166 DarkOrangeC208 = 208 DarkRedC52 = 52 DarkRedC88 = 88 DarkSeaGreen1C158 = 158 DarkSeaGreen1C193 = 193 DarkSeaGreen2C151 = 151 DarkSeaGreen2C157 = 157 DarkSeaGreen3C115 = 115 DarkSeaGreen3C150 = 150 DarkSeaGreen4C65 = 65 DarkSeaGreen4C71 = 71 DarkSeaGreenC108 = 108 DarkSlateGray1C123 = 123 DarkSlateGray2C87 = 87 DarkSlateGray3C116 = 116 DarkTurquoiseC44 = 44 DarkVioletC128 = 128 DarkVioletC92 = 92 DeepPink1C198 = 198 DeepPink1C199 = 199 DeepPink2C197 = 197 DeepPink3C161 = 161 DeepPink3C162 = 162 DeepPink4C125 = 125 DeepPink4C53 = 53 DeepPink4C89 = 89 DeepSkyBlue1C39 = 39 DeepSkyBlue2C38 = 38 DeepSkyBlue3C31 = 31 DeepSkyBlue3C32 = 32 DeepSkyBlue4C23 = 23 DeepSkyBlue4C24 = 24 DeepSkyBlue4C25 = 25 DodgerBlue1C33 = 33 DodgerBlue2C27 = 27 DodgerBlue3C26 = 26 FuchsiaC13 = 13 Gold1C220 = 220 Gold3C142 = 142 Gold3C178 = 178 Green1C46 = 46 Green3C34 = 34 Green3C40 = 40 Green4C28 = 28 GreenC2 = 2 GreenYellowC154 = 154 Grey0C16 = 16 Grey100C231 = 231 Grey11C234 = 234 Grey15C235 = 235 Grey19C236 = 236 Grey23C237 = 237 Grey27C238 = 238 Grey30C239 = 239 Grey35C240 = 240 Grey37C59 = 59 Grey39C241 = 241 Grey3C232 = 232 Grey42C242 = 242 Grey46C243 = 243 Grey50C244 = 244 Grey53C102 = 102 Grey54C245 = 245 Grey58C246 = 246 Grey62C247 = 247 Grey63C139 = 139 Grey66C248 = 248 Grey69C145 = 145 Grey70C249 = 249 Grey74C250 = 250 Grey78C251 = 251 Grey7C233 = 233 Grey82C252 = 252 Grey84C188 = 188 Grey85C253 = 253 Grey89C254 = 254 Grey93C255 = 255 GreyC8 = 8 Honeydew2C194 = 194 HotPink2C169 = 169 HotPink3C132 = 132 HotPink3C168 = 168 HotPinkC205 = 205 HotPinkC206 = 206 IndianRed1C203 = 203 IndianRed1C204 = 204 IndianRedC131 = 131 IndianRedC167 = 167 Khaki1C228 = 228 Khaki3C185 = 185 LightCoralC210 = 210 LightCyan1C195 = 195 LightCyan3C152 = 152 LightGoldenrod1C227 = 227 LightGoldenrod2C186 = 186 LightGoldenrod2C221 = 221 LightGoldenrod2C222 = 222 LightGoldenrod3C179 = 179 LightGreenC119 = 119 LightGreenC120 = 120 LightPink1C217 = 217 LightPink3C174 = 174 LightPink4C95 = 95 LightSalmon1C216 = 216 LightSalmon3C137 = 137 LightSalmon3C173 = 173 LightSeaGreenC37 = 37 LightSkyBlue1C153 = 153 LightSkyBlue3C109 = 109 LightSkyBlue3C110 = 110 LightSlateBlueC105 = 105 LightSlateGreyC103 = 103 LightSteelBlue1C189 = 189 LightSteelBlue3C146 = 146 LightSteelBlueC147 = 147 LightYellow3C187 = 187 LimeC10 = 10 Magenta1C201 = 201 Magenta2C165 = 165 Magenta2C200 = 200 Magenta3C127 = 127 Magenta3C163 = 163 Magenta3C164 = 164 MaroonC1 = 1 MediumOrchid1C171 = 171 MediumOrchid1C207 = 207 MediumOrchid3C133 = 133 MediumOrchidC134 = 134 MediumPurple1C141 = 141 MediumPurple2C135 = 135 MediumPurple2C140 = 140 MediumPurple3C97 = 97 MediumPurple3C98 = 98 MediumPurple4C60 = 60 MediumPurpleC104 = 104 MediumSpringGreenC49 = 49 MediumTurquoiseC80 = 80 MediumVioletRedC126 = 126 MistyRose1C224 = 224 MistyRose3C181 = 181 NavajoWhite1C223 = 223 NavajoWhite3C144 = 144 NavyBlueC17 = 17 NavyC4 = 4 None = -1 OliveC3 = 3 Orange1C214 = 214 Orange3C172 = 172 Orange4C58 = 58 Orange4C94 = 94 OrangeRed1C202 = 202 Orchid1C213 = 213 Orchid2C212 = 212 OrchidC170 = 170 PaleGreen1C121 = 121 PaleGreen1C156 = 156 PaleGreen3C114 = 114 PaleGreen3C77 = 77 PaleTurquoise1C159 = 159 PaleTurquoise4C66 = 66 PaleVioletRed1C211 = 211 Pink1C218 = 218 Pink3C175 = 175 Plum1C219 = 219 Plum2C183 = 183 Plum3C176 = 176 Plum4C96 = 96 Purple3C56 = 56 Purple4C54 = 54 Purple4C55 = 55 PurpleC129 = 129 PurpleC5 = 5 PurpleC93 = 93 Red1C196 = 196 Red3C124 = 124 Red3C160 = 160 RedC9 = 9 RosyBrownC138 = 138 RoyalBlue1C63 = 63 Salmon1C209 = 209 SandyBrownC215 = 215 SeaGreen1C84 = 84 SeaGreen1C85 = 85 SeaGreen2C83 = 83 SeaGreen3C78 = 78 SilverC7 = 7 SkyBlue1C117 = 117 SkyBlue2C111 = 111 SkyBlue3C74 = 74 SlateBlue1C99 = 99 SlateBlue3C61 = 61 SlateBlue3C62 = 62 SpringGreen1C48 = 48 SpringGreen2C42 = 42 SpringGreen2C47 = 47 SpringGreen3C35 = 35 SpringGreen3C41 = 41 SpringGreen4C29 = 29 SteelBlue1C75 = 75 SteelBlue1C81 = 81 SteelBlue3C68 = 68 SteelBlueC67 = 67 TanC180 = 180 TealC6 = 6 Thistle1C225 = 225 Thistle3C182 = 182 Turquoise2C45 = 45 Turquoise4C30 = 30 VioletC177 = 177 Wheat1C229 = 229 Wheat4C101 = 101 WhiteC15 = 15 Yellow1C226 = 226 Yellow2C190 = 190 Yellow3C148 = 148 Yellow3C184 = 184 Yellow4C100 = 100 Yellow4C106 = 106 YellowC11 = 11"
  },
  "api/Reqnroll.Tracing.AnsiColor.Terminal256ColorCodesExtensions.html": {
    "href": "api/Reqnroll.Tracing.AnsiColor.Terminal256ColorCodesExtensions.html",
    "title": "Class Terminal256ColorCodesExtensions | Unofficial Reqnroll Documentation",
    "summary": "Class Terminal256ColorCodesExtensions Namespace Reqnroll.Tracing.AnsiColor Assembly Reqnroll.dll public static class Terminal256ColorCodesExtensions Inheritance object Terminal256ColorCodesExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ToColorParameter(Terminal256ColorCodes) public static string ToColorParameter(this Terminal256ColorCodes code) Parameters code Terminal256ColorCodes Returns string"
  },
  "api/Reqnroll.Tracing.AnsiColor.TerminalControlSequences.html": {
    "href": "api/Reqnroll.Tracing.AnsiColor.TerminalControlSequences.html",
    "title": "Enum TerminalControlSequences | Unofficial Reqnroll Documentation",
    "summary": "Enum TerminalControlSequences Namespace Reqnroll.Tracing.AnsiColor Assembly Reqnroll.dll public enum TerminalControlSequences Fields AlternativeFont1 = 11 AlternativeFont2 = 12 AlternativeFont3 = 13 AlternativeFont4 = 14 AlternativeFont5 = 15 AlternativeFont6 = 16 AlternativeFont7 = 17 AlternativeFont8 = 18 AlternativeFont9 = 19 Bold = 1 DefaultBackgroundColor = 49 DefaultForegroundColor = 39 DoublyUnderlined = 21 Faint = 2 Fraktur = 20 Hide = 8 Invert = 7 Italic = 3 NeitherItalicNorBlackletter = 23 None = -1 NormalIntensity = 22 NotBlinking = 25 NotCrossedOut = 29 NotReverse = 27 NotUnderline = 24 PrimaryFont = 10 RapidBlink = 6 Reset = 0 Reveal = 28 SetBackgroundColor = 48 SetForegroundColor = 38 SlowBlink = 5 Strike = 9 Underline = 4"
  },
  "api/Reqnroll.Tracing.AnsiColor.TerminalRgbColor.html": {
    "href": "api/Reqnroll.Tracing.AnsiColor.TerminalRgbColor.html",
    "title": "Struct TerminalRgbColor | Unofficial Reqnroll Documentation",
    "summary": "Struct TerminalRgbColor Namespace Reqnroll.Tracing.AnsiColor Assembly Reqnroll.dll public readonly struct TerminalRgbColor Inherited Members ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors TerminalRgbColor(int, int, int) public TerminalRgbColor(int r, int g, int b) Parameters r int g int b int Fields None public static readonly TerminalRgbColor None Field Value TerminalRgbColor Properties B public int B { get; } Property Value int G public int G { get; } Property Value int R public int R { get; } Property Value int Methods Equals(TerminalRgbColor) public bool Equals(TerminalRgbColor other) Parameters other TerminalRgbColor Returns bool Equals(object?) public override bool Equals(object? obj) Parameters obj object Returns bool From(int, int, int) public static TerminalRgbColor From(int r, int g, int b) Parameters r int g int b int Returns TerminalRgbColor FromHex(string) public static TerminalRgbColor FromHex(string hex) Parameters hex string Returns TerminalRgbColor GetHashCode() public override int GetHashCode() Returns int ToColorParameter() public string ToColorParameter() Returns string Operators operator ==(TerminalRgbColor, TerminalRgbColor) public static bool operator ==(TerminalRgbColor left, TerminalRgbColor right) Parameters left TerminalRgbColor right TerminalRgbColor Returns bool operator !=(TerminalRgbColor, TerminalRgbColor) public static bool operator !=(TerminalRgbColor left, TerminalRgbColor right) Parameters left TerminalRgbColor right TerminalRgbColor Returns bool"
  },
  "api/Reqnroll.Tracing.AnsiColor.html": {
    "href": "api/Reqnroll.Tracing.AnsiColor.html",
    "title": "Namespace Reqnroll.Tracing.AnsiColor | Unofficial Reqnroll Documentation",
    "summary": "Namespace Reqnroll.Tracing.AnsiColor Classes InvalidColorException Terminal256ColorCodesExtensions Structs AnsiColor TerminalRgbColor Enums Terminal256ColorCodes TerminalControlSequences"
  },
  "api/Reqnroll.Tracing.AsyncTraceListener.html": {
    "href": "api/Reqnroll.Tracing.AsyncTraceListener.html",
    "title": "Class AsyncTraceListener | Unofficial Reqnroll Documentation",
    "summary": "Class AsyncTraceListener Namespace Reqnroll.Tracing Assembly Reqnroll.dll public class AsyncTraceListener : ITraceListener Inheritance object AsyncTraceListener Implements ITraceListener Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods TraceListenerHelper.WriteTestOutput(ITraceListener, string, params object[]) TraceListenerHelper.WriteToolOutput(ITraceListener, string, params object[]) Constructors AsyncTraceListener(ITraceListenerQueue, IObjectContainer) public AsyncTraceListener(ITraceListenerQueue traceListenerQueue, IObjectContainer container) Parameters traceListenerQueue ITraceListenerQueue container IObjectContainer Methods WriteTestOutput(string) public virtual void WriteTestOutput(string message) Parameters message string WriteToolOutput(string) public virtual void WriteToolOutput(string message) Parameters message string"
  },
  "api/Reqnroll.Tracing.CodeFormattingExtensions.html": {
    "href": "api/Reqnroll.Tracing.CodeFormattingExtensions.html",
    "title": "Class CodeFormattingExtensions | Unofficial Reqnroll Documentation",
    "summary": "Class CodeFormattingExtensions Namespace Reqnroll.Tracing Assembly Reqnroll.dll public static class CodeFormattingExtensions Inheritance object CodeFormattingExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Indent(string, string) public static string Indent(this string text, string indent) Parameters text string indent string Returns string RemoveAccentAndPunctuationChars(string) public static string RemoveAccentAndPunctuationChars(string text) Parameters text string Returns string RemoveQuotationCharacters(string) public static string RemoveQuotationCharacters(string text) Parameters text string Returns string ToIdentifier(string) public static string ToIdentifier(this string text) Parameters text string Returns string ToIdentifierCamelCase(string) public static string ToIdentifierCamelCase(this string text) Parameters text string Returns string ToIdentifierPart(string) public static string ToIdentifierPart(this string text) Parameters text string Returns string TrimEllipse(string, int) public static string TrimEllipse(this string text, int maxLength) Parameters text string maxLength int Returns string"
  },
  "api/Reqnroll.Tracing.ColorOutputHelper.html": {
    "href": "api/Reqnroll.Tracing.ColorOutputHelper.html",
    "title": "Class ColorOutputHelper | Unofficial Reqnroll Documentation",
    "summary": "Class ColorOutputHelper Namespace Reqnroll.Tracing Assembly Reqnroll.dll public class ColorOutputHelper : IColorOutputHelper Inheritance object ColorOutputHelper Implements IColorOutputHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ColorOutputHelper(ReqnrollConfiguration) public ColorOutputHelper(ReqnrollConfiguration reqnrollConfiguration) Parameters reqnrollConfiguration ReqnrollConfiguration Properties EmitAnsiColorCodes public bool EmitAnsiColorCodes { get; } Property Value bool Methods Colorize(string, AnsiColor) public string Colorize(string text, AnsiColor color) Parameters text string color AnsiColor Returns string"
  },
  "api/Reqnroll.Tracing.ColorOutputTheme.html": {
    "href": "api/Reqnroll.Tracing.ColorOutputTheme.html",
    "title": "Class ColorOutputTheme | Unofficial Reqnroll Documentation",
    "summary": "Class ColorOutputTheme Namespace Reqnroll.Tracing Assembly Reqnroll.dll public class ColorOutputTheme : IColorOutputTheme Inheritance object ColorOutputTheme Implements IColorOutputTheme Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Done public AnsiColor Done { get; set; } Property Value AnsiColor Error public AnsiColor Error { get; set; } Property Value AnsiColor Keyword public AnsiColor Keyword { get; set; } Property Value AnsiColor Warning public AnsiColor Warning { get; set; } Property Value AnsiColor"
  },
  "api/Reqnroll.Tracing.DefaultListener.html": {
    "href": "api/Reqnroll.Tracing.DefaultListener.html",
    "title": "Class DefaultListener | Unofficial Reqnroll Documentation",
    "summary": "Class DefaultListener Namespace Reqnroll.Tracing Assembly Reqnroll.dll public class DefaultListener : ITraceListener Inheritance object DefaultListener Implements ITraceListener Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods TraceListenerHelper.WriteTestOutput(ITraceListener, string, params object[]) TraceListenerHelper.WriteToolOutput(ITraceListener, string, params object[]) Methods WriteTestOutput(string) public void WriteTestOutput(string message) Parameters message string WriteToolOutput(string) public void WriteToolOutput(string message) Parameters message string"
  },
  "api/Reqnroll.Tracing.IColorOutputHelper.html": {
    "href": "api/Reqnroll.Tracing.IColorOutputHelper.html",
    "title": "Interface IColorOutputHelper | Unofficial Reqnroll Documentation",
    "summary": "Interface IColorOutputHelper Namespace Reqnroll.Tracing Assembly Reqnroll.dll public interface IColorOutputHelper Properties EmitAnsiColorCodes bool EmitAnsiColorCodes { get; } Property Value bool Methods Colorize(string, AnsiColor) string Colorize(string text, AnsiColor color) Parameters text string color AnsiColor Returns string"
  },
  "api/Reqnroll.Tracing.IColorOutputTheme.html": {
    "href": "api/Reqnroll.Tracing.IColorOutputTheme.html",
    "title": "Interface IColorOutputTheme | Unofficial Reqnroll Documentation",
    "summary": "Interface IColorOutputTheme Namespace Reqnroll.Tracing Assembly Reqnroll.dll public interface IColorOutputTheme Properties Done AnsiColor Done { get; set; } Property Value AnsiColor Error AnsiColor Error { get; set; } Property Value AnsiColor Keyword AnsiColor Keyword { get; set; } Property Value AnsiColor Warning AnsiColor Warning { get; set; } Property Value AnsiColor"
  },
  "api/Reqnroll.Tracing.IStepFormatter.html": {
    "href": "api/Reqnroll.Tracing.IStepFormatter.html",
    "title": "Interface IStepFormatter | Unofficial Reqnroll Documentation",
    "summary": "Interface IStepFormatter Namespace Reqnroll.Tracing Assembly Reqnroll.dll public interface IStepFormatter Methods GetMatchText(BindingMatch, object[]) string GetMatchText(BindingMatch match, object[] arguments) Parameters match BindingMatch arguments object[] Returns string GetMatchText(IBindingMethod, object[]) string GetMatchText(IBindingMethod method, object[] arguments) Parameters method IBindingMethod arguments object[] Returns string GetStepDescription(StepInstance) string GetStepDescription(StepInstance stepInstance) Parameters stepInstance StepInstance Returns string GetStepText(StepInstance) string GetStepText(StepInstance stepInstance) Parameters stepInstance StepInstance Returns string"
  },
  "api/Reqnroll.Tracing.ITestTracer.html": {
    "href": "api/Reqnroll.Tracing.ITestTracer.html",
    "title": "Interface ITestTracer | Unofficial Reqnroll Documentation",
    "summary": "Interface ITestTracer Namespace Reqnroll.Tracing Assembly Reqnroll.dll public interface ITestTracer Methods TraceBindingError(BindingException) void TraceBindingError(BindingException ex) Parameters ex BindingException TraceDuration(TimeSpan, IBindingMethod, object[]) void TraceDuration(TimeSpan elapsed, IBindingMethod method, object[] arguments) Parameters elapsed TimeSpan method IBindingMethod arguments object[] TraceDuration(TimeSpan, string) void TraceDuration(TimeSpan elapsed, string text) Parameters elapsed TimeSpan text string TraceError(Exception, TimeSpan) void TraceError(Exception ex, TimeSpan duration) Parameters ex Exception duration TimeSpan TraceNoMatchingStepDefinition(StepInstance, ProgrammingLanguage, CultureInfo, List<BindingMatch>) void TraceNoMatchingStepDefinition(StepInstance stepInstance, ProgrammingLanguage targetLanguage, CultureInfo bindingCulture, List<BindingMatch> matchesWithoutScopeCheck) Parameters stepInstance StepInstance targetLanguage ProgrammingLanguage bindingCulture CultureInfo matchesWithoutScopeCheck List<BindingMatch> TraceStep(StepInstance, bool) void TraceStep(StepInstance stepInstance, bool showAdditionalArguments) Parameters stepInstance StepInstance showAdditionalArguments bool TraceStepDone(BindingMatch, object[], TimeSpan) void TraceStepDone(BindingMatch match, object[] arguments, TimeSpan duration) Parameters match BindingMatch arguments object[] duration TimeSpan TraceStepPending(BindingMatch, object[]) void TraceStepPending(BindingMatch match, object[] arguments) Parameters match BindingMatch arguments object[] TraceStepSkipped() void TraceStepSkipped() TraceWarning(string) void TraceWarning(string text) Parameters text string"
  },
  "api/Reqnroll.Tracing.IThreadSafeTraceListener.html": {
    "href": "api/Reqnroll.Tracing.IThreadSafeTraceListener.html",
    "title": "Interface IThreadSafeTraceListener | Unofficial Reqnroll Documentation",
    "summary": "Interface IThreadSafeTraceListener Namespace Reqnroll.Tracing Assembly Reqnroll.dll Marker interface for trace listener that do not need queued execution public interface IThreadSafeTraceListener : ITraceListener Inherited Members ITraceListener.WriteTestOutput(string) ITraceListener.WriteToolOutput(string) Extension Methods TraceListenerHelper.WriteTestOutput(ITraceListener, string, params object[]) TraceListenerHelper.WriteToolOutput(ITraceListener, string, params object[])"
  },
  "api/Reqnroll.Tracing.ITraceListener.html": {
    "href": "api/Reqnroll.Tracing.ITraceListener.html",
    "title": "Interface ITraceListener | Unofficial Reqnroll Documentation",
    "summary": "Interface ITraceListener Namespace Reqnroll.Tracing Assembly Reqnroll.dll public interface ITraceListener Extension Methods TraceListenerHelper.WriteTestOutput(ITraceListener, string, params object[]) TraceListenerHelper.WriteToolOutput(ITraceListener, string, params object[]) Methods WriteTestOutput(string) void WriteTestOutput(string message) Parameters message string WriteToolOutput(string) void WriteToolOutput(string message) Parameters message string"
  },
  "api/Reqnroll.Tracing.ITraceListenerQueue.html": {
    "href": "api/Reqnroll.Tracing.ITraceListenerQueue.html",
    "title": "Interface ITraceListenerQueue | Unofficial Reqnroll Documentation",
    "summary": "Interface ITraceListenerQueue Namespace Reqnroll.Tracing Assembly Reqnroll.dll public interface ITraceListenerQueue : IDisposable Inherited Members IDisposable.Dispose() Methods EnqueueMessage(ITestRunner, string, bool) void EnqueueMessage(ITestRunner sourceTestRunner, string message, bool isToolMessgae) Parameters sourceTestRunner ITestRunner message string isToolMessgae bool Start() void Start()"
  },
  "api/Reqnroll.Tracing.NullListener.html": {
    "href": "api/Reqnroll.Tracing.NullListener.html",
    "title": "Class NullListener | Unofficial Reqnroll Documentation",
    "summary": "Class NullListener Namespace Reqnroll.Tracing Assembly Reqnroll.dll public class NullListener : IThreadSafeTraceListener, ITraceListener Inheritance object NullListener Implements IThreadSafeTraceListener ITraceListener Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods TraceListenerHelper.WriteTestOutput(ITraceListener, string, params object[]) TraceListenerHelper.WriteToolOutput(ITraceListener, string, params object[]) Methods WriteTestOutput(string) public void WriteTestOutput(string message) Parameters message string WriteToolOutput(string) public void WriteToolOutput(string message) Parameters message string"
  },
  "api/Reqnroll.Tracing.TestTracer.html": {
    "href": "api/Reqnroll.Tracing.TestTracer.html",
    "title": "Class TestTracer | Unofficial Reqnroll Documentation",
    "summary": "Class TestTracer Namespace Reqnroll.Tracing Assembly Reqnroll.dll public class TestTracer : ITestTracer Inheritance object TestTracer Implements ITestTracer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TestTracer(ITraceListener, IStepFormatter, IStepDefinitionSkeletonProvider, ReqnrollConfiguration, IColorOutputTheme, IColorOutputHelper) public TestTracer(ITraceListener traceListener, IStepFormatter stepFormatter, IStepDefinitionSkeletonProvider stepDefinitionSkeletonProvider, ReqnrollConfiguration reqnrollConfiguration, IColorOutputTheme colorOutputTheme, IColorOutputHelper colorOutputHelper) Parameters traceListener ITraceListener stepFormatter IStepFormatter stepDefinitionSkeletonProvider IStepDefinitionSkeletonProvider reqnrollConfiguration ReqnrollConfiguration colorOutputTheme IColorOutputTheme colorOutputHelper IColorOutputHelper Methods TraceBindingError(BindingException) public void TraceBindingError(BindingException ex) Parameters ex BindingException TraceDuration(TimeSpan, IBindingMethod, object[]) public void TraceDuration(TimeSpan elapsed, IBindingMethod method, object[] arguments) Parameters elapsed TimeSpan method IBindingMethod arguments object[] TraceDuration(TimeSpan, string) public void TraceDuration(TimeSpan elapsed, string text) Parameters elapsed TimeSpan text string TraceError(Exception, TimeSpan) public void TraceError(Exception ex, TimeSpan duration) Parameters ex Exception duration TimeSpan TraceNoMatchingStepDefinition(StepInstance, ProgrammingLanguage, CultureInfo, List<BindingMatch>) public void TraceNoMatchingStepDefinition(StepInstance stepInstance, ProgrammingLanguage targetLanguage, CultureInfo bindingCulture, List<BindingMatch> matchesWithoutScopeCheck) Parameters stepInstance StepInstance targetLanguage ProgrammingLanguage bindingCulture CultureInfo matchesWithoutScopeCheck List<BindingMatch> TraceStep(StepInstance, bool) public void TraceStep(StepInstance stepInstance, bool showAdditionalArguments) Parameters stepInstance StepInstance showAdditionalArguments bool TraceStepDone(BindingMatch, object[], TimeSpan) public void TraceStepDone(BindingMatch match, object[] arguments, TimeSpan duration) Parameters match BindingMatch arguments object[] duration TimeSpan TraceStepPending(BindingMatch, object[]) public void TraceStepPending(BindingMatch match, object[] arguments) Parameters match BindingMatch arguments object[] TraceStepSkipped() public void TraceStepSkipped() TraceWarning(string) public void TraceWarning(string text) Parameters text string"
  },
  "api/Reqnroll.Tracing.TraceListenerHelper.html": {
    "href": "api/Reqnroll.Tracing.TraceListenerHelper.html",
    "title": "Class TraceListenerHelper | Unofficial Reqnroll Documentation",
    "summary": "Class TraceListenerHelper Namespace Reqnroll.Tracing Assembly Reqnroll.dll public static class TraceListenerHelper Inheritance object TraceListenerHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods WriteTestOutput(ITraceListener, string, params object[]) public static void WriteTestOutput(this ITraceListener traceListener, string messageFormat, params object[] args) Parameters traceListener ITraceListener messageFormat string args object[] WriteToolOutput(ITraceListener, string, params object[]) public static void WriteToolOutput(this ITraceListener traceListener, string messageFormat, params object[] args) Parameters traceListener ITraceListener messageFormat string args object[]"
  },
  "api/Reqnroll.Tracing.TraceListenerQueue.html": {
    "href": "api/Reqnroll.Tracing.TraceListenerQueue.html",
    "title": "Class TraceListenerQueue | Unofficial Reqnroll Documentation",
    "summary": "Class TraceListenerQueue Namespace Reqnroll.Tracing Assembly Reqnroll.dll public class TraceListenerQueue : ITraceListenerQueue, IDisposable Inheritance object TraceListenerQueue Implements ITraceListenerQueue IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TraceListenerQueue(ITraceListener, ITestRunnerManager) public TraceListenerQueue(ITraceListener traceListener, ITestRunnerManager testRunnerManager) Parameters traceListener ITraceListener testRunnerManager ITestRunnerManager Methods Dispose() public void Dispose() EnqueueMessage(ITestRunner, string, bool) public void EnqueueMessage(ITestRunner sourceTestRunner, string message, bool isToolMessgae) Parameters sourceTestRunner ITestRunner message string isToolMessgae bool Start() public void Start()"
  },
  "api/Reqnroll.Tracing.html": {
    "href": "api/Reqnroll.Tracing.html",
    "title": "Namespace Reqnroll.Tracing | Unofficial Reqnroll Documentation",
    "summary": "Namespace Reqnroll.Tracing Classes AsyncTraceListener CodeFormattingExtensions ColorOutputHelper ColorOutputTheme DefaultListener NullListener TestTracer TraceListenerHelper TraceListenerQueue Interfaces IColorOutputHelper IColorOutputTheme IStepFormatter ITestTracer IThreadSafeTraceListener Marker interface for trace listener that do not need queued execution ITraceListener ITraceListenerQueue"
  },
  "api/Reqnroll.UnitTestProvider.IUnitTestRuntimeProvider.html": {
    "href": "api/Reqnroll.UnitTestProvider.IUnitTestRuntimeProvider.html",
    "title": "Interface IUnitTestRuntimeProvider | Unofficial Reqnroll Documentation",
    "summary": "Interface IUnitTestRuntimeProvider Namespace Reqnroll.UnitTestProvider Assembly Reqnroll.dll public interface IUnitTestRuntimeProvider Methods TestIgnore(string) void TestIgnore(string message) Parameters message string TestInconclusive(string) void TestInconclusive(string message) Parameters message string TestPending(string) void TestPending(string message) Parameters message string"
  },
  "api/Reqnroll.UnitTestProvider.UnitTestProviderConfiguration.html": {
    "href": "api/Reqnroll.UnitTestProvider.UnitTestProviderConfiguration.html",
    "title": "Class UnitTestProviderConfiguration | Unofficial Reqnroll Documentation",
    "summary": "Class UnitTestProviderConfiguration Namespace Reqnroll.UnitTestProvider Assembly Reqnroll.dll public class UnitTestProviderConfiguration Inheritance object UnitTestProviderConfiguration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties UnitTestProvider public string UnitTestProvider { get; } Property Value string Methods UseUnitTestProvider(string) public void UseUnitTestProvider(string unitTestProviderName) Parameters unitTestProviderName string"
  },
  "api/Reqnroll.UnitTestProvider.html": {
    "href": "api/Reqnroll.UnitTestProvider.html",
    "title": "Namespace Reqnroll.UnitTestProvider | Unofficial Reqnroll Documentation",
    "summary": "Namespace Reqnroll.UnitTestProvider Classes UnitTestProviderConfiguration Interfaces IUnitTestRuntimeProvider"
  },
  "api/Reqnroll.WhenAttribute.html": {
    "href": "api/Reqnroll.WhenAttribute.html",
    "title": "Class WhenAttribute | Unofficial Reqnroll Documentation",
    "summary": "Class WhenAttribute Namespace Reqnroll Assembly Reqnroll.dll Specifies a 'When' step definition that matches for the provided regular expression. public class WhenAttribute : StepDefinitionBaseAttribute Inheritance object Attribute StepDefinitionBaseAttribute WhenAttribute Inherited Members StepDefinitionBaseAttribute.Types StepDefinitionBaseAttribute.Regex StepDefinitionBaseAttribute.Culture Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors WhenAttribute() public WhenAttribute() WhenAttribute(string) public WhenAttribute(string regex) Parameters regex string WhenAttribute(string, string) public WhenAttribute(string regex, string culture) Parameters regex string culture string"
  },
  "api/Reqnroll.html": {
    "href": "api/Reqnroll.html",
    "title": "Namespace Reqnroll | Unofficial Reqnroll Documentation",
    "summary": "Namespace Reqnroll Classes AfterAttribute Specifies a hook to be executed after each scenario. This attribute is a synonym to AfterScenarioAttribute. AfterFeatureAttribute AfterScenarioAttribute Specifies a hook to be executed after each scenario. AfterScenarioBlockAttribute AfterStepAttribute AfterTestRunAttribute BeforeAttribute Specifies a hook to be executed before each scenario. This attribute is a synonym to BeforeScenarioAttribute. BeforeFeatureAttribute BeforeScenarioAttribute Specifies a hook to be executed before each scenario. BeforeScenarioBlockAttribute BeforeStepAttribute BeforeTestRunAttribute BindingAttribute Marker attribute that specifies that this class may contain bindings (step definitions, hooks, etc.) BindingException ColumnCouldNotBeBoundException ComparisonException DataTable Represents a Gherkin Data Table. DataTableRow DataTableRows DefaultTestRunContext EnvironmentVariableNames FeatureContext FeatureInfo GivenAttribute Specifies a 'Given' step definition that matches for the provided regular expression. HookAttribute InstanceComparisonExtensionMethods MissingStepDefinitionException PendingStepException ReqnrollContext ReqnrollException ScenarioContext ScenarioInfo Contains information about the scenario currently being executed. ScenarioStepContext ScopeAttribute Restricts the binding attributes (step definition, hook, etc.) to be applied only in a specific scope. SetComparisonExtensionMethods StepArgumentTransformationAttribute Specifies the method to be used as a custom step definition parameter conversion. StepDefinitionAttribute Specifies a step definition that matches for the provided regular expression and any step kinds (given, when, then). StepDefinitionBaseAttribute StepInfo Steps Table An alias for the DataTable class for backwards compatibility. TableHelperExtensionMethods TableHelpers TagHelper Provides helper methods around tags. TestRunner TestRunnerDefaultArguments TestRunnerManager TestThreadContext ThenAttribute Specifies a 'Then' step definition that matches for the provided regular expression. WhenAttribute Specifies a 'When' step definition that matches for the provided regular expression. Structs CultureInfoScope Interfaces IFeatureContext IReqnrollContext IReqnrollOutputHelper IScenarioContext IScenarioStepContext ISyncTestRunner ITestRunContext ITestRunner ITestRunnerManager ITestThreadContext Enums ProgrammingLanguage ScenarioBlock ScenarioExecutionStatus"
  },
  "docs/installation-and-setup/setup-an-ide-for-reqnroll.html": {
    "href": "docs/installation-and-setup/setup-an-ide-for-reqnroll.html",
    "title": "Setup an IDE for Reqnroll | Unofficial Reqnroll Documentation",
    "summary": "Setup an IDE for Reqnroll While Reqnroll can be used without IDE integration, we strongly recommend setting up an IDE to fully leverage its productivity-enhancing features. Visual Studio 2022 Visual Studio Code Rider In order to use Reqnroll with Visual Studio 2022, you need to install the Reqnroll for Visual Studio 2022 extension. Important The Reqnroll with Visual Studio 2022 extension cannot work together with the SpecFlow for Visual Studio 2022 extension, as they both process feature files. As the Reqnroll extension also supports SpecFlow projects, you can remove the SpecFlow extension if you install the Reqnroll extension. Alternatively, you can disable the SpecFlow extension for the time you work with Reqnroll. Important The Reqnroll Visual Studio extension cannot be used for Visual Studio for Mac. On macOS we recommend using Visual Studio Code. Open Visual Studio 2022 From the Extensions menu, choose the Manage Extensions… command. On the dialog, make sure that Online is selected from the list on the left and type Reqnroll to the Search text box on the right top corner. Choose the Reqnroll for Visual Studio 2022 from the list and click on the Download button. Restart Visual Studio 2022. For using Reqnroll with Visual Studio Code, you can choose from multiple available extensions. We recommend using the Cucumber extension. In order to use the navigation features of the extension, you should configure the location of your feature files and step definition classes within your repository. The following Visual Studio configuration shows a typical configuration. .vscode/settings.json { \"explorer.fileNesting.enabled\": true, \"explorer.fileNesting.patterns\": { // shows *.feature.cs files as nested items \"*.feature\": \"${capture}.feature.cs\" }, \"files.exclude\": { // excludes compilation result \"**/obj/\": true, \"**/bin/\": true, }, \"cucumber.glue\": [ // sets the location of the step definition classes \"MyReqnrollProject/**/*.cs\", ], \"cucumber.features\": [ // sets the location of the feature files \"MyReqnrollProject/**/*.feature\", ] } In order to use Reqnroll with Rider, you need to install the Reqnroll for Rider extension. Important The Reqnroll with Rider extension cannot work together with the SpecFlow for Rider extension, as they both process feature files. As the Reqnroll extension also supports SpecFlow projects, you can remove the SpecFlow extension if you install the Reqnroll extension. Alternatively, you can disable the SpecFlow extension for the time you work with Reqnroll. Launch Rider and ensure you are using a compatible version. The following versions have been verified to work with Reqnroll: Rider compatibility Top right of Rider click the gear icon and press plugins. Click Marketplace. Enter Reqnroll in the search box and install. Open csproj and verify your project contains. <ItemGroup> <Content Include=\"**/*.feature\"/> </ItemGroup> Restart Rider"
  },
  "docs/installation-and-setup/setup-reqnroll-project.html": {
    "href": "docs/installation-and-setup/setup-reqnroll-project.html",
    "title": "Setup Reqnroll Project | Unofficial Reqnroll Documentation",
    "summary": "Setup Reqnroll Project We strongly recommend to configure your Integrated Development Environment (IDE) to work conveniently with Reqnroll. Choose test execution framework Reqnroll relies on a test execution framework to run tests. Choose one that aligns with your experience and requirements for the project. NUnit Nuget: Reqnroll.NUnit MsTest Nuget: Reqnroll.MsTest xUnit Nuget: Reqnroll.xUnit Setting up a Reqnroll project Visual Studio 2022 VS Code \uD83D\uDEE0️ Rider \uD83D\uDEE0️ Dotnet CLI Existing test project Prerequisites Before creating a new Reqnroll project, ensure the following: Reqnroll Visual Studio integration is installed. Your IDE is configured to support Reqnroll features. From the context menu of your solution in the Solution Explorer window, select Add / New Project… In the Add a new project dialog, enter Reqnroll into the Search for templates text box. Choose Reqnroll Project from the list and click Next. Follow the wizard to specify the project name, target framework, and test framework. As a result, a new Reqnroll project will be created with a sample feature file and step definition class. Build your project and execute the sample scenarios. TODO: Show an image or use a codeblock with a filetree. Do not link to sample feature file and step definition class WHY: We don't want to be thrown around in the documentation. Optional: Build your project and execute the sample scenarios. TODO: show how. Want to contribute ? Click on the Edit this page in the bottom of this site Want to contribute ? Click on the Edit this page in the bottom of this site Install the Reqnroll templates by running: dotnet new install Reqnroll.Templates.DotNet Once installed, create a project in a new directory: Note By default, the dotnet new reqnroll-project command creates a Reqnroll project configured with NUnit for the latest .NET framework. To customize the test framework or target .NET version, use the -t (test framework) and -f (framework version) options. For details about available options, run: dotnet new reqnroll-project --help mkdir MyReqnrollProject cd MyReqnrollProject dotnet new reqnroll-project Example: The following command creates a Reqnroll project with MsTest using .NET 6.0: dotnet new reqnroll-project -t mstest -f net6.0 As a result, a new Reqnroll project will be created with a sample feature file and step definition class. Build your project and execute the sample scenarios. TODO: Show an image or use a codeblock with a filetree. Do not link to sample feature file and step definition class WHY: We don't want to be thrown around in the documentation. Optional: Build your project and execute the sample scenarios. TODO: show how. Adding a Feature File Use the reqnroll-feature template to add a new feature file to your project. For example: dotnet new reqnroll-feature -n MyFeature Adding a Configuration File Use the reqnroll-config template to add a new configuration file to your project. For example: dotnet new reqnroll-config -n MyConfig Add the NuGet package of your chosen test execution framework to your project. Important The chosen test execution framework has to match the framework used in your existing test project. The following example adds the Reqnroll NuGet package for an MsTest project: dotnet add package Reqnroll.MsTest Although the Reqnroll tests can be mixed with normal unit tests in the same .NET project, for the sake of clarity it is recommended to create a separate project for your Reqnroll BDD scenarios."
  },
  "index.html": {
    "href": "index.html",
    "title": "Introduction | Unofficial Reqnroll Documentation",
    "summary": "Introduction What is Reqnroll ? Reqnroll was created as a community-maintained, open alternative to SpecFlow when SpecFlow transitioned to a closed-source model. It is a Behavior-Driven Development tool for .NET, that allows developers, testers, and business stakeholders to write human-readable acceptance tests that are directly executable against the application code. At its core, Reqnroll parses .feature files written in Gherkin syntax. These files contain scenarios, which describe software behavior using keywords like Given, When, and Then. Each scenario represents an example of how the system should behave in a specific situation. Reqnroll maps these scenarios to step definitions in C# code, allowing automated testing based on real-world specifications. Why use Reqnroll ? Drive development from user requirements Bridge the gab between requirements and code Write tests in a language both team and stakeholders understand Ensure BDD remains accessible and open-source for the .NET ecosystem Provide full control and visibility into BDD tooling"
  }
}