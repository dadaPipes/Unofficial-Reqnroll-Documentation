### YamlMime:ManagedReference
items:
- uid: Reqnroll.Bindings.BindingInvoker.ExtendedFunc`10
  commentId: T:Reqnroll.Bindings.BindingInvoker.ExtendedFunc`10
  id: BindingInvoker.ExtendedFunc`10
  parent: Reqnroll.Bindings
  children: []
  langs:
  - csharp
  - vb
  name: BindingInvoker.ExtendedFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>
  nameWithType: BindingInvoker.ExtendedFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>
  fullName: Reqnroll.Bindings.BindingInvoker.ExtendedFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>
  type: Delegate
  source:
    remote:
      path: Reqnroll/Bindings/BindingInvoker.cs
      branch: main
      repo: git@github.com:reqnroll/Reqnroll.git
    id: ExtendedFunc
    path: ../Reqnroll/Reqnroll/Bindings/BindingInvoker.cs
    startLine: 227
  assemblies:
  - Reqnroll
  namespace: Reqnroll.Bindings
  syntax:
    content: public delegate TResult BindingInvoker.ExtendedFunc<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9)
    parameters:
    - id: arg1
      type: '{T1}'
    - id: arg2
      type: '{T2}'
    - id: arg3
      type: '{T3}'
    - id: arg4
      type: '{T4}'
    - id: arg5
      type: '{T5}'
    - id: arg6
      type: '{T6}'
    - id: arg7
      type: '{T7}'
    - id: arg8
      type: '{T8}'
    - id: arg9
      type: '{T9}'
    typeParameters:
    - id: T1
    - id: T2
    - id: T3
    - id: T4
    - id: T5
    - id: T6
    - id: T7
    - id: T8
    - id: T9
    - id: TResult
    return:
      type: '{TResult}'
    content.vb: Public Delegate Function BindingInvoker.ExtendedFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult)(arg1 As T1, arg2 As T2, arg3 As T3, arg4 As T4, arg5 As T5, arg6 As T6, arg7 As T7, arg8 As T8, arg9 As T9) As TResult
  nameWithType.vb: BindingInvoker.ExtendedFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult)
  fullName.vb: Reqnroll.Bindings.BindingInvoker.ExtendedFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult)
  name.vb: BindingInvoker.ExtendedFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult)
references:
- uid: Reqnroll.Bindings
  commentId: N:Reqnroll.Bindings
  href: Reqnroll.html
  name: Reqnroll.Bindings
  nameWithType: Reqnroll.Bindings
  fullName: Reqnroll.Bindings
  spec.csharp:
  - uid: Reqnroll
    name: Reqnroll
    href: Reqnroll.html
  - name: .
  - uid: Reqnroll.Bindings
    name: Bindings
    href: Reqnroll.Bindings.html
  spec.vb:
  - uid: Reqnroll
    name: Reqnroll
    href: Reqnroll.html
  - name: .
  - uid: Reqnroll.Bindings
    name: Bindings
    href: Reqnroll.Bindings.html
- uid: '{T1}'
  commentId: '!:T1'
  definition: T1
  name: T1
  nameWithType: T1
  fullName: T1
- uid: '{T2}'
  commentId: '!:T2'
  definition: T2
  name: T2
  nameWithType: T2
  fullName: T2
- uid: '{T3}'
  commentId: '!:T3'
  definition: T3
  name: T3
  nameWithType: T3
  fullName: T3
- uid: '{T4}'
  commentId: '!:T4'
  definition: T4
  name: T4
  nameWithType: T4
  fullName: T4
- uid: '{T5}'
  commentId: '!:T5'
  definition: T5
  name: T5
  nameWithType: T5
  fullName: T5
- uid: '{T6}'
  commentId: '!:T6'
  definition: T6
  name: T6
  nameWithType: T6
  fullName: T6
- uid: '{T7}'
  commentId: '!:T7'
  definition: T7
  name: T7
  nameWithType: T7
  fullName: T7
- uid: '{T8}'
  commentId: '!:T8'
  definition: T8
  name: T8
  nameWithType: T8
  fullName: T8
- uid: '{T9}'
  commentId: '!:T9'
  definition: T9
  name: T9
  nameWithType: T9
  fullName: T9
- uid: '{TResult}'
  commentId: '!:TResult'
  definition: TResult
  name: TResult
  nameWithType: TResult
  fullName: TResult
- uid: T1
  name: T1
  nameWithType: T1
  fullName: T1
- uid: T2
  name: T2
  nameWithType: T2
  fullName: T2
- uid: T3
  name: T3
  nameWithType: T3
  fullName: T3
- uid: T4
  name: T4
  nameWithType: T4
  fullName: T4
- uid: T5
  name: T5
  nameWithType: T5
  fullName: T5
- uid: T6
  name: T6
  nameWithType: T6
  fullName: T6
- uid: T7
  name: T7
  nameWithType: T7
  fullName: T7
- uid: T8
  name: T8
  nameWithType: T8
  fullName: T8
- uid: T9
  name: T9
  nameWithType: T9
  fullName: T9
- uid: TResult
  name: TResult
  nameWithType: TResult
  fullName: TResult
