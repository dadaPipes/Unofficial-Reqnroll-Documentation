### YamlMime:ManagedReference
items:
- uid: Reqnroll.Analytics.UserId.IDirectoryService
  commentId: T:Reqnroll.Analytics.UserId.IDirectoryService
  id: IDirectoryService
  parent: Reqnroll.Analytics.UserId
  children:
  - Reqnroll.Analytics.UserId.IDirectoryService.CreateDirectory(System.String)
  - Reqnroll.Analytics.UserId.IDirectoryService.Exists(System.String)
  langs:
  - csharp
  - vb
  name: IDirectoryService
  nameWithType: IDirectoryService
  fullName: Reqnroll.Analytics.UserId.IDirectoryService
  type: Interface
  source:
    remote:
      path: Reqnroll/Analytics/UserId/IDirectoryService.cs
      branch: main
      repo: git@github.com:reqnroll/Reqnroll.git
    id: IDirectoryService
    path: ../Reqnroll/Reqnroll/Analytics/UserId/IDirectoryService.cs
    startLine: 2
  assemblies:
  - Reqnroll
  namespace: Reqnroll.Analytics.UserId
  syntax:
    content: public interface IDirectoryService
    content.vb: Public Interface IDirectoryService
- uid: Reqnroll.Analytics.UserId.IDirectoryService.Exists(System.String)
  commentId: M:Reqnroll.Analytics.UserId.IDirectoryService.Exists(System.String)
  id: Exists(System.String)
  parent: Reqnroll.Analytics.UserId.IDirectoryService
  langs:
  - csharp
  - vb
  name: Exists(string)
  nameWithType: IDirectoryService.Exists(string)
  fullName: Reqnroll.Analytics.UserId.IDirectoryService.Exists(string)
  type: Method
  source:
    remote:
      path: Reqnroll/Analytics/UserId/IDirectoryService.cs
      branch: main
      repo: git@github.com:reqnroll/Reqnroll.git
    id: Exists
    path: ../Reqnroll/Reqnroll/Analytics/UserId/IDirectoryService.cs
    startLine: 4
  assemblies:
  - Reqnroll
  namespace: Reqnroll.Analytics.UserId
  syntax:
    content: bool Exists(string path)
    parameters:
    - id: path
      type: System.String
    return:
      type: System.Boolean
    content.vb: Function Exists(path As String) As Boolean
  overload: Reqnroll.Analytics.UserId.IDirectoryService.Exists*
  nameWithType.vb: IDirectoryService.Exists(String)
  fullName.vb: Reqnroll.Analytics.UserId.IDirectoryService.Exists(String)
  name.vb: Exists(String)
- uid: Reqnroll.Analytics.UserId.IDirectoryService.CreateDirectory(System.String)
  commentId: M:Reqnroll.Analytics.UserId.IDirectoryService.CreateDirectory(System.String)
  id: CreateDirectory(System.String)
  parent: Reqnroll.Analytics.UserId.IDirectoryService
  langs:
  - csharp
  - vb
  name: CreateDirectory(string)
  nameWithType: IDirectoryService.CreateDirectory(string)
  fullName: Reqnroll.Analytics.UserId.IDirectoryService.CreateDirectory(string)
  type: Method
  source:
    remote:
      path: Reqnroll/Analytics/UserId/IDirectoryService.cs
      branch: main
      repo: git@github.com:reqnroll/Reqnroll.git
    id: CreateDirectory
    path: ../Reqnroll/Reqnroll/Analytics/UserId/IDirectoryService.cs
    startLine: 5
  assemblies:
  - Reqnroll
  namespace: Reqnroll.Analytics.UserId
  syntax:
    content: void CreateDirectory(string path)
    parameters:
    - id: path
      type: System.String
    content.vb: Sub CreateDirectory(path As String)
  overload: Reqnroll.Analytics.UserId.IDirectoryService.CreateDirectory*
  nameWithType.vb: IDirectoryService.CreateDirectory(String)
  fullName.vb: Reqnroll.Analytics.UserId.IDirectoryService.CreateDirectory(String)
  name.vb: CreateDirectory(String)
references:
- uid: Reqnroll.Analytics.UserId
  commentId: N:Reqnroll.Analytics.UserId
  href: Reqnroll.html
  name: Reqnroll.Analytics.UserId
  nameWithType: Reqnroll.Analytics.UserId
  fullName: Reqnroll.Analytics.UserId
  spec.csharp:
  - uid: Reqnroll
    name: Reqnroll
    href: Reqnroll.html
  - name: .
  - uid: Reqnroll.Analytics
    name: Analytics
    href: Reqnroll.Analytics.html
  - name: .
  - uid: Reqnroll.Analytics.UserId
    name: UserId
    href: Reqnroll.Analytics.UserId.html
  spec.vb:
  - uid: Reqnroll
    name: Reqnroll
    href: Reqnroll.html
  - name: .
  - uid: Reqnroll.Analytics
    name: Analytics
    href: Reqnroll.Analytics.html
  - name: .
  - uid: Reqnroll.Analytics.UserId
    name: UserId
    href: Reqnroll.Analytics.UserId.html
- uid: Reqnroll.Analytics.UserId.IDirectoryService.Exists*
  commentId: Overload:Reqnroll.Analytics.UserId.IDirectoryService.Exists
  href: Reqnroll.Analytics.UserId.IDirectoryService.html#Reqnroll_Analytics_UserId_IDirectoryService_Exists_System_String_
  name: Exists
  nameWithType: IDirectoryService.Exists
  fullName: Reqnroll.Analytics.UserId.IDirectoryService.Exists
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Reqnroll.Analytics.UserId.IDirectoryService.CreateDirectory*
  commentId: Overload:Reqnroll.Analytics.UserId.IDirectoryService.CreateDirectory
  href: Reqnroll.Analytics.UserId.IDirectoryService.html#Reqnroll_Analytics_UserId_IDirectoryService_CreateDirectory_System_String_
  name: CreateDirectory
  nameWithType: IDirectoryService.CreateDirectory
  fullName: Reqnroll.Analytics.UserId.IDirectoryService.CreateDirectory
