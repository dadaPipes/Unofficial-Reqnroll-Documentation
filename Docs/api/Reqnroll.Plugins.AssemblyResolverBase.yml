### YamlMime:ManagedReference
items:
- uid: Reqnroll.Plugins.AssemblyResolverBase
  commentId: T:Reqnroll.Plugins.AssemblyResolverBase
  id: AssemblyResolverBase
  parent: Reqnroll.Plugins
  children:
  - Reqnroll.Plugins.AssemblyResolverBase.#ctor(System.String)
  - Reqnroll.Plugins.AssemblyResolverBase.GetAssembly
  - Reqnroll.Plugins.AssemblyResolverBase.Initialize(System.String)
  - Reqnroll.Plugins.AssemblyResolverBase.LoadAssemblyFromPath(System.String)
  - Reqnroll.Plugins.AssemblyResolverBase.SetupDependencyContext(System.String,System.Reflection.Assembly,System.Boolean)
  - Reqnroll.Plugins.AssemblyResolverBase.TryResolveAssembly(System.Reflection.AssemblyName)
  langs:
  - csharp
  - vb
  name: AssemblyResolverBase
  nameWithType: AssemblyResolverBase
  fullName: Reqnroll.Plugins.AssemblyResolverBase
  type: Class
  source:
    remote:
      path: Reqnroll/Plugins/AssemblyResolverBase.cs
      branch: main
      repo: git@github.com:reqnroll/Reqnroll.git
    id: AssemblyResolverBase
    path: ../Reqnroll/Reqnroll/Plugins/AssemblyResolverBase.cs
    startLine: 10
  assemblies:
  - Reqnroll
  namespace: Reqnroll.Plugins
  syntax:
    content: public abstract class AssemblyResolverBase
    content.vb: Public MustInherit Class AssemblyResolverBase
  inheritance:
  - System.Object
  derivedClasses:
  - Reqnroll.Plugins.DotNetCorePluginAssemblyResolver
  - Reqnroll.Plugins.DotNetFrameworkPluginAssemblyResolver
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Reqnroll.Plugins.AssemblyResolverBase.GetAssembly
  commentId: M:Reqnroll.Plugins.AssemblyResolverBase.GetAssembly
  id: GetAssembly
  parent: Reqnroll.Plugins.AssemblyResolverBase
  langs:
  - csharp
  - vb
  name: GetAssembly()
  nameWithType: AssemblyResolverBase.GetAssembly()
  fullName: Reqnroll.Plugins.AssemblyResolverBase.GetAssembly()
  type: Method
  source:
    remote:
      path: Reqnroll/Plugins/AssemblyResolverBase.cs
      branch: main
      repo: git@github.com:reqnroll/Reqnroll.git
    id: GetAssembly
    path: ../Reqnroll/Reqnroll/Plugins/AssemblyResolverBase.cs
    startLine: 14
  assemblies:
  - Reqnroll
  namespace: Reqnroll.Plugins
  syntax:
    content: public Assembly GetAssembly()
    return:
      type: System.Reflection.Assembly
    content.vb: Public Function GetAssembly() As Assembly
  overload: Reqnroll.Plugins.AssemblyResolverBase.GetAssembly*
- uid: Reqnroll.Plugins.AssemblyResolverBase.#ctor(System.String)
  commentId: M:Reqnroll.Plugins.AssemblyResolverBase.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Reqnroll.Plugins.AssemblyResolverBase
  langs:
  - csharp
  - vb
  name: AssemblyResolverBase(string)
  nameWithType: AssemblyResolverBase.AssemblyResolverBase(string)
  fullName: Reqnroll.Plugins.AssemblyResolverBase.AssemblyResolverBase(string)
  type: Constructor
  source:
    remote:
      path: Reqnroll/Plugins/AssemblyResolverBase.cs
      branch: main
      repo: git@github.com:reqnroll/Reqnroll.git
    id: .ctor
    path: ../Reqnroll/Reqnroll/Plugins/AssemblyResolverBase.cs
    startLine: 19
  assemblies:
  - Reqnroll
  namespace: Reqnroll.Plugins
  syntax:
    content: protected AssemblyResolverBase(string relativePath)
    parameters:
    - id: relativePath
      type: System.String
    content.vb: Protected Sub New(relativePath As String)
  overload: Reqnroll.Plugins.AssemblyResolverBase.#ctor*
  nameWithType.vb: AssemblyResolverBase.New(String)
  fullName.vb: Reqnroll.Plugins.AssemblyResolverBase.New(String)
  name.vb: New(String)
- uid: Reqnroll.Plugins.AssemblyResolverBase.Initialize(System.String)
  commentId: M:Reqnroll.Plugins.AssemblyResolverBase.Initialize(System.String)
  id: Initialize(System.String)
  parent: Reqnroll.Plugins.AssemblyResolverBase
  langs:
  - csharp
  - vb
  name: Initialize(string)
  nameWithType: AssemblyResolverBase.Initialize(string)
  fullName: Reqnroll.Plugins.AssemblyResolverBase.Initialize(string)
  type: Method
  source:
    remote:
      path: Reqnroll/Plugins/AssemblyResolverBase.cs
      branch: main
      repo: git@github.com:reqnroll/Reqnroll.git
    id: Initialize
    path: ../Reqnroll/Reqnroll/Plugins/AssemblyResolverBase.cs
    startLine: 25
  assemblies:
  - Reqnroll
  namespace: Reqnroll.Plugins
  syntax:
    content: protected abstract Assembly Initialize(string path)
    parameters:
    - id: path
      type: System.String
    return:
      type: System.Reflection.Assembly
    content.vb: Protected MustOverride Function Initialize(path As String) As Assembly
  overload: Reqnroll.Plugins.AssemblyResolverBase.Initialize*
  nameWithType.vb: AssemblyResolverBase.Initialize(String)
  fullName.vb: Reqnroll.Plugins.AssemblyResolverBase.Initialize(String)
  name.vb: Initialize(String)
- uid: Reqnroll.Plugins.AssemblyResolverBase.SetupDependencyContext(System.String,System.Reflection.Assembly,System.Boolean)
  commentId: M:Reqnroll.Plugins.AssemblyResolverBase.SetupDependencyContext(System.String,System.Reflection.Assembly,System.Boolean)
  id: SetupDependencyContext(System.String,System.Reflection.Assembly,System.Boolean)
  parent: Reqnroll.Plugins.AssemblyResolverBase
  langs:
  - csharp
  - vb
  name: SetupDependencyContext(string, Assembly, bool)
  nameWithType: AssemblyResolverBase.SetupDependencyContext(string, Assembly, bool)
  fullName: Reqnroll.Plugins.AssemblyResolverBase.SetupDependencyContext(string, System.Reflection.Assembly, bool)
  type: Method
  source:
    remote:
      path: Reqnroll/Plugins/AssemblyResolverBase.cs
      branch: main
      repo: git@github.com:reqnroll/Reqnroll.git
    id: SetupDependencyContext
    path: ../Reqnroll/Reqnroll/Plugins/AssemblyResolverBase.cs
    startLine: 27
  assemblies:
  - Reqnroll
  namespace: Reqnroll.Plugins
  syntax:
    content: protected void SetupDependencyContext(string path, Assembly assembly, bool throwOnError)
    parameters:
    - id: path
      type: System.String
    - id: assembly
      type: System.Reflection.Assembly
    - id: throwOnError
      type: System.Boolean
    content.vb: Protected Sub SetupDependencyContext(path As String, assembly As Assembly, throwOnError As Boolean)
  overload: Reqnroll.Plugins.AssemblyResolverBase.SetupDependencyContext*
  nameWithType.vb: AssemblyResolverBase.SetupDependencyContext(String, Assembly, Boolean)
  fullName.vb: Reqnroll.Plugins.AssemblyResolverBase.SetupDependencyContext(String, System.Reflection.Assembly, Boolean)
  name.vb: SetupDependencyContext(String, Assembly, Boolean)
- uid: Reqnroll.Plugins.AssemblyResolverBase.LoadAssemblyFromPath(System.String)
  commentId: M:Reqnroll.Plugins.AssemblyResolverBase.LoadAssemblyFromPath(System.String)
  id: LoadAssemblyFromPath(System.String)
  parent: Reqnroll.Plugins.AssemblyResolverBase
  langs:
  - csharp
  - vb
  name: LoadAssemblyFromPath(string)
  nameWithType: AssemblyResolverBase.LoadAssemblyFromPath(string)
  fullName: Reqnroll.Plugins.AssemblyResolverBase.LoadAssemblyFromPath(string)
  type: Method
  source:
    remote:
      path: Reqnroll/Plugins/AssemblyResolverBase.cs
      branch: main
      repo: git@github.com:reqnroll/Reqnroll.git
    id: LoadAssemblyFromPath
    path: ../Reqnroll/Reqnroll/Plugins/AssemblyResolverBase.cs
    startLine: 51
  assemblies:
  - Reqnroll
  namespace: Reqnroll.Plugins
  syntax:
    content: protected abstract Assembly LoadAssemblyFromPath(string assemblyPath)
    parameters:
    - id: assemblyPath
      type: System.String
    return:
      type: System.Reflection.Assembly
    content.vb: Protected MustOverride Function LoadAssemblyFromPath(assemblyPath As String) As Assembly
  overload: Reqnroll.Plugins.AssemblyResolverBase.LoadAssemblyFromPath*
  nameWithType.vb: AssemblyResolverBase.LoadAssemblyFromPath(String)
  fullName.vb: Reqnroll.Plugins.AssemblyResolverBase.LoadAssemblyFromPath(String)
  name.vb: LoadAssemblyFromPath(String)
- uid: Reqnroll.Plugins.AssemblyResolverBase.TryResolveAssembly(System.Reflection.AssemblyName)
  commentId: M:Reqnroll.Plugins.AssemblyResolverBase.TryResolveAssembly(System.Reflection.AssemblyName)
  id: TryResolveAssembly(System.Reflection.AssemblyName)
  parent: Reqnroll.Plugins.AssemblyResolverBase
  langs:
  - csharp
  - vb
  name: TryResolveAssembly(AssemblyName)
  nameWithType: AssemblyResolverBase.TryResolveAssembly(AssemblyName)
  fullName: Reqnroll.Plugins.AssemblyResolverBase.TryResolveAssembly(System.Reflection.AssemblyName)
  type: Method
  source:
    remote:
      path: Reqnroll/Plugins/AssemblyResolverBase.cs
      branch: main
      repo: git@github.com:reqnroll/Reqnroll.git
    id: TryResolveAssembly
    path: ../Reqnroll/Reqnroll/Plugins/AssemblyResolverBase.cs
    startLine: 53
  assemblies:
  - Reqnroll
  namespace: Reqnroll.Plugins
  syntax:
    content: protected Assembly TryResolveAssembly(AssemblyName name)
    parameters:
    - id: name
      type: System.Reflection.AssemblyName
    return:
      type: System.Reflection.Assembly
    content.vb: Protected Function TryResolveAssembly(name As AssemblyName) As Assembly
  overload: Reqnroll.Plugins.AssemblyResolverBase.TryResolveAssembly*
references:
- uid: Reqnroll.Plugins
  commentId: N:Reqnroll.Plugins
  href: Reqnroll.html
  name: Reqnroll.Plugins
  nameWithType: Reqnroll.Plugins
  fullName: Reqnroll.Plugins
  spec.csharp:
  - uid: Reqnroll
    name: Reqnroll
    href: Reqnroll.html
  - name: .
  - uid: Reqnroll.Plugins
    name: Plugins
    href: Reqnroll.Plugins.html
  spec.vb:
  - uid: Reqnroll
    name: Reqnroll
    href: Reqnroll.html
  - name: .
  - uid: Reqnroll.Plugins
    name: Plugins
    href: Reqnroll.Plugins.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Reqnroll.Plugins.AssemblyResolverBase.GetAssembly*
  commentId: Overload:Reqnroll.Plugins.AssemblyResolverBase.GetAssembly
  href: Reqnroll.Plugins.AssemblyResolverBase.html#Reqnroll_Plugins_AssemblyResolverBase_GetAssembly
  name: GetAssembly
  nameWithType: AssemblyResolverBase.GetAssembly
  fullName: Reqnroll.Plugins.AssemblyResolverBase.GetAssembly
- uid: System.Reflection.Assembly
  commentId: T:System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.reflection.assembly
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Reflection
    name: Reflection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Reflection
    name: Reflection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection
- uid: Reqnroll.Plugins.AssemblyResolverBase.#ctor*
  commentId: Overload:Reqnroll.Plugins.AssemblyResolverBase.#ctor
  href: Reqnroll.Plugins.AssemblyResolverBase.html#Reqnroll_Plugins_AssemblyResolverBase__ctor_System_String_
  name: AssemblyResolverBase
  nameWithType: AssemblyResolverBase.AssemblyResolverBase
  fullName: Reqnroll.Plugins.AssemblyResolverBase.AssemblyResolverBase
  nameWithType.vb: AssemblyResolverBase.New
  fullName.vb: Reqnroll.Plugins.AssemblyResolverBase.New
  name.vb: New
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Reqnroll.Plugins.AssemblyResolverBase.Initialize*
  commentId: Overload:Reqnroll.Plugins.AssemblyResolverBase.Initialize
  href: Reqnroll.Plugins.AssemblyResolverBase.html#Reqnroll_Plugins_AssemblyResolverBase_Initialize_System_String_
  name: Initialize
  nameWithType: AssemblyResolverBase.Initialize
  fullName: Reqnroll.Plugins.AssemblyResolverBase.Initialize
- uid: Reqnroll.Plugins.AssemblyResolverBase.SetupDependencyContext*
  commentId: Overload:Reqnroll.Plugins.AssemblyResolverBase.SetupDependencyContext
  href: Reqnroll.Plugins.AssemblyResolverBase.html#Reqnroll_Plugins_AssemblyResolverBase_SetupDependencyContext_System_String_System_Reflection_Assembly_System_Boolean_
  name: SetupDependencyContext
  nameWithType: AssemblyResolverBase.SetupDependencyContext
  fullName: Reqnroll.Plugins.AssemblyResolverBase.SetupDependencyContext
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Reqnroll.Plugins.AssemblyResolverBase.LoadAssemblyFromPath*
  commentId: Overload:Reqnroll.Plugins.AssemblyResolverBase.LoadAssemblyFromPath
  href: Reqnroll.Plugins.AssemblyResolverBase.html#Reqnroll_Plugins_AssemblyResolverBase_LoadAssemblyFromPath_System_String_
  name: LoadAssemblyFromPath
  nameWithType: AssemblyResolverBase.LoadAssemblyFromPath
  fullName: Reqnroll.Plugins.AssemblyResolverBase.LoadAssemblyFromPath
- uid: Reqnroll.Plugins.AssemblyResolverBase.TryResolveAssembly*
  commentId: Overload:Reqnroll.Plugins.AssemblyResolverBase.TryResolveAssembly
  href: Reqnroll.Plugins.AssemblyResolverBase.html#Reqnroll_Plugins_AssemblyResolverBase_TryResolveAssembly_System_Reflection_AssemblyName_
  name: TryResolveAssembly
  nameWithType: AssemblyResolverBase.TryResolveAssembly
  fullName: Reqnroll.Plugins.AssemblyResolverBase.TryResolveAssembly
- uid: System.Reflection.AssemblyName
  commentId: T:System.Reflection.AssemblyName
  parent: System.Reflection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.reflection.assemblyname
  name: AssemblyName
  nameWithType: AssemblyName
  fullName: System.Reflection.AssemblyName
